//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System.Data.Entity.Infrastructure.MappingViews;

[assembly: DbMappingViewCacheTypeAttribute(
    typeof(Company.DIV.ConfigMgr.Data.Read.ConfigMgrReadContext),
    typeof(Edm_EntityMappingGeneratedViews.ViewsForBaseEntitySets316d17e944dccab959cbd54a17262dbf3f80675a539f8b5e5c466321a90c7aec))]

namespace Edm_EntityMappingGeneratedViews
{
    using System;
    using System.CodeDom.Compiler;
    using System.Data.Entity.Core.Metadata.Edm;

    /// <summary>
    /// Implements a mapping view cache.
    /// </summary>
    [GeneratedCode("Entity Framework Power Tools", "0.9.0.0")]
    internal sealed class ViewsForBaseEntitySets316d17e944dccab959cbd54a17262dbf3f80675a539f8b5e5c466321a90c7aec : DbMappingViewCache
    {
        /// <summary>
        /// Gets a hash value computed over the mapping closure.
        /// </summary>
        public override string MappingHashValue
        {
            get { return "316d17e944dccab959cbd54a17262dbf3f80675a539f8b5e5c466321a90c7aec"; }
        }

        /// <summary>
        /// Gets a view corresponding to the specified extent.
        /// </summary>
        /// <param name="extent">The extent.</param>
        /// <returns>The mapping view, or null if the extent is not associated with a mapping view.</returns>
        public override DbMappingView GetView(EntitySetBase extent)
        {
            if (extent == null)
            {
                throw new ArgumentNullException("extent");
            }

            var extentName = extent.EntityContainer.Name + "." + extent.Name;

            if (extentName == "CodeFirstDatabase.App")
            {
                return GetView0();
            }

            if (extentName == "CodeFirstDatabase.Config")
            {
                return GetView1();
            }

            if (extentName == "CodeFirstDatabase.ConfigParamDEV1")
            {
                return GetView2();
            }

            if (extentName == "CodeFirstDatabase.ParamDefinition")
            {
                return GetView3();
            }

            if (extentName == "CodeFirstDatabase.ConfigParamDEV2")
            {
                return GetView4();
            }

            if (extentName == "CodeFirstDatabase.ConfigParamPROD")
            {
                return GetView5();
            }

            if (extentName == "CodeFirstDatabase.ConfigParamQA1")
            {
                return GetView6();
            }

            if (extentName == "CodeFirstDatabase.ConfigParamQA2")
            {
                return GetView7();
            }

            if (extentName == "CodeFirstDatabase.ConfigParamSTG1")
            {
                return GetView8();
            }

            if (extentName == "CodeFirstDatabase.ConfigParamSTG2")
            {
                return GetView9();
            }

            if (extentName == "CodeFirstDatabase.ParamType")
            {
                return GetView10();
            }

            if (extentName == "CodeFirstDatabase.ParamVersion")
            {
                return GetView11();
            }

            if (extentName == "CodeFirstDatabase.Executable")
            {
                return GetView12();
            }

            if (extentName == "CodeFirstDatabase.JConfigExecutable")
            {
                return GetView13();
            }

            if (extentName == "CodeFirstDatabase.JExecutablePathServer")
            {
                return GetView14();
            }

            if (extentName == "CodeFirstDatabase.PathServer")
            {
                return GetView15();
            }

            if (extentName == "CodeFirstDatabase.JPathServerPathShare")
            {
                return GetView16();
            }

            if (extentName == "CodeFirstDatabase.PathShare")
            {
                return GetView17();
            }

            if (extentName == "CodeFirstDatabase.JExecutablePrimaryFunction")
            {
                return GetView18();
            }

            if (extentName == "CodeFirstDatabase.PrimaryFunction")
            {
                return GetView19();
            }

            if (extentName == "CodeFirstDatabase.JConfigJPlanLOB")
            {
                return GetView20();
            }

            if (extentName == "CodeFirstDatabase.JPlanLOB")
            {
                return GetView21();
            }

            if (extentName == "CodeFirstDatabase.LineOfBusiness")
            {
                return GetView22();
            }

            if (extentName == "CodeFirstDatabase.Plan")
            {
                return GetView23();
            }

            if (extentName == "CodeFirstDatabase.JAppPlan")
            {
                return GetView24();
            }

            if (extentName == "CodeFirstDatabase.JConfigPlan")
            {
                return GetView25();
            }

            if (extentName == "ConfigMgrReadContext.app")
            {
                return GetView26();
            }

            if (extentName == "ConfigMgrReadContext.config")
            {
                return GetView27();
            }

            if (extentName == "ConfigMgrReadContext.configParamDev1")
            {
                return GetView28();
            }

            if (extentName == "ConfigMgrReadContext.ConfigParamDEV1_ParamDefinition")
            {
                return GetView29();
            }

            if (extentName == "ConfigMgrReadContext.paramDefinition")
            {
                return GetView30();
            }

            if (extentName == "ConfigMgrReadContext.configParamDev2")
            {
                return GetView31();
            }

            if (extentName == "ConfigMgrReadContext.ConfigParamDEV2_ParamDefinition")
            {
                return GetView32();
            }

            if (extentName == "ConfigMgrReadContext.configParamPROD")
            {
                return GetView33();
            }

            if (extentName == "ConfigMgrReadContext.ConfigParamPROD_ParamDefinition")
            {
                return GetView34();
            }

            if (extentName == "ConfigMgrReadContext.configParamQA1")
            {
                return GetView35();
            }

            if (extentName == "ConfigMgrReadContext.ConfigParamQA1_ParamDefinition")
            {
                return GetView36();
            }

            if (extentName == "ConfigMgrReadContext.configParamQA2")
            {
                return GetView37();
            }

            if (extentName == "ConfigMgrReadContext.ConfigParamQA2_ParamDefinition")
            {
                return GetView38();
            }

            if (extentName == "ConfigMgrReadContext.configParamSTG1")
            {
                return GetView39();
            }

            if (extentName == "ConfigMgrReadContext.ConfigParamSTG1_ParamDefinition")
            {
                return GetView40();
            }

            if (extentName == "ConfigMgrReadContext.configParamSTG2")
            {
                return GetView41();
            }

            if (extentName == "ConfigMgrReadContext.ConfigParamSTG2_ParamDefinition")
            {
                return GetView42();
            }

            if (extentName == "ConfigMgrReadContext.paramType")
            {
                return GetView43();
            }

            if (extentName == "ConfigMgrReadContext.paramVersion")
            {
                return GetView44();
            }

            if (extentName == "ConfigMgrReadContext.executable")
            {
                return GetView45();
            }

            if (extentName == "ConfigMgrReadContext.jConfigExecutable")
            {
                return GetView46();
            }

            if (extentName == "ConfigMgrReadContext.jExecutablePathServer")
            {
                return GetView47();
            }

            if (extentName == "ConfigMgrReadContext.pathServer")
            {
                return GetView48();
            }

            if (extentName == "ConfigMgrReadContext.jPathServerPathShare")
            {
                return GetView49();
            }

            if (extentName == "ConfigMgrReadContext.pathShare")
            {
                return GetView50();
            }

            if (extentName == "ConfigMgrReadContext.jExecutablePrimaryFunction")
            {
                return GetView51();
            }

            if (extentName == "ConfigMgrReadContext.executableFunction")
            {
                return GetView52();
            }

            if (extentName == "ConfigMgrReadContext.jConfigJPlanLOB")
            {
                return GetView53();
            }

            if (extentName == "ConfigMgrReadContext.jPlanLOB")
            {
                return GetView54();
            }

            if (extentName == "ConfigMgrReadContext.lineOfBusiness")
            {
                return GetView55();
            }

            if (extentName == "ConfigMgrReadContext.plan")
            {
                return GetView56();
            }

            if (extentName == "ConfigMgrReadContext.jAppPlan")
            {
                return GetView57();
            }

            if (extentName == "ConfigMgrReadContext.jConfigPlan")
            {
                return GetView58();
            }

            if (extentName == "CodeFirstDatabase.AppAudit")
            {
                return GetView59();
            }

            if (extentName == "ConfigMgrReadContext.appAudit")
            {
                return GetView60();
            }

            if (extentName == "CodeFirstDatabase.ConfigAudit")
            {
                return GetView61();
            }

            if (extentName == "ConfigMgrReadContext.configAudit")
            {
                return GetView62();
            }

            if (extentName == "CodeFirstDatabase.ConfigParamDEV1Audit")
            {
                return GetView63();
            }

            if (extentName == "ConfigMgrReadContext.configParamDev1Audit")
            {
                return GetView64();
            }

            if (extentName == "CodeFirstDatabase.ConfigParamDEV2Audit")
            {
                return GetView65();
            }

            if (extentName == "ConfigMgrReadContext.configParamDev2Audit")
            {
                return GetView66();
            }

            if (extentName == "CodeFirstDatabase.ConfigParamPRODAudit")
            {
                return GetView67();
            }

            if (extentName == "ConfigMgrReadContext.configParamPRODAudit")
            {
                return GetView68();
            }

            if (extentName == "CodeFirstDatabase.ConfigParamQA1Audit")
            {
                return GetView69();
            }

            if (extentName == "ConfigMgrReadContext.configParamQA1Audit")
            {
                return GetView70();
            }

            if (extentName == "CodeFirstDatabase.ConfigParamQA2Audit")
            {
                return GetView71();
            }

            if (extentName == "ConfigMgrReadContext.configParamQA2Audit")
            {
                return GetView72();
            }

            if (extentName == "CodeFirstDatabase.ConfigParamSTG1Audit")
            {
                return GetView73();
            }

            if (extentName == "ConfigMgrReadContext.configParamSTG1Audit")
            {
                return GetView74();
            }

            if (extentName == "CodeFirstDatabase.ConfigParamSTG2Audit")
            {
                return GetView75();
            }

            if (extentName == "ConfigMgrReadContext.configParamSTG2Audit")
            {
                return GetView76();
            }

            if (extentName == "CodeFirstDatabase.ExecutableAudit")
            {
                return GetView77();
            }

            if (extentName == "ConfigMgrReadContext.executableAudit")
            {
                return GetView78();
            }

            if (extentName == "CodeFirstDatabase.PrimaryFunctionAudit")
            {
                return GetView79();
            }

            if (extentName == "ConfigMgrReadContext.executableFunctionAudit")
            {
                return GetView80();
            }

            if (extentName == "CodeFirstDatabase.JAppPlanAudit")
            {
                return GetView81();
            }

            if (extentName == "ConfigMgrReadContext.jAppPlanAudit")
            {
                return GetView82();
            }

            if (extentName == "CodeFirstDatabase.JConfigExecutableAudit")
            {
                return GetView83();
            }

            if (extentName == "ConfigMgrReadContext.jConfigExecutableAudit")
            {
                return GetView84();
            }

            if (extentName == "CodeFirstDatabase.JConfigJPlanLOBAudit")
            {
                return GetView85();
            }

            if (extentName == "ConfigMgrReadContext.jConfigJPlanLOBAudit")
            {
                return GetView86();
            }

            if (extentName == "CodeFirstDatabase.JConfigPlanAudit")
            {
                return GetView87();
            }

            if (extentName == "ConfigMgrReadContext.jConfigPlanAudit")
            {
                return GetView88();
            }

            if (extentName == "CodeFirstDatabase.JExecutablePathServerAudit")
            {
                return GetView89();
            }

            if (extentName == "ConfigMgrReadContext.jExecutablePathServerAudit")
            {
                return GetView90();
            }

            if (extentName == "CodeFirstDatabase.JExecutablePrimaryFunctionAudit")
            {
                return GetView91();
            }

            if (extentName == "ConfigMgrReadContext.jExecutablePrimaryFunctionAudit")
            {
                return GetView92();
            }

            if (extentName == "CodeFirstDatabase.JPathServerPathShareAudit")
            {
                return GetView93();
            }

            if (extentName == "ConfigMgrReadContext.jPathServerPathShareAudit")
            {
                return GetView94();
            }

            if (extentName == "CodeFirstDatabase.JPlanLOBAudit")
            {
                return GetView95();
            }

            if (extentName == "ConfigMgrReadContext.jPlanLOBAudit")
            {
                return GetView96();
            }

            if (extentName == "CodeFirstDatabase.LineOfBusinessAudit")
            {
                return GetView97();
            }

            if (extentName == "ConfigMgrReadContext.lineOfBusinessAudit")
            {
                return GetView98();
            }

            if (extentName == "CodeFirstDatabase.ParamDefinitionAudit")
            {
                return GetView99();
            }

            if (extentName == "ConfigMgrReadContext.paramDefinitionAudit")
            {
                return GetView100();
            }

            if (extentName == "CodeFirstDatabase.ParamTypeAudit")
            {
                return GetView101();
            }

            if (extentName == "ConfigMgrReadContext.paramTypeAudit")
            {
                return GetView102();
            }

            if (extentName == "CodeFirstDatabase.ParamVersionAudit")
            {
                return GetView103();
            }

            if (extentName == "ConfigMgrReadContext.paramVersionAudit")
            {
                return GetView104();
            }

            if (extentName == "CodeFirstDatabase.PathServerAudit")
            {
                return GetView105();
            }

            if (extentName == "ConfigMgrReadContext.pathServerAudit")
            {
                return GetView106();
            }

            if (extentName == "CodeFirstDatabase.PathShareAudit")
            {
                return GetView107();
            }

            if (extentName == "ConfigMgrReadContext.pathShareAudit")
            {
                return GetView108();
            }

            if (extentName == "CodeFirstDatabase.PlanAudit")
            {
                return GetView109();
            }

            if (extentName == "ConfigMgrReadContext.planAudit")
            {
                return GetView110();
            }

            return null;
        }

        /// <summary>
        /// Gets the view for CodeFirstDatabase.App.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView0()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing App
        [CodeFirstDatabaseSchema.App](T1.App_ID, T1.App_ITIL, T1.App_abbr, T1.App_description, T1.App_updateDT, T1.App_updateUser)
    FROM (
        SELECT 
            T.ID AS App_ID, 
            T.ITIL AS App_ITIL, 
            T.abbr AS App_abbr, 
            T.description AS App_description, 
            T.updateDT AS App_updateDT, 
            T.updateUser AS App_updateUser, 
            True AS _from0
        FROM ConfigMgrReadContext.app AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for CodeFirstDatabase.Config.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView1()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing Config
        [CodeFirstDatabaseSchema.Config](T1.Config_ID, T1.Config_jobID, T1.Config_AppID, T1.Config_ParamVersionID, T1.Config_Active, T1.Config_DescriptonShort, T1.Config_DescriptonFull, T1.Config_effDT, T1.Config_trmDT, T1.Config_updateDT, T1.Config_updateUser)
    FROM (
        SELECT 
            T.ID AS Config_ID, 
            T.jobID AS Config_jobID, 
            T.AppID AS Config_AppID, 
            T.ParamVersionID AS Config_ParamVersionID, 
            T.Active AS Config_Active, 
            T.DescriptonShort AS Config_DescriptonShort, 
            T.DescriptonFull AS Config_DescriptonFull, 
            T.effDT AS Config_effDT, 
            T.trmDT AS Config_trmDT, 
            T.updateDT AS Config_updateDT, 
            T.updateUser AS Config_updateUser, 
            True AS _from0
        FROM ConfigMgrReadContext.config AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for CodeFirstDatabase.ConfigParamDEV1.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView2()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing ConfigParamDEV1
        [CodeFirstDatabaseSchema.ConfigParamDEV1](T3.ConfigParamDEV1_ID, T3.ConfigParamDEV1_ConfigID, T3.ConfigParamDEV1_effDT, T3.ConfigParamDEV1_trmDT, T3.ConfigParamDEV1_ParamDefinitionsID, T3.ConfigParamDEV1_isRefOnly, T3.ConfigParamDEV1_value, T3.ConfigParamDEV1_valueUseageComments, T3.ConfigParamDEV1_updateDT, T3.ConfigParamDEV1_updateUser, T3.[ConfigParamDEV1.ParamDefinition_ID])
    FROM (
        SELECT T1.ConfigParamDEV1_ID, T2.ConfigParamDEV1_ConfigID, T2.ConfigParamDEV1_effDT, T2.ConfigParamDEV1_trmDT, T2.ConfigParamDEV1_ParamDefinitionsID, T2.ConfigParamDEV1_isRefOnly, T2.ConfigParamDEV1_value, T2.ConfigParamDEV1_valueUseageComments, T2.ConfigParamDEV1_updateDT, T2.ConfigParamDEV1_updateUser, T1.[ConfigParamDEV1.ParamDefinition_ID], T2._from0, T1._from1
        FROM  (
            SELECT 
                Key(T.ConfigParamDEV1_ParamDefinition_Source).ID AS ConfigParamDEV1_ID, 
                Key(T.ConfigParamDEV1_ParamDefinition_Target).ID AS [ConfigParamDEV1.ParamDefinition_ID], 
                True AS _from1
            FROM ConfigMgrReadContext.ConfigParamDEV1_ParamDefinition AS T) AS T1
            INNER JOIN (
            SELECT 
                T.ID AS ConfigParamDEV1_ID, 
                T.ConfigID AS ConfigParamDEV1_ConfigID, 
                T.effDT AS ConfigParamDEV1_effDT, 
                T.trmDT AS ConfigParamDEV1_trmDT, 
                T.ParamDefinitionsID AS ConfigParamDEV1_ParamDefinitionsID, 
                T.isRefOnly AS ConfigParamDEV1_isRefOnly, 
                T.[value] AS ConfigParamDEV1_value, 
                T.valueUseageComments AS ConfigParamDEV1_valueUseageComments, 
                T.updateDT AS ConfigParamDEV1_updateDT, 
                T.updateUser AS ConfigParamDEV1_updateUser, 
                True AS _from0
            FROM ConfigMgrReadContext.configParamDev1 AS T) AS T2
            ON T1.ConfigParamDEV1_ID = T2.ConfigParamDEV1_ID
    ) AS T3");
        }

        /// <summary>
        /// Gets the view for CodeFirstDatabase.ParamDefinition.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView3()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing ParamDefinition
        [CodeFirstDatabaseSchema.ParamDefinition](T1.ParamDefinition_ID, T1.ParamDefinition_ParamVersionID, T1.ParamDefinition_ParamSequence, T1.ParamDefinition_ParamTypeID, T1.ParamDefinition_variableName, T1.ParamDefinition_intendedUse, T1.ParamDefinition_updateDT, T1.ParamDefinition_updateUser)
    FROM (
        SELECT 
            T.ID AS ParamDefinition_ID, 
            T.ParamVersionID AS ParamDefinition_ParamVersionID, 
            T.ParamSequence AS ParamDefinition_ParamSequence, 
            T.ParamTypeID AS ParamDefinition_ParamTypeID, 
            T.variableName AS ParamDefinition_variableName, 
            T.intendedUse AS ParamDefinition_intendedUse, 
            T.updateDT AS ParamDefinition_updateDT, 
            T.updateUser AS ParamDefinition_updateUser, 
            True AS _from0
        FROM ConfigMgrReadContext.paramDefinition AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for CodeFirstDatabase.ConfigParamDEV2.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView4()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing ConfigParamDEV2
        [CodeFirstDatabaseSchema.ConfigParamDEV2](T3.ConfigParamDEV2_ID, T3.ConfigParamDEV2_ConfigID, T3.ConfigParamDEV2_effDT, T3.ConfigParamDEV2_trmDT, T3.ConfigParamDEV2_ParamDefinitionsID, T3.ConfigParamDEV2_isRefOnly, T3.ConfigParamDEV2_value, T3.ConfigParamDEV2_valueUseageComments, T3.ConfigParamDEV2_updateDT, T3.ConfigParamDEV2_updateUser, T3.[ConfigParamDEV2.ParamDefinition_ID])
    FROM (
        SELECT T1.ConfigParamDEV2_ID, T2.ConfigParamDEV2_ConfigID, T2.ConfigParamDEV2_effDT, T2.ConfigParamDEV2_trmDT, T2.ConfigParamDEV2_ParamDefinitionsID, T2.ConfigParamDEV2_isRefOnly, T2.ConfigParamDEV2_value, T2.ConfigParamDEV2_valueUseageComments, T2.ConfigParamDEV2_updateDT, T2.ConfigParamDEV2_updateUser, T1.[ConfigParamDEV2.ParamDefinition_ID], T2._from0, T1._from1
        FROM  (
            SELECT 
                Key(T.ConfigParamDEV2_ParamDefinition_Source).ID AS ConfigParamDEV2_ID, 
                Key(T.ConfigParamDEV2_ParamDefinition_Target).ID AS [ConfigParamDEV2.ParamDefinition_ID], 
                True AS _from1
            FROM ConfigMgrReadContext.ConfigParamDEV2_ParamDefinition AS T) AS T1
            INNER JOIN (
            SELECT 
                T.ID AS ConfigParamDEV2_ID, 
                T.ConfigID AS ConfigParamDEV2_ConfigID, 
                T.effDT AS ConfigParamDEV2_effDT, 
                T.trmDT AS ConfigParamDEV2_trmDT, 
                T.ParamDefinitionsID AS ConfigParamDEV2_ParamDefinitionsID, 
                T.isRefOnly AS ConfigParamDEV2_isRefOnly, 
                T.[value] AS ConfigParamDEV2_value, 
                T.valueUseageComments AS ConfigParamDEV2_valueUseageComments, 
                T.updateDT AS ConfigParamDEV2_updateDT, 
                T.updateUser AS ConfigParamDEV2_updateUser, 
                True AS _from0
            FROM ConfigMgrReadContext.configParamDev2 AS T) AS T2
            ON T1.ConfigParamDEV2_ID = T2.ConfigParamDEV2_ID
    ) AS T3");
        }

        /// <summary>
        /// Gets the view for CodeFirstDatabase.ConfigParamPROD.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView5()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing ConfigParamPROD
        [CodeFirstDatabaseSchema.ConfigParamPROD](T3.ConfigParamPROD_ID, T3.ConfigParamPROD_ConfigID, T3.ConfigParamPROD_effDT, T3.ConfigParamPROD_trmDT, T3.ConfigParamPROD_ParamDefinitionsID, T3.ConfigParamPROD_isRefOnly, T3.ConfigParamPROD_value, T3.ConfigParamPROD_valueUseageComments, T3.ConfigParamPROD_updateDT, T3.ConfigParamPROD_updateUser, T3.[ConfigParamPROD.ParamDefinition_ID])
    FROM (
        SELECT T1.ConfigParamPROD_ID, T2.ConfigParamPROD_ConfigID, T2.ConfigParamPROD_effDT, T2.ConfigParamPROD_trmDT, T2.ConfigParamPROD_ParamDefinitionsID, T2.ConfigParamPROD_isRefOnly, T2.ConfigParamPROD_value, T2.ConfigParamPROD_valueUseageComments, T2.ConfigParamPROD_updateDT, T2.ConfigParamPROD_updateUser, T1.[ConfigParamPROD.ParamDefinition_ID], T2._from0, T1._from1
        FROM  (
            SELECT 
                Key(T.ConfigParamPROD_ParamDefinition_Source).ID AS ConfigParamPROD_ID, 
                Key(T.ConfigParamPROD_ParamDefinition_Target).ID AS [ConfigParamPROD.ParamDefinition_ID], 
                True AS _from1
            FROM ConfigMgrReadContext.ConfigParamPROD_ParamDefinition AS T) AS T1
            INNER JOIN (
            SELECT 
                T.ID AS ConfigParamPROD_ID, 
                T.ConfigID AS ConfigParamPROD_ConfigID, 
                T.effDT AS ConfigParamPROD_effDT, 
                T.trmDT AS ConfigParamPROD_trmDT, 
                T.ParamDefinitionsID AS ConfigParamPROD_ParamDefinitionsID, 
                T.isRefOnly AS ConfigParamPROD_isRefOnly, 
                T.[value] AS ConfigParamPROD_value, 
                T.valueUseageComments AS ConfigParamPROD_valueUseageComments, 
                T.updateDT AS ConfigParamPROD_updateDT, 
                T.updateUser AS ConfigParamPROD_updateUser, 
                True AS _from0
            FROM ConfigMgrReadContext.configParamPROD AS T) AS T2
            ON T1.ConfigParamPROD_ID = T2.ConfigParamPROD_ID
    ) AS T3");
        }

        /// <summary>
        /// Gets the view for CodeFirstDatabase.ConfigParamQA1.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView6()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing ConfigParamQA1
        [CodeFirstDatabaseSchema.ConfigParamQA1](T3.ConfigParamQA1_ID, T3.ConfigParamQA1_ConfigID, T3.ConfigParamQA1_effDT, T3.ConfigParamQA1_trmDT, T3.ConfigParamQA1_ParamDefinitionsID, T3.ConfigParamQA1_isRefOnly, T3.ConfigParamQA1_value, T3.ConfigParamQA1_valueUseageComments, T3.ConfigParamQA1_updateDT, T3.ConfigParamQA1_updateUser, T3.[ConfigParamQA1.ParamDefinition_ID])
    FROM (
        SELECT T1.ConfigParamQA1_ID, T2.ConfigParamQA1_ConfigID, T2.ConfigParamQA1_effDT, T2.ConfigParamQA1_trmDT, T2.ConfigParamQA1_ParamDefinitionsID, T2.ConfigParamQA1_isRefOnly, T2.ConfigParamQA1_value, T2.ConfigParamQA1_valueUseageComments, T2.ConfigParamQA1_updateDT, T2.ConfigParamQA1_updateUser, T1.[ConfigParamQA1.ParamDefinition_ID], T2._from0, T1._from1
        FROM  (
            SELECT 
                Key(T.ConfigParamQA1_ParamDefinition_Source).ID AS ConfigParamQA1_ID, 
                Key(T.ConfigParamQA1_ParamDefinition_Target).ID AS [ConfigParamQA1.ParamDefinition_ID], 
                True AS _from1
            FROM ConfigMgrReadContext.ConfigParamQA1_ParamDefinition AS T) AS T1
            INNER JOIN (
            SELECT 
                T.ID AS ConfigParamQA1_ID, 
                T.ConfigID AS ConfigParamQA1_ConfigID, 
                T.effDT AS ConfigParamQA1_effDT, 
                T.trmDT AS ConfigParamQA1_trmDT, 
                T.ParamDefinitionsID AS ConfigParamQA1_ParamDefinitionsID, 
                T.isRefOnly AS ConfigParamQA1_isRefOnly, 
                T.[value] AS ConfigParamQA1_value, 
                T.valueUseageComments AS ConfigParamQA1_valueUseageComments, 
                T.updateDT AS ConfigParamQA1_updateDT, 
                T.updateUser AS ConfigParamQA1_updateUser, 
                True AS _from0
            FROM ConfigMgrReadContext.configParamQA1 AS T) AS T2
            ON T1.ConfigParamQA1_ID = T2.ConfigParamQA1_ID
    ) AS T3");
        }

        /// <summary>
        /// Gets the view for CodeFirstDatabase.ConfigParamQA2.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView7()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing ConfigParamQA2
        [CodeFirstDatabaseSchema.ConfigParamQA2](T3.ConfigParamQA2_ID, T3.ConfigParamQA2_ConfigID, T3.ConfigParamQA2_effDT, T3.ConfigParamQA2_trmDT, T3.ConfigParamQA2_ParamDefinitionsID, T3.ConfigParamQA2_isRefOnly, T3.ConfigParamQA2_value, T3.ConfigParamQA2_valueUseageComments, T3.ConfigParamQA2_updateDT, T3.ConfigParamQA2_updateUser, T3.[ConfigParamQA2.ParamDefinition_ID])
    FROM (
        SELECT T1.ConfigParamQA2_ID, T2.ConfigParamQA2_ConfigID, T2.ConfigParamQA2_effDT, T2.ConfigParamQA2_trmDT, T2.ConfigParamQA2_ParamDefinitionsID, T2.ConfigParamQA2_isRefOnly, T2.ConfigParamQA2_value, T2.ConfigParamQA2_valueUseageComments, T2.ConfigParamQA2_updateDT, T2.ConfigParamQA2_updateUser, T1.[ConfigParamQA2.ParamDefinition_ID], T2._from0, T1._from1
        FROM  (
            SELECT 
                Key(T.ConfigParamQA2_ParamDefinition_Source).ID AS ConfigParamQA2_ID, 
                Key(T.ConfigParamQA2_ParamDefinition_Target).ID AS [ConfigParamQA2.ParamDefinition_ID], 
                True AS _from1
            FROM ConfigMgrReadContext.ConfigParamQA2_ParamDefinition AS T) AS T1
            INNER JOIN (
            SELECT 
                T.ID AS ConfigParamQA2_ID, 
                T.ConfigID AS ConfigParamQA2_ConfigID, 
                T.effDT AS ConfigParamQA2_effDT, 
                T.trmDT AS ConfigParamQA2_trmDT, 
                T.ParamDefinitionsID AS ConfigParamQA2_ParamDefinitionsID, 
                T.isRefOnly AS ConfigParamQA2_isRefOnly, 
                T.[value] AS ConfigParamQA2_value, 
                T.valueUseageComments AS ConfigParamQA2_valueUseageComments, 
                T.updateDT AS ConfigParamQA2_updateDT, 
                T.updateUser AS ConfigParamQA2_updateUser, 
                True AS _from0
            FROM ConfigMgrReadContext.configParamQA2 AS T) AS T2
            ON T1.ConfigParamQA2_ID = T2.ConfigParamQA2_ID
    ) AS T3");
        }

        /// <summary>
        /// Gets the view for CodeFirstDatabase.ConfigParamSTG1.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView8()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing ConfigParamSTG1
        [CodeFirstDatabaseSchema.ConfigParamSTG1](T3.ConfigParamSTG1_ID, T3.ConfigParamSTG1_ConfigID, T3.ConfigParamSTG1_effDT, T3.ConfigParamSTG1_trmDT, T3.ConfigParamSTG1_ParamDefinitionsID, T3.ConfigParamSTG1_isRefOnly, T3.ConfigParamSTG1_value, T3.ConfigParamSTG1_valueUseageComments, T3.ConfigParamSTG1_updateDT, T3.ConfigParamSTG1_updateUser, T3.[ConfigParamSTG1.ParamDefinition_ID])
    FROM (
        SELECT T1.ConfigParamSTG1_ID, T2.ConfigParamSTG1_ConfigID, T2.ConfigParamSTG1_effDT, T2.ConfigParamSTG1_trmDT, T2.ConfigParamSTG1_ParamDefinitionsID, T2.ConfigParamSTG1_isRefOnly, T2.ConfigParamSTG1_value, T2.ConfigParamSTG1_valueUseageComments, T2.ConfigParamSTG1_updateDT, T2.ConfigParamSTG1_updateUser, T1.[ConfigParamSTG1.ParamDefinition_ID], T2._from0, T1._from1
        FROM  (
            SELECT 
                Key(T.ConfigParamSTG1_ParamDefinition_Source).ID AS ConfigParamSTG1_ID, 
                Key(T.ConfigParamSTG1_ParamDefinition_Target).ID AS [ConfigParamSTG1.ParamDefinition_ID], 
                True AS _from1
            FROM ConfigMgrReadContext.ConfigParamSTG1_ParamDefinition AS T) AS T1
            INNER JOIN (
            SELECT 
                T.ID AS ConfigParamSTG1_ID, 
                T.ConfigID AS ConfigParamSTG1_ConfigID, 
                T.effDT AS ConfigParamSTG1_effDT, 
                T.trmDT AS ConfigParamSTG1_trmDT, 
                T.ParamDefinitionsID AS ConfigParamSTG1_ParamDefinitionsID, 
                T.isRefOnly AS ConfigParamSTG1_isRefOnly, 
                T.[value] AS ConfigParamSTG1_value, 
                T.valueUseageComments AS ConfigParamSTG1_valueUseageComments, 
                T.updateDT AS ConfigParamSTG1_updateDT, 
                T.updateUser AS ConfigParamSTG1_updateUser, 
                True AS _from0
            FROM ConfigMgrReadContext.configParamSTG1 AS T) AS T2
            ON T1.ConfigParamSTG1_ID = T2.ConfigParamSTG1_ID
    ) AS T3");
        }

        /// <summary>
        /// Gets the view for CodeFirstDatabase.ConfigParamSTG2.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView9()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing ConfigParamSTG2
        [CodeFirstDatabaseSchema.ConfigParamSTG2](T3.ConfigParamSTG2_ID, T3.ConfigParamSTG2_ConfigID, T3.ConfigParamSTG2_effDT, T3.ConfigParamSTG2_trmDT, T3.ConfigParamSTG2_ParamDefinitionsID, T3.ConfigParamSTG2_isRefOnly, T3.ConfigParamSTG2_value, T3.ConfigParamSTG2_valueUseageComments, T3.ConfigParamSTG2_updateDT, T3.ConfigParamSTG2_updateUser, T3.[ConfigParamSTG2.ParamDefinition_ID])
    FROM (
        SELECT T1.ConfigParamSTG2_ID, T2.ConfigParamSTG2_ConfigID, T2.ConfigParamSTG2_effDT, T2.ConfigParamSTG2_trmDT, T2.ConfigParamSTG2_ParamDefinitionsID, T2.ConfigParamSTG2_isRefOnly, T2.ConfigParamSTG2_value, T2.ConfigParamSTG2_valueUseageComments, T2.ConfigParamSTG2_updateDT, T2.ConfigParamSTG2_updateUser, T1.[ConfigParamSTG2.ParamDefinition_ID], T2._from0, T1._from1
        FROM  (
            SELECT 
                Key(T.ConfigParamSTG2_ParamDefinition_Source).ID AS ConfigParamSTG2_ID, 
                Key(T.ConfigParamSTG2_ParamDefinition_Target).ID AS [ConfigParamSTG2.ParamDefinition_ID], 
                True AS _from1
            FROM ConfigMgrReadContext.ConfigParamSTG2_ParamDefinition AS T) AS T1
            INNER JOIN (
            SELECT 
                T.ID AS ConfigParamSTG2_ID, 
                T.ConfigID AS ConfigParamSTG2_ConfigID, 
                T.effDT AS ConfigParamSTG2_effDT, 
                T.trmDT AS ConfigParamSTG2_trmDT, 
                T.ParamDefinitionsID AS ConfigParamSTG2_ParamDefinitionsID, 
                T.isRefOnly AS ConfigParamSTG2_isRefOnly, 
                T.[value] AS ConfigParamSTG2_value, 
                T.valueUseageComments AS ConfigParamSTG2_valueUseageComments, 
                T.updateDT AS ConfigParamSTG2_updateDT, 
                T.updateUser AS ConfigParamSTG2_updateUser, 
                True AS _from0
            FROM ConfigMgrReadContext.configParamSTG2 AS T) AS T2
            ON T1.ConfigParamSTG2_ID = T2.ConfigParamSTG2_ID
    ) AS T3");
        }

        /// <summary>
        /// Gets the view for CodeFirstDatabase.ParamType.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView10()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing ParamType
        [CodeFirstDatabaseSchema.ParamType](T1.ParamType_ID, T1.ParamType_type, T1.ParamType_updateDT, T1.ParamType_updateUser)
    FROM (
        SELECT 
            T.ID AS ParamType_ID, 
            T.type AS ParamType_type, 
            T.updateDT AS ParamType_updateDT, 
            T.updateUser AS ParamType_updateUser, 
            True AS _from0
        FROM ConfigMgrReadContext.paramType AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for CodeFirstDatabase.ParamVersion.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView11()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing ParamVersion
        [CodeFirstDatabaseSchema.ParamVersion](T1.ParamVersion_ID, T1.ParamVersion_version, T1.ParamVersion_description, T1.ParamVersion_updateDT, T1.ParamVersion_updateUser)
    FROM (
        SELECT 
            T.ID AS ParamVersion_ID, 
            T.version AS ParamVersion_version, 
            T.description AS ParamVersion_description, 
            T.updateDT AS ParamVersion_updateDT, 
            T.updateUser AS ParamVersion_updateUser, 
            True AS _from0
        FROM ConfigMgrReadContext.paramVersion AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for CodeFirstDatabase.Executable.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView12()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing Executable
        [CodeFirstDatabaseSchema.Executable](T1.Executable_ID, T1.Executable_ParamVersionID, T1.Executable_AppID, T1.Executable_nameWExtension, T1.Executable_description, T1.Executable_updateDT, T1.Executable_updateUser)
    FROM (
        SELECT 
            T.ID AS Executable_ID, 
            T.ParamVersionID AS Executable_ParamVersionID, 
            T.AppID AS Executable_AppID, 
            T.nameWExtension AS Executable_nameWExtension, 
            T.description AS Executable_description, 
            T.updateDT AS Executable_updateDT, 
            T.updateUser AS Executable_updateUser, 
            True AS _from0
        FROM ConfigMgrReadContext.executable AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for CodeFirstDatabase.JConfigExecutable.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView13()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing JConfigExecutable
        [CodeFirstDatabaseSchema.JConfigExecutable](T1.JConfigExecutable_ID, T1.JConfigExecutable_ConfigID, T1.JConfigExecutable_ExecutableID, T1.JConfigExecutable_updateDT, T1.JConfigExecutable_updateUser)
    FROM (
        SELECT 
            T.ID AS JConfigExecutable_ID, 
            T.ConfigID AS JConfigExecutable_ConfigID, 
            T.ExecutableID AS JConfigExecutable_ExecutableID, 
            T.updateDT AS JConfigExecutable_updateDT, 
            T.updateUser AS JConfigExecutable_updateUser, 
            True AS _from0
        FROM ConfigMgrReadContext.jConfigExecutable AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for CodeFirstDatabase.JExecutablePathServer.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView14()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing JExecutablePathServer
        [CodeFirstDatabaseSchema.JExecutablePathServer](T1.JExecutablePathServer_ID, T1.JExecutablePathServer_ExecutableID, T1.JExecutablePathServer_PathServerID, T1.JExecutablePathServer_updateDT, T1.JExecutablePathServer_updateUser)
    FROM (
        SELECT 
            T.ID AS JExecutablePathServer_ID, 
            T.ExecutableID AS JExecutablePathServer_ExecutableID, 
            T.PathServerID AS JExecutablePathServer_PathServerID, 
            T.updateDT AS JExecutablePathServer_updateDT, 
            T.updateUser AS JExecutablePathServer_updateUser, 
            True AS _from0
        FROM ConfigMgrReadContext.jExecutablePathServer AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for CodeFirstDatabase.PathServer.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView15()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing PathServer
        [CodeFirstDatabaseSchema.PathServer](T1.PathServer_ID, T1.PathServer_server, T1.PathServer_path, T1.PathServer_updateDT, T1.PathServer_updateUser)
    FROM (
        SELECT 
            T.ID AS PathServer_ID, 
            T.server AS PathServer_server, 
            T.path AS PathServer_path, 
            T.updateDT AS PathServer_updateDT, 
            T.updateUser AS PathServer_updateUser, 
            True AS _from0
        FROM ConfigMgrReadContext.pathServer AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for CodeFirstDatabase.JPathServerPathShare.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView16()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing JPathServerPathShare
        [CodeFirstDatabaseSchema.JPathServerPathShare](T1.JPathServerPathShare_ID, T1.JPathServerPathShare_PathServerID, T1.JPathServerPathShare_PathShareID, T1.JPathServerPathShare_updateDT, T1.JPathServerPathShare_updateUser)
    FROM (
        SELECT 
            T.ID AS JPathServerPathShare_ID, 
            T.PathServerID AS JPathServerPathShare_PathServerID, 
            T.PathShareID AS JPathServerPathShare_PathShareID, 
            T.updateDT AS JPathServerPathShare_updateDT, 
            T.updateUser AS JPathServerPathShare_updateUser, 
            True AS _from0
        FROM ConfigMgrReadContext.jPathServerPathShare AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for CodeFirstDatabase.PathShare.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView17()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing PathShare
        [CodeFirstDatabaseSchema.PathShare](T1.PathShare_ID, T1.PathShare_share, T1.PathShare_path, T1.PathShare_updateDT, T1.PathShare_updateUser)
    FROM (
        SELECT 
            T.ID AS PathShare_ID, 
            T.share AS PathShare_share, 
            T.path AS PathShare_path, 
            T.updateDT AS PathShare_updateDT, 
            T.updateUser AS PathShare_updateUser, 
            True AS _from0
        FROM ConfigMgrReadContext.pathShare AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for CodeFirstDatabase.JExecutablePrimaryFunction.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView18()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing JExecutablePrimaryFunction
        [CodeFirstDatabaseSchema.JExecutablePrimaryFunction](T1.JExecutablePrimaryFunction_ID, T1.JExecutablePrimaryFunction_ExecutableID, T1.JExecutablePrimaryFunction_PrimaryFunctionID, T1.JExecutablePrimaryFunction_updateDT, T1.JExecutablePrimaryFunction_updateUser)
    FROM (
        SELECT 
            T.ID AS JExecutablePrimaryFunction_ID, 
            T.ExecutableID AS JExecutablePrimaryFunction_ExecutableID, 
            T.PrimaryFunctionID AS JExecutablePrimaryFunction_PrimaryFunctionID, 
            T.updateDT AS JExecutablePrimaryFunction_updateDT, 
            T.updateUser AS JExecutablePrimaryFunction_updateUser, 
            True AS _from0
        FROM ConfigMgrReadContext.jExecutablePrimaryFunction AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for CodeFirstDatabase.PrimaryFunction.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView19()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing PrimaryFunction
        [CodeFirstDatabaseSchema.PrimaryFunction](T1.PrimaryFunction_ID, T1.PrimaryFunction_abbr, T1.PrimaryFunction_description, T1.PrimaryFunction_updateDT, T1.PrimaryFunction_updateUser)
    FROM (
        SELECT 
            T.ID AS PrimaryFunction_ID, 
            T.abbr AS PrimaryFunction_abbr, 
            T.description AS PrimaryFunction_description, 
            T.updateDT AS PrimaryFunction_updateDT, 
            T.updateUser AS PrimaryFunction_updateUser, 
            True AS _from0
        FROM ConfigMgrReadContext.executableFunction AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for CodeFirstDatabase.JConfigJPlanLOB.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView20()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing JConfigJPlanLOB
        [CodeFirstDatabaseSchema.JConfigJPlanLOB](T1.JConfigJPlanLOB_ID, T1.JConfigJPlanLOB_ConfigID, T1.JConfigJPlanLOB_JPlanLOBID, T1.JConfigJPlanLOB_updateDT, T1.JConfigJPlanLOB_updateUser)
    FROM (
        SELECT 
            T.ID AS JConfigJPlanLOB_ID, 
            T.ConfigID AS JConfigJPlanLOB_ConfigID, 
            T.JPlanLOBID AS JConfigJPlanLOB_JPlanLOBID, 
            T.updateDT AS JConfigJPlanLOB_updateDT, 
            T.updateUser AS JConfigJPlanLOB_updateUser, 
            True AS _from0
        FROM ConfigMgrReadContext.jConfigJPlanLOB AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for CodeFirstDatabase.JPlanLOB.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView21()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing JPlanLOB
        [CodeFirstDatabaseSchema.JPlanLOB](T1.JPlanLOB_ID, T1.JPlanLOB_planID, T1.JPlanLOB_LineOfBusinessID, T1.JPlanLOB_updateDT, T1.JPlanLOB_updateUser)
    FROM (
        SELECT 
            T.ID AS JPlanLOB_ID, 
            T.planID AS JPlanLOB_planID, 
            T.LineOfBusinessID AS JPlanLOB_LineOfBusinessID, 
            T.updateDT AS JPlanLOB_updateDT, 
            T.updateUser AS JPlanLOB_updateUser, 
            True AS _from0
        FROM ConfigMgrReadContext.jPlanLOB AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for CodeFirstDatabase.LineOfBusiness.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView22()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing LineOfBusiness
        [CodeFirstDatabaseSchema.LineOfBusiness](T1.LineOfBusiness_ID, T1.LineOfBusiness_abbr, T1.LineOfBusiness_descr, T1.LineOfBusiness_updateDT, T1.LineOfBusiness_updateUser)
    FROM (
        SELECT 
            T.ID AS LineOfBusiness_ID, 
            T.abbr AS LineOfBusiness_abbr, 
            T.descr AS LineOfBusiness_descr, 
            T.updateDT AS LineOfBusiness_updateDT, 
            T.updateUser AS LineOfBusiness_updateUser, 
            True AS _from0
        FROM ConfigMgrReadContext.lineOfBusiness AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for CodeFirstDatabase.Plan.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView23()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing Plan
        [CodeFirstDatabaseSchema.Plan](T1.Plan_ID, T1.Plan_abbr, T1.Plan_descr, T1.Plan_updateDT, T1.Plan_updateUser)
    FROM (
        SELECT 
            T.ID AS Plan_ID, 
            T.abbr AS Plan_abbr, 
            T.descr AS Plan_descr, 
            T.updateDT AS Plan_updateDT, 
            T.updateUser AS Plan_updateUser, 
            True AS _from0
        FROM ConfigMgrReadContext.plan AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for CodeFirstDatabase.JAppPlan.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView24()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing JAppPlan
        [CodeFirstDatabaseSchema.JAppPlan](T1.JAppPlan_ID, T1.JAppPlan_AppID, T1.JAppPlan_PlanID, T1.JAppPlan_updateDT, T1.JAppPlan_updateUser)
    FROM (
        SELECT 
            T.ID AS JAppPlan_ID, 
            T.AppID AS JAppPlan_AppID, 
            T.PlanID AS JAppPlan_PlanID, 
            T.updateDT AS JAppPlan_updateDT, 
            T.updateUser AS JAppPlan_updateUser, 
            True AS _from0
        FROM ConfigMgrReadContext.jAppPlan AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for CodeFirstDatabase.JConfigPlan.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView25()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing JConfigPlan
        [CodeFirstDatabaseSchema.JConfigPlan](T1.JConfigPlan_ID, T1.JConfigPlan_ConfigID, T1.JConfigPlan_PlanID, T1.JConfigPlan_updateDT, T1.JConfigPlan_updateUser)
    FROM (
        SELECT 
            T.ID AS JConfigPlan_ID, 
            T.ConfigID AS JConfigPlan_ConfigID, 
            T.PlanID AS JConfigPlan_PlanID, 
            T.updateDT AS JConfigPlan_updateDT, 
            T.updateUser AS JConfigPlan_updateUser, 
            True AS _from0
        FROM ConfigMgrReadContext.jConfigPlan AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for ConfigMgrReadContext.app.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView26()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing app
        [Company.DIV.ConfigMgr.Data.Read.App](T1.App_ID, T1.App_ITIL, T1.App_abbr, T1.App_description, T1.App_updateDT, T1.App_updateUser)
    FROM (
        SELECT 
            T.ID AS App_ID, 
            T.ITIL AS App_ITIL, 
            T.abbr AS App_abbr, 
            T.description AS App_description, 
            T.updateDT AS App_updateDT, 
            T.updateUser AS App_updateUser, 
            True AS _from0
        FROM CodeFirstDatabase.App AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for ConfigMgrReadContext.config.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView27()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing config
        [Company.DIV.ConfigMgr.Data.Read.Config](T1.Config_ID, T1.Config_jobID, T1.Config_AppID, T1.Config_ParamVersionID, T1.Config_Active, T1.Config_DescriptonShort, T1.Config_DescriptonFull, T1.Config_effDT, T1.Config_trmDT, T1.Config_updateDT, T1.Config_updateUser)
    FROM (
        SELECT 
            T.ID AS Config_ID, 
            T.jobID AS Config_jobID, 
            T.AppID AS Config_AppID, 
            T.ParamVersionID AS Config_ParamVersionID, 
            T.Active AS Config_Active, 
            T.DescriptonShort AS Config_DescriptonShort, 
            T.DescriptonFull AS Config_DescriptonFull, 
            T.effDT AS Config_effDT, 
            T.trmDT AS Config_trmDT, 
            T.updateDT AS Config_updateDT, 
            T.updateUser AS Config_updateUser, 
            True AS _from0
        FROM CodeFirstDatabase.Config AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for ConfigMgrReadContext.configParamDev1.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView28()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing configParamDev1
        [Company.DIV.ConfigMgr.Data.Read.ConfigParamDEV1](T1.ConfigParamDEV1_ID, T1.ConfigParamDEV1_ConfigID, T1.ConfigParamDEV1_effDT, T1.ConfigParamDEV1_trmDT, T1.ConfigParamDEV1_ParamDefinitionsID, T1.ConfigParamDEV1_isRefOnly, T1.ConfigParamDEV1_value, T1.ConfigParamDEV1_valueUseageComments, T1.ConfigParamDEV1_updateDT, T1.ConfigParamDEV1_updateUser) WITH 
        RELATIONSHIP(CREATEREF(ConfigMgrReadContext.paramDefinition, ROW(T1.[ConfigParamDEV1_ParamDefinition.ConfigParamDEV1_ParamDefinition_Target.ID]),[Company.DIV.ConfigMgr.Data.Read.ParamDefinition]),[Company.DIV.ConfigMgr.Data.Read.ConfigParamDEV1_ParamDefinition],ConfigParamDEV1_ParamDefinition_Source,ConfigParamDEV1_ParamDefinition_Target) 
    FROM (
        SELECT 
            T.ID AS ConfigParamDEV1_ID, 
            T.ConfigID AS ConfigParamDEV1_ConfigID, 
            T.effDT AS ConfigParamDEV1_effDT, 
            T.trmDT AS ConfigParamDEV1_trmDT, 
            T.ParamDefinitionsID AS ConfigParamDEV1_ParamDefinitionsID, 
            T.isRefOnly AS ConfigParamDEV1_isRefOnly, 
            T.[value] AS ConfigParamDEV1_value, 
            T.valueUseageComments AS ConfigParamDEV1_valueUseageComments, 
            T.updateDT AS ConfigParamDEV1_updateDT, 
            T.updateUser AS ConfigParamDEV1_updateUser, 
            True AS _from0, 
            T.ParamDefinition_ID AS [ConfigParamDEV1_ParamDefinition.ConfigParamDEV1_ParamDefinition_Target.ID]
        FROM CodeFirstDatabase.ConfigParamDEV1 AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for ConfigMgrReadContext.ConfigParamDEV1_ParamDefinition.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView29()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing ConfigParamDEV1_ParamDefinition
        [Company.DIV.ConfigMgr.Data.Read.ConfigParamDEV1_ParamDefinition](T3.[ConfigParamDEV1_ParamDefinition.ConfigParamDEV1_ParamDefinition_Source], T3.[ConfigParamDEV1_ParamDefinition.ConfigParamDEV1_ParamDefinition_Target])
    FROM (
        SELECT -- Constructing ConfigParamDEV1_ParamDefinition_Source
            CreateRef(ConfigMgrReadContext.configParamDev1, row(T2.[ConfigParamDEV1_ParamDefinition.ConfigParamDEV1_ParamDefinition_Source.ID]), [Company.DIV.ConfigMgr.Data.Read.ConfigParamDEV1]) AS [ConfigParamDEV1_ParamDefinition.ConfigParamDEV1_ParamDefinition_Source], 
            T2.[ConfigParamDEV1_ParamDefinition.ConfigParamDEV1_ParamDefinition_Target]
        FROM (
            SELECT -- Constructing ConfigParamDEV1_ParamDefinition_Target
                T1.[ConfigParamDEV1_ParamDefinition.ConfigParamDEV1_ParamDefinition_Source.ID], 
                CreateRef(ConfigMgrReadContext.paramDefinition, row(T1.[ConfigParamDEV1_ParamDefinition.ConfigParamDEV1_ParamDefinition_Target.ID]), [Company.DIV.ConfigMgr.Data.Read.ParamDefinition]) AS [ConfigParamDEV1_ParamDefinition.ConfigParamDEV1_ParamDefinition_Target]
            FROM (
                SELECT 
                    T.ID AS [ConfigParamDEV1_ParamDefinition.ConfigParamDEV1_ParamDefinition_Source.ID], 
                    T.ParamDefinition_ID AS [ConfigParamDEV1_ParamDefinition.ConfigParamDEV1_ParamDefinition_Target.ID], 
                    True AS _from0
                FROM CodeFirstDatabase.ConfigParamDEV1 AS T
            ) AS T1
        ) AS T2
    ) AS T3");
        }

        /// <summary>
        /// Gets the view for ConfigMgrReadContext.paramDefinition.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView30()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing paramDefinition
        [Company.DIV.ConfigMgr.Data.Read.ParamDefinition](T1.ParamDefinition_ID, T1.ParamDefinition_ParamVersionID, T1.ParamDefinition_ParamSequence, T1.ParamDefinition_ParamTypeID, T1.ParamDefinition_variableName, T1.ParamDefinition_intendedUse, T1.ParamDefinition_updateDT, T1.ParamDefinition_updateUser)
    FROM (
        SELECT 
            T.ID AS ParamDefinition_ID, 
            T.ParamVersionID AS ParamDefinition_ParamVersionID, 
            T.ParamSequence AS ParamDefinition_ParamSequence, 
            T.ParamTypeID AS ParamDefinition_ParamTypeID, 
            T.variableName AS ParamDefinition_variableName, 
            T.intendedUse AS ParamDefinition_intendedUse, 
            T.updateDT AS ParamDefinition_updateDT, 
            T.updateUser AS ParamDefinition_updateUser, 
            True AS _from0
        FROM CodeFirstDatabase.ParamDefinition AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for ConfigMgrReadContext.configParamDev2.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView31()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing configParamDev2
        [Company.DIV.ConfigMgr.Data.Read.ConfigParamDEV2](T1.ConfigParamDEV2_ID, T1.ConfigParamDEV2_ConfigID, T1.ConfigParamDEV2_effDT, T1.ConfigParamDEV2_trmDT, T1.ConfigParamDEV2_ParamDefinitionsID, T1.ConfigParamDEV2_isRefOnly, T1.ConfigParamDEV2_value, T1.ConfigParamDEV2_valueUseageComments, T1.ConfigParamDEV2_updateDT, T1.ConfigParamDEV2_updateUser) WITH 
        RELATIONSHIP(CREATEREF(ConfigMgrReadContext.paramDefinition, ROW(T1.[ConfigParamDEV2_ParamDefinition.ConfigParamDEV2_ParamDefinition_Target.ID]),[Company.DIV.ConfigMgr.Data.Read.ParamDefinition]),[Company.DIV.ConfigMgr.Data.Read.ConfigParamDEV2_ParamDefinition],ConfigParamDEV2_ParamDefinition_Source,ConfigParamDEV2_ParamDefinition_Target) 
    FROM (
        SELECT 
            T.ID AS ConfigParamDEV2_ID, 
            T.ConfigID AS ConfigParamDEV2_ConfigID, 
            T.effDT AS ConfigParamDEV2_effDT, 
            T.trmDT AS ConfigParamDEV2_trmDT, 
            T.ParamDefinitionsID AS ConfigParamDEV2_ParamDefinitionsID, 
            T.isRefOnly AS ConfigParamDEV2_isRefOnly, 
            T.[value] AS ConfigParamDEV2_value, 
            T.valueUseageComments AS ConfigParamDEV2_valueUseageComments, 
            T.updateDT AS ConfigParamDEV2_updateDT, 
            T.updateUser AS ConfigParamDEV2_updateUser, 
            True AS _from0, 
            T.ParamDefinition_ID AS [ConfigParamDEV2_ParamDefinition.ConfigParamDEV2_ParamDefinition_Target.ID]
        FROM CodeFirstDatabase.ConfigParamDEV2 AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for ConfigMgrReadContext.ConfigParamDEV2_ParamDefinition.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView32()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing ConfigParamDEV2_ParamDefinition
        [Company.DIV.ConfigMgr.Data.Read.ConfigParamDEV2_ParamDefinition](T3.[ConfigParamDEV2_ParamDefinition.ConfigParamDEV2_ParamDefinition_Source], T3.[ConfigParamDEV2_ParamDefinition.ConfigParamDEV2_ParamDefinition_Target])
    FROM (
        SELECT -- Constructing ConfigParamDEV2_ParamDefinition_Source
            CreateRef(ConfigMgrReadContext.configParamDev2, row(T2.[ConfigParamDEV2_ParamDefinition.ConfigParamDEV2_ParamDefinition_Source.ID]), [Company.DIV.ConfigMgr.Data.Read.ConfigParamDEV2]) AS [ConfigParamDEV2_ParamDefinition.ConfigParamDEV2_ParamDefinition_Source], 
            T2.[ConfigParamDEV2_ParamDefinition.ConfigParamDEV2_ParamDefinition_Target]
        FROM (
            SELECT -- Constructing ConfigParamDEV2_ParamDefinition_Target
                T1.[ConfigParamDEV2_ParamDefinition.ConfigParamDEV2_ParamDefinition_Source.ID], 
                CreateRef(ConfigMgrReadContext.paramDefinition, row(T1.[ConfigParamDEV2_ParamDefinition.ConfigParamDEV2_ParamDefinition_Target.ID]), [Company.DIV.ConfigMgr.Data.Read.ParamDefinition]) AS [ConfigParamDEV2_ParamDefinition.ConfigParamDEV2_ParamDefinition_Target]
            FROM (
                SELECT 
                    T.ID AS [ConfigParamDEV2_ParamDefinition.ConfigParamDEV2_ParamDefinition_Source.ID], 
                    T.ParamDefinition_ID AS [ConfigParamDEV2_ParamDefinition.ConfigParamDEV2_ParamDefinition_Target.ID], 
                    True AS _from0
                FROM CodeFirstDatabase.ConfigParamDEV2 AS T
            ) AS T1
        ) AS T2
    ) AS T3");
        }

        /// <summary>
        /// Gets the view for ConfigMgrReadContext.configParamPROD.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView33()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing configParamPROD
        [Company.DIV.ConfigMgr.Data.Read.ConfigParamPROD](T1.ConfigParamPROD_ID, T1.ConfigParamPROD_ConfigID, T1.ConfigParamPROD_effDT, T1.ConfigParamPROD_trmDT, T1.ConfigParamPROD_ParamDefinitionsID, T1.ConfigParamPROD_isRefOnly, T1.ConfigParamPROD_value, T1.ConfigParamPROD_valueUseageComments, T1.ConfigParamPROD_updateDT, T1.ConfigParamPROD_updateUser) WITH 
        RELATIONSHIP(CREATEREF(ConfigMgrReadContext.paramDefinition, ROW(T1.[ConfigParamPROD_ParamDefinition.ConfigParamPROD_ParamDefinition_Target.ID]),[Company.DIV.ConfigMgr.Data.Read.ParamDefinition]),[Company.DIV.ConfigMgr.Data.Read.ConfigParamPROD_ParamDefinition],ConfigParamPROD_ParamDefinition_Source,ConfigParamPROD_ParamDefinition_Target) 
    FROM (
        SELECT 
            T.ID AS ConfigParamPROD_ID, 
            T.ConfigID AS ConfigParamPROD_ConfigID, 
            T.effDT AS ConfigParamPROD_effDT, 
            T.trmDT AS ConfigParamPROD_trmDT, 
            T.ParamDefinitionsID AS ConfigParamPROD_ParamDefinitionsID, 
            T.isRefOnly AS ConfigParamPROD_isRefOnly, 
            T.[value] AS ConfigParamPROD_value, 
            T.valueUseageComments AS ConfigParamPROD_valueUseageComments, 
            T.updateDT AS ConfigParamPROD_updateDT, 
            T.updateUser AS ConfigParamPROD_updateUser, 
            True AS _from0, 
            T.ParamDefinition_ID AS [ConfigParamPROD_ParamDefinition.ConfigParamPROD_ParamDefinition_Target.ID]
        FROM CodeFirstDatabase.ConfigParamPROD AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for ConfigMgrReadContext.ConfigParamPROD_ParamDefinition.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView34()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing ConfigParamPROD_ParamDefinition
        [Company.DIV.ConfigMgr.Data.Read.ConfigParamPROD_ParamDefinition](T3.[ConfigParamPROD_ParamDefinition.ConfigParamPROD_ParamDefinition_Source], T3.[ConfigParamPROD_ParamDefinition.ConfigParamPROD_ParamDefinition_Target])
    FROM (
        SELECT -- Constructing ConfigParamPROD_ParamDefinition_Source
            CreateRef(ConfigMgrReadContext.configParamPROD, row(T2.[ConfigParamPROD_ParamDefinition.ConfigParamPROD_ParamDefinition_Source.ID]), [Company.DIV.ConfigMgr.Data.Read.ConfigParamPROD]) AS [ConfigParamPROD_ParamDefinition.ConfigParamPROD_ParamDefinition_Source], 
            T2.[ConfigParamPROD_ParamDefinition.ConfigParamPROD_ParamDefinition_Target]
        FROM (
            SELECT -- Constructing ConfigParamPROD_ParamDefinition_Target
                T1.[ConfigParamPROD_ParamDefinition.ConfigParamPROD_ParamDefinition_Source.ID], 
                CreateRef(ConfigMgrReadContext.paramDefinition, row(T1.[ConfigParamPROD_ParamDefinition.ConfigParamPROD_ParamDefinition_Target.ID]), [Company.DIV.ConfigMgr.Data.Read.ParamDefinition]) AS [ConfigParamPROD_ParamDefinition.ConfigParamPROD_ParamDefinition_Target]
            FROM (
                SELECT 
                    T.ID AS [ConfigParamPROD_ParamDefinition.ConfigParamPROD_ParamDefinition_Source.ID], 
                    T.ParamDefinition_ID AS [ConfigParamPROD_ParamDefinition.ConfigParamPROD_ParamDefinition_Target.ID], 
                    True AS _from0
                FROM CodeFirstDatabase.ConfigParamPROD AS T
            ) AS T1
        ) AS T2
    ) AS T3");
        }

        /// <summary>
        /// Gets the view for ConfigMgrReadContext.configParamQA1.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView35()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing configParamQA1
        [Company.DIV.ConfigMgr.Data.Read.ConfigParamQA1](T1.ConfigParamQA1_ID, T1.ConfigParamQA1_ConfigID, T1.ConfigParamQA1_effDT, T1.ConfigParamQA1_trmDT, T1.ConfigParamQA1_ParamDefinitionsID, T1.ConfigParamQA1_isRefOnly, T1.ConfigParamQA1_value, T1.ConfigParamQA1_valueUseageComments, T1.ConfigParamQA1_updateDT, T1.ConfigParamQA1_updateUser) WITH 
        RELATIONSHIP(CREATEREF(ConfigMgrReadContext.paramDefinition, ROW(T1.[ConfigParamQA1_ParamDefinition.ConfigParamQA1_ParamDefinition_Target.ID]),[Company.DIV.ConfigMgr.Data.Read.ParamDefinition]),[Company.DIV.ConfigMgr.Data.Read.ConfigParamQA1_ParamDefinition],ConfigParamQA1_ParamDefinition_Source,ConfigParamQA1_ParamDefinition_Target) 
    FROM (
        SELECT 
            T.ID AS ConfigParamQA1_ID, 
            T.ConfigID AS ConfigParamQA1_ConfigID, 
            T.effDT AS ConfigParamQA1_effDT, 
            T.trmDT AS ConfigParamQA1_trmDT, 
            T.ParamDefinitionsID AS ConfigParamQA1_ParamDefinitionsID, 
            T.isRefOnly AS ConfigParamQA1_isRefOnly, 
            T.[value] AS ConfigParamQA1_value, 
            T.valueUseageComments AS ConfigParamQA1_valueUseageComments, 
            T.updateDT AS ConfigParamQA1_updateDT, 
            T.updateUser AS ConfigParamQA1_updateUser, 
            True AS _from0, 
            T.ParamDefinition_ID AS [ConfigParamQA1_ParamDefinition.ConfigParamQA1_ParamDefinition_Target.ID]
        FROM CodeFirstDatabase.ConfigParamQA1 AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for ConfigMgrReadContext.ConfigParamQA1_ParamDefinition.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView36()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing ConfigParamQA1_ParamDefinition
        [Company.DIV.ConfigMgr.Data.Read.ConfigParamQA1_ParamDefinition](T3.[ConfigParamQA1_ParamDefinition.ConfigParamQA1_ParamDefinition_Source], T3.[ConfigParamQA1_ParamDefinition.ConfigParamQA1_ParamDefinition_Target])
    FROM (
        SELECT -- Constructing ConfigParamQA1_ParamDefinition_Source
            CreateRef(ConfigMgrReadContext.configParamQA1, row(T2.[ConfigParamQA1_ParamDefinition.ConfigParamQA1_ParamDefinition_Source.ID]), [Company.DIV.ConfigMgr.Data.Read.ConfigParamQA1]) AS [ConfigParamQA1_ParamDefinition.ConfigParamQA1_ParamDefinition_Source], 
            T2.[ConfigParamQA1_ParamDefinition.ConfigParamQA1_ParamDefinition_Target]
        FROM (
            SELECT -- Constructing ConfigParamQA1_ParamDefinition_Target
                T1.[ConfigParamQA1_ParamDefinition.ConfigParamQA1_ParamDefinition_Source.ID], 
                CreateRef(ConfigMgrReadContext.paramDefinition, row(T1.[ConfigParamQA1_ParamDefinition.ConfigParamQA1_ParamDefinition_Target.ID]), [Company.DIV.ConfigMgr.Data.Read.ParamDefinition]) AS [ConfigParamQA1_ParamDefinition.ConfigParamQA1_ParamDefinition_Target]
            FROM (
                SELECT 
                    T.ID AS [ConfigParamQA1_ParamDefinition.ConfigParamQA1_ParamDefinition_Source.ID], 
                    T.ParamDefinition_ID AS [ConfigParamQA1_ParamDefinition.ConfigParamQA1_ParamDefinition_Target.ID], 
                    True AS _from0
                FROM CodeFirstDatabase.ConfigParamQA1 AS T
            ) AS T1
        ) AS T2
    ) AS T3");
        }

        /// <summary>
        /// Gets the view for ConfigMgrReadContext.configParamQA2.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView37()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing configParamQA2
        [Company.DIV.ConfigMgr.Data.Read.ConfigParamQA2](T1.ConfigParamQA2_ID, T1.ConfigParamQA2_ConfigID, T1.ConfigParamQA2_effDT, T1.ConfigParamQA2_trmDT, T1.ConfigParamQA2_ParamDefinitionsID, T1.ConfigParamQA2_isRefOnly, T1.ConfigParamQA2_value, T1.ConfigParamQA2_valueUseageComments, T1.ConfigParamQA2_updateDT, T1.ConfigParamQA2_updateUser) WITH 
        RELATIONSHIP(CREATEREF(ConfigMgrReadContext.paramDefinition, ROW(T1.[ConfigParamQA2_ParamDefinition.ConfigParamQA2_ParamDefinition_Target.ID]),[Company.DIV.ConfigMgr.Data.Read.ParamDefinition]),[Company.DIV.ConfigMgr.Data.Read.ConfigParamQA2_ParamDefinition],ConfigParamQA2_ParamDefinition_Source,ConfigParamQA2_ParamDefinition_Target) 
    FROM (
        SELECT 
            T.ID AS ConfigParamQA2_ID, 
            T.ConfigID AS ConfigParamQA2_ConfigID, 
            T.effDT AS ConfigParamQA2_effDT, 
            T.trmDT AS ConfigParamQA2_trmDT, 
            T.ParamDefinitionsID AS ConfigParamQA2_ParamDefinitionsID, 
            T.isRefOnly AS ConfigParamQA2_isRefOnly, 
            T.[value] AS ConfigParamQA2_value, 
            T.valueUseageComments AS ConfigParamQA2_valueUseageComments, 
            T.updateDT AS ConfigParamQA2_updateDT, 
            T.updateUser AS ConfigParamQA2_updateUser, 
            True AS _from0, 
            T.ParamDefinition_ID AS [ConfigParamQA2_ParamDefinition.ConfigParamQA2_ParamDefinition_Target.ID]
        FROM CodeFirstDatabase.ConfigParamQA2 AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for ConfigMgrReadContext.ConfigParamQA2_ParamDefinition.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView38()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing ConfigParamQA2_ParamDefinition
        [Company.DIV.ConfigMgr.Data.Read.ConfigParamQA2_ParamDefinition](T3.[ConfigParamQA2_ParamDefinition.ConfigParamQA2_ParamDefinition_Source], T3.[ConfigParamQA2_ParamDefinition.ConfigParamQA2_ParamDefinition_Target])
    FROM (
        SELECT -- Constructing ConfigParamQA2_ParamDefinition_Source
            CreateRef(ConfigMgrReadContext.configParamQA2, row(T2.[ConfigParamQA2_ParamDefinition.ConfigParamQA2_ParamDefinition_Source.ID]), [Company.DIV.ConfigMgr.Data.Read.ConfigParamQA2]) AS [ConfigParamQA2_ParamDefinition.ConfigParamQA2_ParamDefinition_Source], 
            T2.[ConfigParamQA2_ParamDefinition.ConfigParamQA2_ParamDefinition_Target]
        FROM (
            SELECT -- Constructing ConfigParamQA2_ParamDefinition_Target
                T1.[ConfigParamQA2_ParamDefinition.ConfigParamQA2_ParamDefinition_Source.ID], 
                CreateRef(ConfigMgrReadContext.paramDefinition, row(T1.[ConfigParamQA2_ParamDefinition.ConfigParamQA2_ParamDefinition_Target.ID]), [Company.DIV.ConfigMgr.Data.Read.ParamDefinition]) AS [ConfigParamQA2_ParamDefinition.ConfigParamQA2_ParamDefinition_Target]
            FROM (
                SELECT 
                    T.ID AS [ConfigParamQA2_ParamDefinition.ConfigParamQA2_ParamDefinition_Source.ID], 
                    T.ParamDefinition_ID AS [ConfigParamQA2_ParamDefinition.ConfigParamQA2_ParamDefinition_Target.ID], 
                    True AS _from0
                FROM CodeFirstDatabase.ConfigParamQA2 AS T
            ) AS T1
        ) AS T2
    ) AS T3");
        }

        /// <summary>
        /// Gets the view for ConfigMgrReadContext.configParamSTG1.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView39()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing configParamSTG1
        [Company.DIV.ConfigMgr.Data.Read.ConfigParamSTG1](T1.ConfigParamSTG1_ID, T1.ConfigParamSTG1_ConfigID, T1.ConfigParamSTG1_effDT, T1.ConfigParamSTG1_trmDT, T1.ConfigParamSTG1_ParamDefinitionsID, T1.ConfigParamSTG1_isRefOnly, T1.ConfigParamSTG1_value, T1.ConfigParamSTG1_valueUseageComments, T1.ConfigParamSTG1_updateDT, T1.ConfigParamSTG1_updateUser) WITH 
        RELATIONSHIP(CREATEREF(ConfigMgrReadContext.paramDefinition, ROW(T1.[ConfigParamSTG1_ParamDefinition.ConfigParamSTG1_ParamDefinition_Target.ID]),[Company.DIV.ConfigMgr.Data.Read.ParamDefinition]),[Company.DIV.ConfigMgr.Data.Read.ConfigParamSTG1_ParamDefinition],ConfigParamSTG1_ParamDefinition_Source,ConfigParamSTG1_ParamDefinition_Target) 
    FROM (
        SELECT 
            T.ID AS ConfigParamSTG1_ID, 
            T.ConfigID AS ConfigParamSTG1_ConfigID, 
            T.effDT AS ConfigParamSTG1_effDT, 
            T.trmDT AS ConfigParamSTG1_trmDT, 
            T.ParamDefinitionsID AS ConfigParamSTG1_ParamDefinitionsID, 
            T.isRefOnly AS ConfigParamSTG1_isRefOnly, 
            T.[value] AS ConfigParamSTG1_value, 
            T.valueUseageComments AS ConfigParamSTG1_valueUseageComments, 
            T.updateDT AS ConfigParamSTG1_updateDT, 
            T.updateUser AS ConfigParamSTG1_updateUser, 
            True AS _from0, 
            T.ParamDefinition_ID AS [ConfigParamSTG1_ParamDefinition.ConfigParamSTG1_ParamDefinition_Target.ID]
        FROM CodeFirstDatabase.ConfigParamSTG1 AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for ConfigMgrReadContext.ConfigParamSTG1_ParamDefinition.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView40()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing ConfigParamSTG1_ParamDefinition
        [Company.DIV.ConfigMgr.Data.Read.ConfigParamSTG1_ParamDefinition](T3.[ConfigParamSTG1_ParamDefinition.ConfigParamSTG1_ParamDefinition_Source], T3.[ConfigParamSTG1_ParamDefinition.ConfigParamSTG1_ParamDefinition_Target])
    FROM (
        SELECT -- Constructing ConfigParamSTG1_ParamDefinition_Source
            CreateRef(ConfigMgrReadContext.configParamSTG1, row(T2.[ConfigParamSTG1_ParamDefinition.ConfigParamSTG1_ParamDefinition_Source.ID]), [Company.DIV.ConfigMgr.Data.Read.ConfigParamSTG1]) AS [ConfigParamSTG1_ParamDefinition.ConfigParamSTG1_ParamDefinition_Source], 
            T2.[ConfigParamSTG1_ParamDefinition.ConfigParamSTG1_ParamDefinition_Target]
        FROM (
            SELECT -- Constructing ConfigParamSTG1_ParamDefinition_Target
                T1.[ConfigParamSTG1_ParamDefinition.ConfigParamSTG1_ParamDefinition_Source.ID], 
                CreateRef(ConfigMgrReadContext.paramDefinition, row(T1.[ConfigParamSTG1_ParamDefinition.ConfigParamSTG1_ParamDefinition_Target.ID]), [Company.DIV.ConfigMgr.Data.Read.ParamDefinition]) AS [ConfigParamSTG1_ParamDefinition.ConfigParamSTG1_ParamDefinition_Target]
            FROM (
                SELECT 
                    T.ID AS [ConfigParamSTG1_ParamDefinition.ConfigParamSTG1_ParamDefinition_Source.ID], 
                    T.ParamDefinition_ID AS [ConfigParamSTG1_ParamDefinition.ConfigParamSTG1_ParamDefinition_Target.ID], 
                    True AS _from0
                FROM CodeFirstDatabase.ConfigParamSTG1 AS T
            ) AS T1
        ) AS T2
    ) AS T3");
        }

        /// <summary>
        /// Gets the view for ConfigMgrReadContext.configParamSTG2.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView41()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing configParamSTG2
        [Company.DIV.ConfigMgr.Data.Read.ConfigParamSTG2](T1.ConfigParamSTG2_ID, T1.ConfigParamSTG2_ConfigID, T1.ConfigParamSTG2_effDT, T1.ConfigParamSTG2_trmDT, T1.ConfigParamSTG2_ParamDefinitionsID, T1.ConfigParamSTG2_isRefOnly, T1.ConfigParamSTG2_value, T1.ConfigParamSTG2_valueUseageComments, T1.ConfigParamSTG2_updateDT, T1.ConfigParamSTG2_updateUser) WITH 
        RELATIONSHIP(CREATEREF(ConfigMgrReadContext.paramDefinition, ROW(T1.[ConfigParamSTG2_ParamDefinition.ConfigParamSTG2_ParamDefinition_Target.ID]),[Company.DIV.ConfigMgr.Data.Read.ParamDefinition]),[Company.DIV.ConfigMgr.Data.Read.ConfigParamSTG2_ParamDefinition],ConfigParamSTG2_ParamDefinition_Source,ConfigParamSTG2_ParamDefinition_Target) 
    FROM (
        SELECT 
            T.ID AS ConfigParamSTG2_ID, 
            T.ConfigID AS ConfigParamSTG2_ConfigID, 
            T.effDT AS ConfigParamSTG2_effDT, 
            T.trmDT AS ConfigParamSTG2_trmDT, 
            T.ParamDefinitionsID AS ConfigParamSTG2_ParamDefinitionsID, 
            T.isRefOnly AS ConfigParamSTG2_isRefOnly, 
            T.[value] AS ConfigParamSTG2_value, 
            T.valueUseageComments AS ConfigParamSTG2_valueUseageComments, 
            T.updateDT AS ConfigParamSTG2_updateDT, 
            T.updateUser AS ConfigParamSTG2_updateUser, 
            True AS _from0, 
            T.ParamDefinition_ID AS [ConfigParamSTG2_ParamDefinition.ConfigParamSTG2_ParamDefinition_Target.ID]
        FROM CodeFirstDatabase.ConfigParamSTG2 AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for ConfigMgrReadContext.ConfigParamSTG2_ParamDefinition.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView42()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing ConfigParamSTG2_ParamDefinition
        [Company.DIV.ConfigMgr.Data.Read.ConfigParamSTG2_ParamDefinition](T3.[ConfigParamSTG2_ParamDefinition.ConfigParamSTG2_ParamDefinition_Source], T3.[ConfigParamSTG2_ParamDefinition.ConfigParamSTG2_ParamDefinition_Target])
    FROM (
        SELECT -- Constructing ConfigParamSTG2_ParamDefinition_Source
            CreateRef(ConfigMgrReadContext.configParamSTG2, row(T2.[ConfigParamSTG2_ParamDefinition.ConfigParamSTG2_ParamDefinition_Source.ID]), [Company.DIV.ConfigMgr.Data.Read.ConfigParamSTG2]) AS [ConfigParamSTG2_ParamDefinition.ConfigParamSTG2_ParamDefinition_Source], 
            T2.[ConfigParamSTG2_ParamDefinition.ConfigParamSTG2_ParamDefinition_Target]
        FROM (
            SELECT -- Constructing ConfigParamSTG2_ParamDefinition_Target
                T1.[ConfigParamSTG2_ParamDefinition.ConfigParamSTG2_ParamDefinition_Source.ID], 
                CreateRef(ConfigMgrReadContext.paramDefinition, row(T1.[ConfigParamSTG2_ParamDefinition.ConfigParamSTG2_ParamDefinition_Target.ID]), [Company.DIV.ConfigMgr.Data.Read.ParamDefinition]) AS [ConfigParamSTG2_ParamDefinition.ConfigParamSTG2_ParamDefinition_Target]
            FROM (
                SELECT 
                    T.ID AS [ConfigParamSTG2_ParamDefinition.ConfigParamSTG2_ParamDefinition_Source.ID], 
                    T.ParamDefinition_ID AS [ConfigParamSTG2_ParamDefinition.ConfigParamSTG2_ParamDefinition_Target.ID], 
                    True AS _from0
                FROM CodeFirstDatabase.ConfigParamSTG2 AS T
            ) AS T1
        ) AS T2
    ) AS T3");
        }

        /// <summary>
        /// Gets the view for ConfigMgrReadContext.paramType.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView43()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing paramType
        [Company.DIV.ConfigMgr.Data.Read.ParamType](T1.ParamType_ID, T1.ParamType_type, T1.ParamType_updateDT, T1.ParamType_updateUser)
    FROM (
        SELECT 
            T.ID AS ParamType_ID, 
            T.type AS ParamType_type, 
            T.updateDT AS ParamType_updateDT, 
            T.updateUser AS ParamType_updateUser, 
            True AS _from0
        FROM CodeFirstDatabase.ParamType AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for ConfigMgrReadContext.paramVersion.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView44()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing paramVersion
        [Company.DIV.ConfigMgr.Data.Read.ParamVersion](T1.ParamVersion_ID, T1.ParamVersion_version, T1.ParamVersion_description, T1.ParamVersion_updateDT, T1.ParamVersion_updateUser)
    FROM (
        SELECT 
            T.ID AS ParamVersion_ID, 
            T.version AS ParamVersion_version, 
            T.description AS ParamVersion_description, 
            T.updateDT AS ParamVersion_updateDT, 
            T.updateUser AS ParamVersion_updateUser, 
            True AS _from0
        FROM CodeFirstDatabase.ParamVersion AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for ConfigMgrReadContext.executable.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView45()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing executable
        [Company.DIV.ConfigMgr.Data.Read.Executable](T1.Executable_ID, T1.Executable_ParamVersionID, T1.Executable_AppID, T1.Executable_nameWExtension, T1.Executable_description, T1.Executable_updateDT, T1.Executable_updateUser)
    FROM (
        SELECT 
            T.ID AS Executable_ID, 
            T.ParamVersionID AS Executable_ParamVersionID, 
            T.AppID AS Executable_AppID, 
            T.nameWExtension AS Executable_nameWExtension, 
            T.description AS Executable_description, 
            T.updateDT AS Executable_updateDT, 
            T.updateUser AS Executable_updateUser, 
            True AS _from0
        FROM CodeFirstDatabase.Executable AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for ConfigMgrReadContext.jConfigExecutable.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView46()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing jConfigExecutable
        [Company.DIV.ConfigMgr.Data.Read.JConfigExecutable](T1.JConfigExecutable_ID, T1.JConfigExecutable_ConfigID, T1.JConfigExecutable_ExecutableID, T1.JConfigExecutable_updateDT, T1.JConfigExecutable_updateUser)
    FROM (
        SELECT 
            T.ID AS JConfigExecutable_ID, 
            T.ConfigID AS JConfigExecutable_ConfigID, 
            T.ExecutableID AS JConfigExecutable_ExecutableID, 
            T.updateDT AS JConfigExecutable_updateDT, 
            T.updateUser AS JConfigExecutable_updateUser, 
            True AS _from0
        FROM CodeFirstDatabase.JConfigExecutable AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for ConfigMgrReadContext.jExecutablePathServer.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView47()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing jExecutablePathServer
        [Company.DIV.ConfigMgr.Data.Read.JExecutablePathServer](T1.JExecutablePathServer_ID, T1.JExecutablePathServer_ExecutableID, T1.JExecutablePathServer_PathServerID, T1.JExecutablePathServer_updateDT, T1.JExecutablePathServer_updateUser)
    FROM (
        SELECT 
            T.ID AS JExecutablePathServer_ID, 
            T.ExecutableID AS JExecutablePathServer_ExecutableID, 
            T.PathServerID AS JExecutablePathServer_PathServerID, 
            T.updateDT AS JExecutablePathServer_updateDT, 
            T.updateUser AS JExecutablePathServer_updateUser, 
            True AS _from0
        FROM CodeFirstDatabase.JExecutablePathServer AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for ConfigMgrReadContext.pathServer.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView48()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing pathServer
        [Company.DIV.ConfigMgr.Data.Read.PathServer](T1.PathServer_ID, T1.PathServer_server, T1.PathServer_path, T1.PathServer_updateDT, T1.PathServer_updateUser)
    FROM (
        SELECT 
            T.ID AS PathServer_ID, 
            T.server AS PathServer_server, 
            T.path AS PathServer_path, 
            T.updateDT AS PathServer_updateDT, 
            T.updateUser AS PathServer_updateUser, 
            True AS _from0
        FROM CodeFirstDatabase.PathServer AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for ConfigMgrReadContext.jPathServerPathShare.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView49()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing jPathServerPathShare
        [Company.DIV.ConfigMgr.Data.Read.JPathServerPathShare](T1.JPathServerPathShare_ID, T1.JPathServerPathShare_PathServerID, T1.JPathServerPathShare_PathShareID, T1.JPathServerPathShare_updateDT, T1.JPathServerPathShare_updateUser)
    FROM (
        SELECT 
            T.ID AS JPathServerPathShare_ID, 
            T.PathServerID AS JPathServerPathShare_PathServerID, 
            T.PathShareID AS JPathServerPathShare_PathShareID, 
            T.updateDT AS JPathServerPathShare_updateDT, 
            T.updateUser AS JPathServerPathShare_updateUser, 
            True AS _from0
        FROM CodeFirstDatabase.JPathServerPathShare AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for ConfigMgrReadContext.pathShare.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView50()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing pathShare
        [Company.DIV.ConfigMgr.Data.Read.PathShare](T1.PathShare_ID, T1.PathShare_share, T1.PathShare_path, T1.PathShare_updateDT, T1.PathShare_updateUser)
    FROM (
        SELECT 
            T.ID AS PathShare_ID, 
            T.share AS PathShare_share, 
            T.path AS PathShare_path, 
            T.updateDT AS PathShare_updateDT, 
            T.updateUser AS PathShare_updateUser, 
            True AS _from0
        FROM CodeFirstDatabase.PathShare AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for ConfigMgrReadContext.jExecutablePrimaryFunction.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView51()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing jExecutablePrimaryFunction
        [Company.DIV.ConfigMgr.Data.Read.JExecutablePrimaryFunction](T1.JExecutablePrimaryFunction_ID, T1.JExecutablePrimaryFunction_ExecutableID, T1.JExecutablePrimaryFunction_PrimaryFunctionID, T1.JExecutablePrimaryFunction_updateDT, T1.JExecutablePrimaryFunction_updateUser)
    FROM (
        SELECT 
            T.ID AS JExecutablePrimaryFunction_ID, 
            T.ExecutableID AS JExecutablePrimaryFunction_ExecutableID, 
            T.PrimaryFunctionID AS JExecutablePrimaryFunction_PrimaryFunctionID, 
            T.updateDT AS JExecutablePrimaryFunction_updateDT, 
            T.updateUser AS JExecutablePrimaryFunction_updateUser, 
            True AS _from0
        FROM CodeFirstDatabase.JExecutablePrimaryFunction AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for ConfigMgrReadContext.executableFunction.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView52()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing executableFunction
        [Company.DIV.ConfigMgr.Data.Read.PrimaryFunction](T1.PrimaryFunction_ID, T1.PrimaryFunction_abbr, T1.PrimaryFunction_description, T1.PrimaryFunction_updateDT, T1.PrimaryFunction_updateUser)
    FROM (
        SELECT 
            T.ID AS PrimaryFunction_ID, 
            T.abbr AS PrimaryFunction_abbr, 
            T.description AS PrimaryFunction_description, 
            T.updateDT AS PrimaryFunction_updateDT, 
            T.updateUser AS PrimaryFunction_updateUser, 
            True AS _from0
        FROM CodeFirstDatabase.PrimaryFunction AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for ConfigMgrReadContext.jConfigJPlanLOB.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView53()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing jConfigJPlanLOB
        [Company.DIV.ConfigMgr.Data.Read.JConfigJPlanLOB](T1.JConfigJPlanLOB_ID, T1.JConfigJPlanLOB_ConfigID, T1.JConfigJPlanLOB_JPlanLOBID, T1.JConfigJPlanLOB_updateDT, T1.JConfigJPlanLOB_updateUser)
    FROM (
        SELECT 
            T.ID AS JConfigJPlanLOB_ID, 
            T.ConfigID AS JConfigJPlanLOB_ConfigID, 
            T.JPlanLOBID AS JConfigJPlanLOB_JPlanLOBID, 
            T.updateDT AS JConfigJPlanLOB_updateDT, 
            T.updateUser AS JConfigJPlanLOB_updateUser, 
            True AS _from0
        FROM CodeFirstDatabase.JConfigJPlanLOB AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for ConfigMgrReadContext.jPlanLOB.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView54()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing jPlanLOB
        [Company.DIV.ConfigMgr.Data.Read.JPlanLOB](T1.JPlanLOB_ID, T1.JPlanLOB_planID, T1.JPlanLOB_LineOfBusinessID, T1.JPlanLOB_updateDT, T1.JPlanLOB_updateUser)
    FROM (
        SELECT 
            T.ID AS JPlanLOB_ID, 
            T.planID AS JPlanLOB_planID, 
            T.LineOfBusinessID AS JPlanLOB_LineOfBusinessID, 
            T.updateDT AS JPlanLOB_updateDT, 
            T.updateUser AS JPlanLOB_updateUser, 
            True AS _from0
        FROM CodeFirstDatabase.JPlanLOB AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for ConfigMgrReadContext.lineOfBusiness.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView55()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing lineOfBusiness
        [Company.DIV.ConfigMgr.Data.Read.LineOfBusiness](T1.LineOfBusiness_ID, T1.LineOfBusiness_abbr, T1.LineOfBusiness_descr, T1.LineOfBusiness_updateDT, T1.LineOfBusiness_updateUser)
    FROM (
        SELECT 
            T.ID AS LineOfBusiness_ID, 
            T.abbr AS LineOfBusiness_abbr, 
            T.descr AS LineOfBusiness_descr, 
            T.updateDT AS LineOfBusiness_updateDT, 
            T.updateUser AS LineOfBusiness_updateUser, 
            True AS _from0
        FROM CodeFirstDatabase.LineOfBusiness AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for ConfigMgrReadContext.plan.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView56()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing plan
        [Company.DIV.ConfigMgr.Data.Read.Plan](T1.Plan_ID, T1.Plan_abbr, T1.Plan_descr, T1.Plan_updateDT, T1.Plan_updateUser)
    FROM (
        SELECT 
            T.ID AS Plan_ID, 
            T.abbr AS Plan_abbr, 
            T.descr AS Plan_descr, 
            T.updateDT AS Plan_updateDT, 
            T.updateUser AS Plan_updateUser, 
            True AS _from0
        FROM CodeFirstDatabase.Plan AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for ConfigMgrReadContext.jAppPlan.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView57()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing jAppPlan
        [Company.DIV.ConfigMgr.Data.Read.JAppPlan](T1.JAppPlan_ID, T1.JAppPlan_AppID, T1.JAppPlan_PlanID, T1.JAppPlan_updateDT, T1.JAppPlan_updateUser)
    FROM (
        SELECT 
            T.ID AS JAppPlan_ID, 
            T.AppID AS JAppPlan_AppID, 
            T.PlanID AS JAppPlan_PlanID, 
            T.updateDT AS JAppPlan_updateDT, 
            T.updateUser AS JAppPlan_updateUser, 
            True AS _from0
        FROM CodeFirstDatabase.JAppPlan AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for ConfigMgrReadContext.jConfigPlan.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView58()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing jConfigPlan
        [Company.DIV.ConfigMgr.Data.Read.JConfigPlan](T1.JConfigPlan_ID, T1.JConfigPlan_ConfigID, T1.JConfigPlan_PlanID, T1.JConfigPlan_updateDT, T1.JConfigPlan_updateUser)
    FROM (
        SELECT 
            T.ID AS JConfigPlan_ID, 
            T.ConfigID AS JConfigPlan_ConfigID, 
            T.PlanID AS JConfigPlan_PlanID, 
            T.updateDT AS JConfigPlan_updateDT, 
            T.updateUser AS JConfigPlan_updateUser, 
            True AS _from0
        FROM CodeFirstDatabase.JConfigPlan AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for CodeFirstDatabase.AppAudit.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView59()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing AppAudit
        [CodeFirstDatabaseSchema.AppAudit](T1.AppAudit_AuditID, T1.AppAudit_ITIL, T1.AppAudit_abbr, T1.AppAudit_description, T1.AppAudit_AuditDT, T1.AppAudit_AuditType, T1.AppAudit_AuditSUserSName, T1.AppAudit_ID, T1.AppAudit_updateDT, T1.AppAudit_updateUser)
    FROM (
        SELECT 
            T.AuditID AS AppAudit_AuditID, 
            T.ITIL AS AppAudit_ITIL, 
            T.abbr AS AppAudit_abbr, 
            T.description AS AppAudit_description, 
            T.AuditDT AS AppAudit_AuditDT, 
            T.AuditType AS AppAudit_AuditType, 
            T.AuditSUserSName AS AppAudit_AuditSUserSName, 
            T.ID AS AppAudit_ID, 
            T.updateDT AS AppAudit_updateDT, 
            T.updateUser AS AppAudit_updateUser, 
            True AS _from0
        FROM ConfigMgrReadContext.appAudit AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for ConfigMgrReadContext.appAudit.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView60()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing appAudit
        [Company.DIV.ConfigMgr.Data.Read.AppAudit](T1.AppAudit_AuditID, T1.AppAudit_ITIL, T1.AppAudit_abbr, T1.AppAudit_description, T1.AppAudit_AuditDT, T1.AppAudit_AuditType, T1.AppAudit_AuditSUserSName, T1.AppAudit_ID, T1.AppAudit_updateDT, T1.AppAudit_updateUser)
    FROM (
        SELECT 
            T.AuditID AS AppAudit_AuditID, 
            T.ITIL AS AppAudit_ITIL, 
            T.abbr AS AppAudit_abbr, 
            T.description AS AppAudit_description, 
            T.AuditDT AS AppAudit_AuditDT, 
            T.AuditType AS AppAudit_AuditType, 
            T.AuditSUserSName AS AppAudit_AuditSUserSName, 
            T.ID AS AppAudit_ID, 
            T.updateDT AS AppAudit_updateDT, 
            T.updateUser AS AppAudit_updateUser, 
            True AS _from0
        FROM CodeFirstDatabase.AppAudit AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for CodeFirstDatabase.ConfigAudit.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView61()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing ConfigAudit
        [CodeFirstDatabaseSchema.ConfigAudit](T1.ConfigAudit_AuditID, T1.ConfigAudit_jobID, T1.ConfigAudit_AppID, T1.ConfigAudit_ParamVersionID, T1.ConfigAudit_Active, T1.ConfigAudit_DescriptonShort, T1.ConfigAudit_DescriptonFull, T1.ConfigAudit_effDT, T1.ConfigAudit_trmDT, T1.ConfigAudit_AuditDT, T1.ConfigAudit_AuditType, T1.ConfigAudit_AuditSUserSName, T1.ConfigAudit_ID, T1.ConfigAudit_updateDT, T1.ConfigAudit_updateUser)
    FROM (
        SELECT 
            T.AuditID AS ConfigAudit_AuditID, 
            T.jobID AS ConfigAudit_jobID, 
            T.AppID AS ConfigAudit_AppID, 
            T.ParamVersionID AS ConfigAudit_ParamVersionID, 
            T.Active AS ConfigAudit_Active, 
            T.DescriptonShort AS ConfigAudit_DescriptonShort, 
            T.DescriptonFull AS ConfigAudit_DescriptonFull, 
            T.effDT AS ConfigAudit_effDT, 
            T.trmDT AS ConfigAudit_trmDT, 
            T.AuditDT AS ConfigAudit_AuditDT, 
            T.AuditType AS ConfigAudit_AuditType, 
            T.AuditSUserSName AS ConfigAudit_AuditSUserSName, 
            T.ID AS ConfigAudit_ID, 
            T.updateDT AS ConfigAudit_updateDT, 
            T.updateUser AS ConfigAudit_updateUser, 
            True AS _from0
        FROM ConfigMgrReadContext.configAudit AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for ConfigMgrReadContext.configAudit.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView62()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing configAudit
        [Company.DIV.ConfigMgr.Data.Read.ConfigAudit](T1.ConfigAudit_AuditID, T1.ConfigAudit_jobID, T1.ConfigAudit_AppID, T1.ConfigAudit_ParamVersionID, T1.ConfigAudit_Active, T1.ConfigAudit_DescriptonShort, T1.ConfigAudit_DescriptonFull, T1.ConfigAudit_effDT, T1.ConfigAudit_trmDT, T1.ConfigAudit_AuditDT, T1.ConfigAudit_AuditType, T1.ConfigAudit_AuditSUserSName, T1.ConfigAudit_ID, T1.ConfigAudit_updateDT, T1.ConfigAudit_updateUser)
    FROM (
        SELECT 
            T.AuditID AS ConfigAudit_AuditID, 
            T.jobID AS ConfigAudit_jobID, 
            T.AppID AS ConfigAudit_AppID, 
            T.ParamVersionID AS ConfigAudit_ParamVersionID, 
            T.Active AS ConfigAudit_Active, 
            T.DescriptonShort AS ConfigAudit_DescriptonShort, 
            T.DescriptonFull AS ConfigAudit_DescriptonFull, 
            T.effDT AS ConfigAudit_effDT, 
            T.trmDT AS ConfigAudit_trmDT, 
            T.AuditDT AS ConfigAudit_AuditDT, 
            T.AuditType AS ConfigAudit_AuditType, 
            T.AuditSUserSName AS ConfigAudit_AuditSUserSName, 
            T.ID AS ConfigAudit_ID, 
            T.updateDT AS ConfigAudit_updateDT, 
            T.updateUser AS ConfigAudit_updateUser, 
            True AS _from0
        FROM CodeFirstDatabase.ConfigAudit AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for CodeFirstDatabase.ConfigParamDEV1Audit.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView63()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing ConfigParamDEV1Audit
        [CodeFirstDatabaseSchema.ConfigParamDEV1Audit](T1.ConfigParamDEV1Audit_AuditID, T1.ConfigParamDEV1Audit_ConfigID, T1.ConfigParamDEV1Audit_effDT, T1.ConfigParamDEV1Audit_trmDT, T1.ConfigParamDEV1Audit_ParamDefinitionsID, T1.ConfigParamDEV1Audit_isRefOnly, T1.ConfigParamDEV1Audit_value, T1.ConfigParamDEV1Audit_valueUseageComments, T1.ConfigParamDEV1Audit_AuditDT, T1.ConfigParamDEV1Audit_AuditType, T1.ConfigParamDEV1Audit_AuditSUserSName, T1.ConfigParamDEV1Audit_ID, T1.ConfigParamDEV1Audit_updateDT, T1.ConfigParamDEV1Audit_updateUser)
    FROM (
        SELECT 
            T.AuditID AS ConfigParamDEV1Audit_AuditID, 
            T.ConfigID AS ConfigParamDEV1Audit_ConfigID, 
            T.effDT AS ConfigParamDEV1Audit_effDT, 
            T.trmDT AS ConfigParamDEV1Audit_trmDT, 
            T.ParamDefinitionsID AS ConfigParamDEV1Audit_ParamDefinitionsID, 
            T.isRefOnly AS ConfigParamDEV1Audit_isRefOnly, 
            T.[value] AS ConfigParamDEV1Audit_value, 
            T.valueUseageComments AS ConfigParamDEV1Audit_valueUseageComments, 
            T.AuditDT AS ConfigParamDEV1Audit_AuditDT, 
            T.AuditType AS ConfigParamDEV1Audit_AuditType, 
            T.AuditSUserSName AS ConfigParamDEV1Audit_AuditSUserSName, 
            T.ID AS ConfigParamDEV1Audit_ID, 
            T.updateDT AS ConfigParamDEV1Audit_updateDT, 
            T.updateUser AS ConfigParamDEV1Audit_updateUser, 
            True AS _from0
        FROM ConfigMgrReadContext.configParamDev1Audit AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for ConfigMgrReadContext.configParamDev1Audit.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView64()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing configParamDev1Audit
        [Company.DIV.ConfigMgr.Data.Read.ConfigParamDEV1Audit](T1.ConfigParamDEV1Audit_AuditID, T1.ConfigParamDEV1Audit_ConfigID, T1.ConfigParamDEV1Audit_effDT, T1.ConfigParamDEV1Audit_trmDT, T1.ConfigParamDEV1Audit_ParamDefinitionsID, T1.ConfigParamDEV1Audit_isRefOnly, T1.ConfigParamDEV1Audit_value, T1.ConfigParamDEV1Audit_valueUseageComments, T1.ConfigParamDEV1Audit_AuditDT, T1.ConfigParamDEV1Audit_AuditType, T1.ConfigParamDEV1Audit_AuditSUserSName, T1.ConfigParamDEV1Audit_ID, T1.ConfigParamDEV1Audit_updateDT, T1.ConfigParamDEV1Audit_updateUser)
    FROM (
        SELECT 
            T.AuditID AS ConfigParamDEV1Audit_AuditID, 
            T.ConfigID AS ConfigParamDEV1Audit_ConfigID, 
            T.effDT AS ConfigParamDEV1Audit_effDT, 
            T.trmDT AS ConfigParamDEV1Audit_trmDT, 
            T.ParamDefinitionsID AS ConfigParamDEV1Audit_ParamDefinitionsID, 
            T.isRefOnly AS ConfigParamDEV1Audit_isRefOnly, 
            T.[value] AS ConfigParamDEV1Audit_value, 
            T.valueUseageComments AS ConfigParamDEV1Audit_valueUseageComments, 
            T.AuditDT AS ConfigParamDEV1Audit_AuditDT, 
            T.AuditType AS ConfigParamDEV1Audit_AuditType, 
            T.AuditSUserSName AS ConfigParamDEV1Audit_AuditSUserSName, 
            T.ID AS ConfigParamDEV1Audit_ID, 
            T.updateDT AS ConfigParamDEV1Audit_updateDT, 
            T.updateUser AS ConfigParamDEV1Audit_updateUser, 
            True AS _from0
        FROM CodeFirstDatabase.ConfigParamDEV1Audit AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for CodeFirstDatabase.ConfigParamDEV2Audit.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView65()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing ConfigParamDEV2Audit
        [CodeFirstDatabaseSchema.ConfigParamDEV2Audit](T1.ConfigParamDEV2Audit_AuditID, T1.ConfigParamDEV2Audit_ConfigID, T1.ConfigParamDEV2Audit_effDT, T1.ConfigParamDEV2Audit_trmDT, T1.ConfigParamDEV2Audit_ParamDefinitionsID, T1.ConfigParamDEV2Audit_isRefOnly, T1.ConfigParamDEV2Audit_value, T1.ConfigParamDEV2Audit_valueUseageComments, T1.ConfigParamDEV2Audit_AuditDT, T1.ConfigParamDEV2Audit_AuditType, T1.ConfigParamDEV2Audit_AuditSUserSName, T1.ConfigParamDEV2Audit_ID, T1.ConfigParamDEV2Audit_updateDT, T1.ConfigParamDEV2Audit_updateUser)
    FROM (
        SELECT 
            T.AuditID AS ConfigParamDEV2Audit_AuditID, 
            T.ConfigID AS ConfigParamDEV2Audit_ConfigID, 
            T.effDT AS ConfigParamDEV2Audit_effDT, 
            T.trmDT AS ConfigParamDEV2Audit_trmDT, 
            T.ParamDefinitionsID AS ConfigParamDEV2Audit_ParamDefinitionsID, 
            T.isRefOnly AS ConfigParamDEV2Audit_isRefOnly, 
            T.[value] AS ConfigParamDEV2Audit_value, 
            T.valueUseageComments AS ConfigParamDEV2Audit_valueUseageComments, 
            T.AuditDT AS ConfigParamDEV2Audit_AuditDT, 
            T.AuditType AS ConfigParamDEV2Audit_AuditType, 
            T.AuditSUserSName AS ConfigParamDEV2Audit_AuditSUserSName, 
            T.ID AS ConfigParamDEV2Audit_ID, 
            T.updateDT AS ConfigParamDEV2Audit_updateDT, 
            T.updateUser AS ConfigParamDEV2Audit_updateUser, 
            True AS _from0
        FROM ConfigMgrReadContext.configParamDev2Audit AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for ConfigMgrReadContext.configParamDev2Audit.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView66()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing configParamDev2Audit
        [Company.DIV.ConfigMgr.Data.Read.ConfigParamDEV2Audit](T1.ConfigParamDEV2Audit_AuditID, T1.ConfigParamDEV2Audit_ConfigID, T1.ConfigParamDEV2Audit_effDT, T1.ConfigParamDEV2Audit_trmDT, T1.ConfigParamDEV2Audit_ParamDefinitionsID, T1.ConfigParamDEV2Audit_isRefOnly, T1.ConfigParamDEV2Audit_value, T1.ConfigParamDEV2Audit_valueUseageComments, T1.ConfigParamDEV2Audit_AuditDT, T1.ConfigParamDEV2Audit_AuditType, T1.ConfigParamDEV2Audit_AuditSUserSName, T1.ConfigParamDEV2Audit_ID, T1.ConfigParamDEV2Audit_updateDT, T1.ConfigParamDEV2Audit_updateUser)
    FROM (
        SELECT 
            T.AuditID AS ConfigParamDEV2Audit_AuditID, 
            T.ConfigID AS ConfigParamDEV2Audit_ConfigID, 
            T.effDT AS ConfigParamDEV2Audit_effDT, 
            T.trmDT AS ConfigParamDEV2Audit_trmDT, 
            T.ParamDefinitionsID AS ConfigParamDEV2Audit_ParamDefinitionsID, 
            T.isRefOnly AS ConfigParamDEV2Audit_isRefOnly, 
            T.[value] AS ConfigParamDEV2Audit_value, 
            T.valueUseageComments AS ConfigParamDEV2Audit_valueUseageComments, 
            T.AuditDT AS ConfigParamDEV2Audit_AuditDT, 
            T.AuditType AS ConfigParamDEV2Audit_AuditType, 
            T.AuditSUserSName AS ConfigParamDEV2Audit_AuditSUserSName, 
            T.ID AS ConfigParamDEV2Audit_ID, 
            T.updateDT AS ConfigParamDEV2Audit_updateDT, 
            T.updateUser AS ConfigParamDEV2Audit_updateUser, 
            True AS _from0
        FROM CodeFirstDatabase.ConfigParamDEV2Audit AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for CodeFirstDatabase.ConfigParamPRODAudit.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView67()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing ConfigParamPRODAudit
        [CodeFirstDatabaseSchema.ConfigParamPRODAudit](T1.ConfigParamPRODAudit_AuditID, T1.ConfigParamPRODAudit_ConfigID, T1.ConfigParamPRODAudit_effDT, T1.ConfigParamPRODAudit_trmDT, T1.ConfigParamPRODAudit_ParamDefinitionsID, T1.ConfigParamPRODAudit_isRefOnly, T1.ConfigParamPRODAudit_value, T1.ConfigParamPRODAudit_valueUseageComments, T1.ConfigParamPRODAudit_AuditDT, T1.ConfigParamPRODAudit_AuditType, T1.ConfigParamPRODAudit_AuditSUserSName, T1.ConfigParamPRODAudit_ID, T1.ConfigParamPRODAudit_updateDT, T1.ConfigParamPRODAudit_updateUser)
    FROM (
        SELECT 
            T.AuditID AS ConfigParamPRODAudit_AuditID, 
            T.ConfigID AS ConfigParamPRODAudit_ConfigID, 
            T.effDT AS ConfigParamPRODAudit_effDT, 
            T.trmDT AS ConfigParamPRODAudit_trmDT, 
            T.ParamDefinitionsID AS ConfigParamPRODAudit_ParamDefinitionsID, 
            T.isRefOnly AS ConfigParamPRODAudit_isRefOnly, 
            T.[value] AS ConfigParamPRODAudit_value, 
            T.valueUseageComments AS ConfigParamPRODAudit_valueUseageComments, 
            T.AuditDT AS ConfigParamPRODAudit_AuditDT, 
            T.AuditType AS ConfigParamPRODAudit_AuditType, 
            T.AuditSUserSName AS ConfigParamPRODAudit_AuditSUserSName, 
            T.ID AS ConfigParamPRODAudit_ID, 
            T.updateDT AS ConfigParamPRODAudit_updateDT, 
            T.updateUser AS ConfigParamPRODAudit_updateUser, 
            True AS _from0
        FROM ConfigMgrReadContext.configParamPRODAudit AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for ConfigMgrReadContext.configParamPRODAudit.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView68()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing configParamPRODAudit
        [Company.DIV.ConfigMgr.Data.Read.ConfigParamPRODAudit](T1.ConfigParamPRODAudit_AuditID, T1.ConfigParamPRODAudit_ConfigID, T1.ConfigParamPRODAudit_effDT, T1.ConfigParamPRODAudit_trmDT, T1.ConfigParamPRODAudit_ParamDefinitionsID, T1.ConfigParamPRODAudit_isRefOnly, T1.ConfigParamPRODAudit_value, T1.ConfigParamPRODAudit_valueUseageComments, T1.ConfigParamPRODAudit_AuditDT, T1.ConfigParamPRODAudit_AuditType, T1.ConfigParamPRODAudit_AuditSUserSName, T1.ConfigParamPRODAudit_ID, T1.ConfigParamPRODAudit_updateDT, T1.ConfigParamPRODAudit_updateUser)
    FROM (
        SELECT 
            T.AuditID AS ConfigParamPRODAudit_AuditID, 
            T.ConfigID AS ConfigParamPRODAudit_ConfigID, 
            T.effDT AS ConfigParamPRODAudit_effDT, 
            T.trmDT AS ConfigParamPRODAudit_trmDT, 
            T.ParamDefinitionsID AS ConfigParamPRODAudit_ParamDefinitionsID, 
            T.isRefOnly AS ConfigParamPRODAudit_isRefOnly, 
            T.[value] AS ConfigParamPRODAudit_value, 
            T.valueUseageComments AS ConfigParamPRODAudit_valueUseageComments, 
            T.AuditDT AS ConfigParamPRODAudit_AuditDT, 
            T.AuditType AS ConfigParamPRODAudit_AuditType, 
            T.AuditSUserSName AS ConfigParamPRODAudit_AuditSUserSName, 
            T.ID AS ConfigParamPRODAudit_ID, 
            T.updateDT AS ConfigParamPRODAudit_updateDT, 
            T.updateUser AS ConfigParamPRODAudit_updateUser, 
            True AS _from0
        FROM CodeFirstDatabase.ConfigParamPRODAudit AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for CodeFirstDatabase.ConfigParamQA1Audit.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView69()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing ConfigParamQA1Audit
        [CodeFirstDatabaseSchema.ConfigParamQA1Audit](T1.ConfigParamQA1Audit_AuditID, T1.ConfigParamQA1Audit_ConfigID, T1.ConfigParamQA1Audit_effDT, T1.ConfigParamQA1Audit_trmDT, T1.ConfigParamQA1Audit_ParamDefinitionsID, T1.ConfigParamQA1Audit_isRefOnly, T1.ConfigParamQA1Audit_value, T1.ConfigParamQA1Audit_valueUseageComments, T1.ConfigParamQA1Audit_AuditDT, T1.ConfigParamQA1Audit_AuditType, T1.ConfigParamQA1Audit_AuditSUserSName, T1.ConfigParamQA1Audit_ID, T1.ConfigParamQA1Audit_updateDT, T1.ConfigParamQA1Audit_updateUser)
    FROM (
        SELECT 
            T.AuditID AS ConfigParamQA1Audit_AuditID, 
            T.ConfigID AS ConfigParamQA1Audit_ConfigID, 
            T.effDT AS ConfigParamQA1Audit_effDT, 
            T.trmDT AS ConfigParamQA1Audit_trmDT, 
            T.ParamDefinitionsID AS ConfigParamQA1Audit_ParamDefinitionsID, 
            T.isRefOnly AS ConfigParamQA1Audit_isRefOnly, 
            T.[value] AS ConfigParamQA1Audit_value, 
            T.valueUseageComments AS ConfigParamQA1Audit_valueUseageComments, 
            T.AuditDT AS ConfigParamQA1Audit_AuditDT, 
            T.AuditType AS ConfigParamQA1Audit_AuditType, 
            T.AuditSUserSName AS ConfigParamQA1Audit_AuditSUserSName, 
            T.ID AS ConfigParamQA1Audit_ID, 
            T.updateDT AS ConfigParamQA1Audit_updateDT, 
            T.updateUser AS ConfigParamQA1Audit_updateUser, 
            True AS _from0
        FROM ConfigMgrReadContext.configParamQA1Audit AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for ConfigMgrReadContext.configParamQA1Audit.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView70()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing configParamQA1Audit
        [Company.DIV.ConfigMgr.Data.Read.ConfigParamQA1Audit](T1.ConfigParamQA1Audit_AuditID, T1.ConfigParamQA1Audit_ConfigID, T1.ConfigParamQA1Audit_effDT, T1.ConfigParamQA1Audit_trmDT, T1.ConfigParamQA1Audit_ParamDefinitionsID, T1.ConfigParamQA1Audit_isRefOnly, T1.ConfigParamQA1Audit_value, T1.ConfigParamQA1Audit_valueUseageComments, T1.ConfigParamQA1Audit_AuditDT, T1.ConfigParamQA1Audit_AuditType, T1.ConfigParamQA1Audit_AuditSUserSName, T1.ConfigParamQA1Audit_ID, T1.ConfigParamQA1Audit_updateDT, T1.ConfigParamQA1Audit_updateUser)
    FROM (
        SELECT 
            T.AuditID AS ConfigParamQA1Audit_AuditID, 
            T.ConfigID AS ConfigParamQA1Audit_ConfigID, 
            T.effDT AS ConfigParamQA1Audit_effDT, 
            T.trmDT AS ConfigParamQA1Audit_trmDT, 
            T.ParamDefinitionsID AS ConfigParamQA1Audit_ParamDefinitionsID, 
            T.isRefOnly AS ConfigParamQA1Audit_isRefOnly, 
            T.[value] AS ConfigParamQA1Audit_value, 
            T.valueUseageComments AS ConfigParamQA1Audit_valueUseageComments, 
            T.AuditDT AS ConfigParamQA1Audit_AuditDT, 
            T.AuditType AS ConfigParamQA1Audit_AuditType, 
            T.AuditSUserSName AS ConfigParamQA1Audit_AuditSUserSName, 
            T.ID AS ConfigParamQA1Audit_ID, 
            T.updateDT AS ConfigParamQA1Audit_updateDT, 
            T.updateUser AS ConfigParamQA1Audit_updateUser, 
            True AS _from0
        FROM CodeFirstDatabase.ConfigParamQA1Audit AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for CodeFirstDatabase.ConfigParamQA2Audit.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView71()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing ConfigParamQA2Audit
        [CodeFirstDatabaseSchema.ConfigParamQA2Audit](T1.ConfigParamQA2Audit_AuditID, T1.ConfigParamQA2Audit_ConfigID, T1.ConfigParamQA2Audit_effDT, T1.ConfigParamQA2Audit_trmDT, T1.ConfigParamQA2Audit_ParamDefinitionsID, T1.ConfigParamQA2Audit_isRefOnly, T1.ConfigParamQA2Audit_value, T1.ConfigParamQA2Audit_valueUseageComments, T1.ConfigParamQA2Audit_AuditDT, T1.ConfigParamQA2Audit_AuditType, T1.ConfigParamQA2Audit_AuditSUserSName, T1.ConfigParamQA2Audit_ID, T1.ConfigParamQA2Audit_updateDT, T1.ConfigParamQA2Audit_updateUser)
    FROM (
        SELECT 
            T.AuditID AS ConfigParamQA2Audit_AuditID, 
            T.ConfigID AS ConfigParamQA2Audit_ConfigID, 
            T.effDT AS ConfigParamQA2Audit_effDT, 
            T.trmDT AS ConfigParamQA2Audit_trmDT, 
            T.ParamDefinitionsID AS ConfigParamQA2Audit_ParamDefinitionsID, 
            T.isRefOnly AS ConfigParamQA2Audit_isRefOnly, 
            T.[value] AS ConfigParamQA2Audit_value, 
            T.valueUseageComments AS ConfigParamQA2Audit_valueUseageComments, 
            T.AuditDT AS ConfigParamQA2Audit_AuditDT, 
            T.AuditType AS ConfigParamQA2Audit_AuditType, 
            T.AuditSUserSName AS ConfigParamQA2Audit_AuditSUserSName, 
            T.ID AS ConfigParamQA2Audit_ID, 
            T.updateDT AS ConfigParamQA2Audit_updateDT, 
            T.updateUser AS ConfigParamQA2Audit_updateUser, 
            True AS _from0
        FROM ConfigMgrReadContext.configParamQA2Audit AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for ConfigMgrReadContext.configParamQA2Audit.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView72()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing configParamQA2Audit
        [Company.DIV.ConfigMgr.Data.Read.ConfigParamQA2Audit](T1.ConfigParamQA2Audit_AuditID, T1.ConfigParamQA2Audit_ConfigID, T1.ConfigParamQA2Audit_effDT, T1.ConfigParamQA2Audit_trmDT, T1.ConfigParamQA2Audit_ParamDefinitionsID, T1.ConfigParamQA2Audit_isRefOnly, T1.ConfigParamQA2Audit_value, T1.ConfigParamQA2Audit_valueUseageComments, T1.ConfigParamQA2Audit_AuditDT, T1.ConfigParamQA2Audit_AuditType, T1.ConfigParamQA2Audit_AuditSUserSName, T1.ConfigParamQA2Audit_ID, T1.ConfigParamQA2Audit_updateDT, T1.ConfigParamQA2Audit_updateUser)
    FROM (
        SELECT 
            T.AuditID AS ConfigParamQA2Audit_AuditID, 
            T.ConfigID AS ConfigParamQA2Audit_ConfigID, 
            T.effDT AS ConfigParamQA2Audit_effDT, 
            T.trmDT AS ConfigParamQA2Audit_trmDT, 
            T.ParamDefinitionsID AS ConfigParamQA2Audit_ParamDefinitionsID, 
            T.isRefOnly AS ConfigParamQA2Audit_isRefOnly, 
            T.[value] AS ConfigParamQA2Audit_value, 
            T.valueUseageComments AS ConfigParamQA2Audit_valueUseageComments, 
            T.AuditDT AS ConfigParamQA2Audit_AuditDT, 
            T.AuditType AS ConfigParamQA2Audit_AuditType, 
            T.AuditSUserSName AS ConfigParamQA2Audit_AuditSUserSName, 
            T.ID AS ConfigParamQA2Audit_ID, 
            T.updateDT AS ConfigParamQA2Audit_updateDT, 
            T.updateUser AS ConfigParamQA2Audit_updateUser, 
            True AS _from0
        FROM CodeFirstDatabase.ConfigParamQA2Audit AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for CodeFirstDatabase.ConfigParamSTG1Audit.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView73()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing ConfigParamSTG1Audit
        [CodeFirstDatabaseSchema.ConfigParamSTG1Audit](T1.ConfigParamSTG1Audit_AuditID, T1.ConfigParamSTG1Audit_ConfigID, T1.ConfigParamSTG1Audit_effDT, T1.ConfigParamSTG1Audit_trmDT, T1.ConfigParamSTG1Audit_ParamDefinitionsID, T1.ConfigParamSTG1Audit_isRefOnly, T1.ConfigParamSTG1Audit_value, T1.ConfigParamSTG1Audit_valueUseageComments, T1.ConfigParamSTG1Audit_AuditDT, T1.ConfigParamSTG1Audit_AuditType, T1.ConfigParamSTG1Audit_AuditSUserSName, T1.ConfigParamSTG1Audit_ID, T1.ConfigParamSTG1Audit_updateDT, T1.ConfigParamSTG1Audit_updateUser)
    FROM (
        SELECT 
            T.AuditID AS ConfigParamSTG1Audit_AuditID, 
            T.ConfigID AS ConfigParamSTG1Audit_ConfigID, 
            T.effDT AS ConfigParamSTG1Audit_effDT, 
            T.trmDT AS ConfigParamSTG1Audit_trmDT, 
            T.ParamDefinitionsID AS ConfigParamSTG1Audit_ParamDefinitionsID, 
            T.isRefOnly AS ConfigParamSTG1Audit_isRefOnly, 
            T.[value] AS ConfigParamSTG1Audit_value, 
            T.valueUseageComments AS ConfigParamSTG1Audit_valueUseageComments, 
            T.AuditDT AS ConfigParamSTG1Audit_AuditDT, 
            T.AuditType AS ConfigParamSTG1Audit_AuditType, 
            T.AuditSUserSName AS ConfigParamSTG1Audit_AuditSUserSName, 
            T.ID AS ConfigParamSTG1Audit_ID, 
            T.updateDT AS ConfigParamSTG1Audit_updateDT, 
            T.updateUser AS ConfigParamSTG1Audit_updateUser, 
            True AS _from0
        FROM ConfigMgrReadContext.configParamSTG1Audit AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for ConfigMgrReadContext.configParamSTG1Audit.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView74()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing configParamSTG1Audit
        [Company.DIV.ConfigMgr.Data.Read.ConfigParamSTG1Audit](T1.ConfigParamSTG1Audit_AuditID, T1.ConfigParamSTG1Audit_ConfigID, T1.ConfigParamSTG1Audit_effDT, T1.ConfigParamSTG1Audit_trmDT, T1.ConfigParamSTG1Audit_ParamDefinitionsID, T1.ConfigParamSTG1Audit_isRefOnly, T1.ConfigParamSTG1Audit_value, T1.ConfigParamSTG1Audit_valueUseageComments, T1.ConfigParamSTG1Audit_AuditDT, T1.ConfigParamSTG1Audit_AuditType, T1.ConfigParamSTG1Audit_AuditSUserSName, T1.ConfigParamSTG1Audit_ID, T1.ConfigParamSTG1Audit_updateDT, T1.ConfigParamSTG1Audit_updateUser)
    FROM (
        SELECT 
            T.AuditID AS ConfigParamSTG1Audit_AuditID, 
            T.ConfigID AS ConfigParamSTG1Audit_ConfigID, 
            T.effDT AS ConfigParamSTG1Audit_effDT, 
            T.trmDT AS ConfigParamSTG1Audit_trmDT, 
            T.ParamDefinitionsID AS ConfigParamSTG1Audit_ParamDefinitionsID, 
            T.isRefOnly AS ConfigParamSTG1Audit_isRefOnly, 
            T.[value] AS ConfigParamSTG1Audit_value, 
            T.valueUseageComments AS ConfigParamSTG1Audit_valueUseageComments, 
            T.AuditDT AS ConfigParamSTG1Audit_AuditDT, 
            T.AuditType AS ConfigParamSTG1Audit_AuditType, 
            T.AuditSUserSName AS ConfigParamSTG1Audit_AuditSUserSName, 
            T.ID AS ConfigParamSTG1Audit_ID, 
            T.updateDT AS ConfigParamSTG1Audit_updateDT, 
            T.updateUser AS ConfigParamSTG1Audit_updateUser, 
            True AS _from0
        FROM CodeFirstDatabase.ConfigParamSTG1Audit AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for CodeFirstDatabase.ConfigParamSTG2Audit.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView75()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing ConfigParamSTG2Audit
        [CodeFirstDatabaseSchema.ConfigParamSTG2Audit](T1.ConfigParamSTG2Audit_AuditID, T1.ConfigParamSTG2Audit_ConfigID, T1.ConfigParamSTG2Audit_effDT, T1.ConfigParamSTG2Audit_trmDT, T1.ConfigParamSTG2Audit_ParamDefinitionsID, T1.ConfigParamSTG2Audit_isRefOnly, T1.ConfigParamSTG2Audit_value, T1.ConfigParamSTG2Audit_valueUseageComments, T1.ConfigParamSTG2Audit_AuditDT, T1.ConfigParamSTG2Audit_AuditType, T1.ConfigParamSTG2Audit_AuditSUserSName, T1.ConfigParamSTG2Audit_ID, T1.ConfigParamSTG2Audit_updateDT, T1.ConfigParamSTG2Audit_updateUser)
    FROM (
        SELECT 
            T.AuditID AS ConfigParamSTG2Audit_AuditID, 
            T.ConfigID AS ConfigParamSTG2Audit_ConfigID, 
            T.effDT AS ConfigParamSTG2Audit_effDT, 
            T.trmDT AS ConfigParamSTG2Audit_trmDT, 
            T.ParamDefinitionsID AS ConfigParamSTG2Audit_ParamDefinitionsID, 
            T.isRefOnly AS ConfigParamSTG2Audit_isRefOnly, 
            T.[value] AS ConfigParamSTG2Audit_value, 
            T.valueUseageComments AS ConfigParamSTG2Audit_valueUseageComments, 
            T.AuditDT AS ConfigParamSTG2Audit_AuditDT, 
            T.AuditType AS ConfigParamSTG2Audit_AuditType, 
            T.AuditSUserSName AS ConfigParamSTG2Audit_AuditSUserSName, 
            T.ID AS ConfigParamSTG2Audit_ID, 
            T.updateDT AS ConfigParamSTG2Audit_updateDT, 
            T.updateUser AS ConfigParamSTG2Audit_updateUser, 
            True AS _from0
        FROM ConfigMgrReadContext.configParamSTG2Audit AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for ConfigMgrReadContext.configParamSTG2Audit.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView76()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing configParamSTG2Audit
        [Company.DIV.ConfigMgr.Data.Read.ConfigParamSTG2Audit](T1.ConfigParamSTG2Audit_AuditID, T1.ConfigParamSTG2Audit_ConfigID, T1.ConfigParamSTG2Audit_effDT, T1.ConfigParamSTG2Audit_trmDT, T1.ConfigParamSTG2Audit_ParamDefinitionsID, T1.ConfigParamSTG2Audit_isRefOnly, T1.ConfigParamSTG2Audit_value, T1.ConfigParamSTG2Audit_valueUseageComments, T1.ConfigParamSTG2Audit_AuditDT, T1.ConfigParamSTG2Audit_AuditType, T1.ConfigParamSTG2Audit_AuditSUserSName, T1.ConfigParamSTG2Audit_ID, T1.ConfigParamSTG2Audit_updateDT, T1.ConfigParamSTG2Audit_updateUser)
    FROM (
        SELECT 
            T.AuditID AS ConfigParamSTG2Audit_AuditID, 
            T.ConfigID AS ConfigParamSTG2Audit_ConfigID, 
            T.effDT AS ConfigParamSTG2Audit_effDT, 
            T.trmDT AS ConfigParamSTG2Audit_trmDT, 
            T.ParamDefinitionsID AS ConfigParamSTG2Audit_ParamDefinitionsID, 
            T.isRefOnly AS ConfigParamSTG2Audit_isRefOnly, 
            T.[value] AS ConfigParamSTG2Audit_value, 
            T.valueUseageComments AS ConfigParamSTG2Audit_valueUseageComments, 
            T.AuditDT AS ConfigParamSTG2Audit_AuditDT, 
            T.AuditType AS ConfigParamSTG2Audit_AuditType, 
            T.AuditSUserSName AS ConfigParamSTG2Audit_AuditSUserSName, 
            T.ID AS ConfigParamSTG2Audit_ID, 
            T.updateDT AS ConfigParamSTG2Audit_updateDT, 
            T.updateUser AS ConfigParamSTG2Audit_updateUser, 
            True AS _from0
        FROM CodeFirstDatabase.ConfigParamSTG2Audit AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for CodeFirstDatabase.ExecutableAudit.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView77()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing ExecutableAudit
        [CodeFirstDatabaseSchema.ExecutableAudit](T1.ExecutableAudit_AuditID, T1.ExecutableAudit_ParamVersionID, T1.ExecutableAudit_AppID, T1.ExecutableAudit_nameWExtension, T1.ExecutableAudit_description, T1.ExecutableAudit_AuditDT, T1.ExecutableAudit_AuditType, T1.ExecutableAudit_AuditSUserSName, T1.ExecutableAudit_ID, T1.ExecutableAudit_updateDT, T1.ExecutableAudit_updateUser)
    FROM (
        SELECT 
            T.AuditID AS ExecutableAudit_AuditID, 
            T.ParamVersionID AS ExecutableAudit_ParamVersionID, 
            T.AppID AS ExecutableAudit_AppID, 
            T.nameWExtension AS ExecutableAudit_nameWExtension, 
            T.description AS ExecutableAudit_description, 
            T.AuditDT AS ExecutableAudit_AuditDT, 
            T.AuditType AS ExecutableAudit_AuditType, 
            T.AuditSUserSName AS ExecutableAudit_AuditSUserSName, 
            T.ID AS ExecutableAudit_ID, 
            T.updateDT AS ExecutableAudit_updateDT, 
            T.updateUser AS ExecutableAudit_updateUser, 
            True AS _from0
        FROM ConfigMgrReadContext.executableAudit AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for ConfigMgrReadContext.executableAudit.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView78()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing executableAudit
        [Company.DIV.ConfigMgr.Data.Read.ExecutableAudit](T1.ExecutableAudit_AuditID, T1.ExecutableAudit_ParamVersionID, T1.ExecutableAudit_AppID, T1.ExecutableAudit_nameWExtension, T1.ExecutableAudit_description, T1.ExecutableAudit_AuditDT, T1.ExecutableAudit_AuditType, T1.ExecutableAudit_AuditSUserSName, T1.ExecutableAudit_ID, T1.ExecutableAudit_updateDT, T1.ExecutableAudit_updateUser)
    FROM (
        SELECT 
            T.AuditID AS ExecutableAudit_AuditID, 
            T.ParamVersionID AS ExecutableAudit_ParamVersionID, 
            T.AppID AS ExecutableAudit_AppID, 
            T.nameWExtension AS ExecutableAudit_nameWExtension, 
            T.description AS ExecutableAudit_description, 
            T.AuditDT AS ExecutableAudit_AuditDT, 
            T.AuditType AS ExecutableAudit_AuditType, 
            T.AuditSUserSName AS ExecutableAudit_AuditSUserSName, 
            T.ID AS ExecutableAudit_ID, 
            T.updateDT AS ExecutableAudit_updateDT, 
            T.updateUser AS ExecutableAudit_updateUser, 
            True AS _from0
        FROM CodeFirstDatabase.ExecutableAudit AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for CodeFirstDatabase.PrimaryFunctionAudit.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView79()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing PrimaryFunctionAudit
        [CodeFirstDatabaseSchema.PrimaryFunctionAudit](T1.PrimaryFunctionAudit_AuditID, T1.PrimaryFunctionAudit_abbr, T1.PrimaryFunctionAudit_description, T1.PrimaryFunctionAudit_AuditDT, T1.PrimaryFunctionAudit_AuditType, T1.PrimaryFunctionAudit_AuditSUserSName, T1.PrimaryFunctionAudit_ID, T1.PrimaryFunctionAudit_updateDT, T1.PrimaryFunctionAudit_updateUser)
    FROM (
        SELECT 
            T.AuditID AS PrimaryFunctionAudit_AuditID, 
            T.abbr AS PrimaryFunctionAudit_abbr, 
            T.description AS PrimaryFunctionAudit_description, 
            T.AuditDT AS PrimaryFunctionAudit_AuditDT, 
            T.AuditType AS PrimaryFunctionAudit_AuditType, 
            T.AuditSUserSName AS PrimaryFunctionAudit_AuditSUserSName, 
            T.ID AS PrimaryFunctionAudit_ID, 
            T.updateDT AS PrimaryFunctionAudit_updateDT, 
            T.updateUser AS PrimaryFunctionAudit_updateUser, 
            True AS _from0
        FROM ConfigMgrReadContext.executableFunctionAudit AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for ConfigMgrReadContext.executableFunctionAudit.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView80()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing executableFunctionAudit
        [Company.DIV.ConfigMgr.Data.Read.PrimaryFunctionAudit](T1.PrimaryFunctionAudit_AuditID, T1.PrimaryFunctionAudit_abbr, T1.PrimaryFunctionAudit_description, T1.PrimaryFunctionAudit_AuditDT, T1.PrimaryFunctionAudit_AuditType, T1.PrimaryFunctionAudit_AuditSUserSName, T1.PrimaryFunctionAudit_ID, T1.PrimaryFunctionAudit_updateDT, T1.PrimaryFunctionAudit_updateUser)
    FROM (
        SELECT 
            T.AuditID AS PrimaryFunctionAudit_AuditID, 
            T.abbr AS PrimaryFunctionAudit_abbr, 
            T.description AS PrimaryFunctionAudit_description, 
            T.AuditDT AS PrimaryFunctionAudit_AuditDT, 
            T.AuditType AS PrimaryFunctionAudit_AuditType, 
            T.AuditSUserSName AS PrimaryFunctionAudit_AuditSUserSName, 
            T.ID AS PrimaryFunctionAudit_ID, 
            T.updateDT AS PrimaryFunctionAudit_updateDT, 
            T.updateUser AS PrimaryFunctionAudit_updateUser, 
            True AS _from0
        FROM CodeFirstDatabase.PrimaryFunctionAudit AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for CodeFirstDatabase.JAppPlanAudit.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView81()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing JAppPlanAudit
        [CodeFirstDatabaseSchema.JAppPlanAudit](T1.JAppPlanAudit_AuditID, T1.JAppPlanAudit_AppID, T1.JAppPlanAudit_PlanID, T1.JAppPlanAudit_AuditDT, T1.JAppPlanAudit_AuditType, T1.JAppPlanAudit_AuditSUserSName, T1.JAppPlanAudit_ID, T1.JAppPlanAudit_updateDT, T1.JAppPlanAudit_updateUser)
    FROM (
        SELECT 
            T.AuditID AS JAppPlanAudit_AuditID, 
            T.AppID AS JAppPlanAudit_AppID, 
            T.PlanID AS JAppPlanAudit_PlanID, 
            T.AuditDT AS JAppPlanAudit_AuditDT, 
            T.AuditType AS JAppPlanAudit_AuditType, 
            T.AuditSUserSName AS JAppPlanAudit_AuditSUserSName, 
            T.ID AS JAppPlanAudit_ID, 
            T.updateDT AS JAppPlanAudit_updateDT, 
            T.updateUser AS JAppPlanAudit_updateUser, 
            True AS _from0
        FROM ConfigMgrReadContext.jAppPlanAudit AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for ConfigMgrReadContext.jAppPlanAudit.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView82()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing jAppPlanAudit
        [Company.DIV.ConfigMgr.Data.Read.JAppPlanAudit](T1.JAppPlanAudit_AuditID, T1.JAppPlanAudit_AppID, T1.JAppPlanAudit_PlanID, T1.JAppPlanAudit_AuditDT, T1.JAppPlanAudit_AuditType, T1.JAppPlanAudit_AuditSUserSName, T1.JAppPlanAudit_ID, T1.JAppPlanAudit_updateDT, T1.JAppPlanAudit_updateUser)
    FROM (
        SELECT 
            T.AuditID AS JAppPlanAudit_AuditID, 
            T.AppID AS JAppPlanAudit_AppID, 
            T.PlanID AS JAppPlanAudit_PlanID, 
            T.AuditDT AS JAppPlanAudit_AuditDT, 
            T.AuditType AS JAppPlanAudit_AuditType, 
            T.AuditSUserSName AS JAppPlanAudit_AuditSUserSName, 
            T.ID AS JAppPlanAudit_ID, 
            T.updateDT AS JAppPlanAudit_updateDT, 
            T.updateUser AS JAppPlanAudit_updateUser, 
            True AS _from0
        FROM CodeFirstDatabase.JAppPlanAudit AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for CodeFirstDatabase.JConfigExecutableAudit.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView83()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing JConfigExecutableAudit
        [CodeFirstDatabaseSchema.JConfigExecutableAudit](T1.JConfigExecutableAudit_AuditID, T1.JConfigExecutableAudit_ConfigID, T1.JConfigExecutableAudit_ExecutableID, T1.JConfigExecutableAudit_AuditDT, T1.JConfigExecutableAudit_AuditType, T1.JConfigExecutableAudit_AuditSUserSName, T1.JConfigExecutableAudit_ID, T1.JConfigExecutableAudit_updateDT, T1.JConfigExecutableAudit_updateUser)
    FROM (
        SELECT 
            T.AuditID AS JConfigExecutableAudit_AuditID, 
            T.ConfigID AS JConfigExecutableAudit_ConfigID, 
            T.ExecutableID AS JConfigExecutableAudit_ExecutableID, 
            T.AuditDT AS JConfigExecutableAudit_AuditDT, 
            T.AuditType AS JConfigExecutableAudit_AuditType, 
            T.AuditSUserSName AS JConfigExecutableAudit_AuditSUserSName, 
            T.ID AS JConfigExecutableAudit_ID, 
            T.updateDT AS JConfigExecutableAudit_updateDT, 
            T.updateUser AS JConfigExecutableAudit_updateUser, 
            True AS _from0
        FROM ConfigMgrReadContext.jConfigExecutableAudit AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for ConfigMgrReadContext.jConfigExecutableAudit.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView84()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing jConfigExecutableAudit
        [Company.DIV.ConfigMgr.Data.Read.JConfigExecutableAudit](T1.JConfigExecutableAudit_AuditID, T1.JConfigExecutableAudit_ConfigID, T1.JConfigExecutableAudit_ExecutableID, T1.JConfigExecutableAudit_AuditDT, T1.JConfigExecutableAudit_AuditType, T1.JConfigExecutableAudit_AuditSUserSName, T1.JConfigExecutableAudit_ID, T1.JConfigExecutableAudit_updateDT, T1.JConfigExecutableAudit_updateUser)
    FROM (
        SELECT 
            T.AuditID AS JConfigExecutableAudit_AuditID, 
            T.ConfigID AS JConfigExecutableAudit_ConfigID, 
            T.ExecutableID AS JConfigExecutableAudit_ExecutableID, 
            T.AuditDT AS JConfigExecutableAudit_AuditDT, 
            T.AuditType AS JConfigExecutableAudit_AuditType, 
            T.AuditSUserSName AS JConfigExecutableAudit_AuditSUserSName, 
            T.ID AS JConfigExecutableAudit_ID, 
            T.updateDT AS JConfigExecutableAudit_updateDT, 
            T.updateUser AS JConfigExecutableAudit_updateUser, 
            True AS _from0
        FROM CodeFirstDatabase.JConfigExecutableAudit AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for CodeFirstDatabase.JConfigJPlanLOBAudit.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView85()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing JConfigJPlanLOBAudit
        [CodeFirstDatabaseSchema.JConfigJPlanLOBAudit](T1.JConfigJPlanLOBAudit_AuditID, T1.JConfigJPlanLOBAudit_ConfigID, T1.JConfigJPlanLOBAudit_JPlanLOBID, T1.JConfigJPlanLOBAudit_AuditDT, T1.JConfigJPlanLOBAudit_AuditType, T1.JConfigJPlanLOBAudit_AuditSUserSName, T1.JConfigJPlanLOBAudit_ID, T1.JConfigJPlanLOBAudit_updateDT, T1.JConfigJPlanLOBAudit_updateUser)
    FROM (
        SELECT 
            T.AuditID AS JConfigJPlanLOBAudit_AuditID, 
            T.ConfigID AS JConfigJPlanLOBAudit_ConfigID, 
            T.JPlanLOBID AS JConfigJPlanLOBAudit_JPlanLOBID, 
            T.AuditDT AS JConfigJPlanLOBAudit_AuditDT, 
            T.AuditType AS JConfigJPlanLOBAudit_AuditType, 
            T.AuditSUserSName AS JConfigJPlanLOBAudit_AuditSUserSName, 
            T.ID AS JConfigJPlanLOBAudit_ID, 
            T.updateDT AS JConfigJPlanLOBAudit_updateDT, 
            T.updateUser AS JConfigJPlanLOBAudit_updateUser, 
            True AS _from0
        FROM ConfigMgrReadContext.jConfigJPlanLOBAudit AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for ConfigMgrReadContext.jConfigJPlanLOBAudit.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView86()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing jConfigJPlanLOBAudit
        [Company.DIV.ConfigMgr.Data.Read.JConfigJPlanLOBAudit](T1.JConfigJPlanLOBAudit_AuditID, T1.JConfigJPlanLOBAudit_ConfigID, T1.JConfigJPlanLOBAudit_JPlanLOBID, T1.JConfigJPlanLOBAudit_AuditDT, T1.JConfigJPlanLOBAudit_AuditType, T1.JConfigJPlanLOBAudit_AuditSUserSName, T1.JConfigJPlanLOBAudit_ID, T1.JConfigJPlanLOBAudit_updateDT, T1.JConfigJPlanLOBAudit_updateUser)
    FROM (
        SELECT 
            T.AuditID AS JConfigJPlanLOBAudit_AuditID, 
            T.ConfigID AS JConfigJPlanLOBAudit_ConfigID, 
            T.JPlanLOBID AS JConfigJPlanLOBAudit_JPlanLOBID, 
            T.AuditDT AS JConfigJPlanLOBAudit_AuditDT, 
            T.AuditType AS JConfigJPlanLOBAudit_AuditType, 
            T.AuditSUserSName AS JConfigJPlanLOBAudit_AuditSUserSName, 
            T.ID AS JConfigJPlanLOBAudit_ID, 
            T.updateDT AS JConfigJPlanLOBAudit_updateDT, 
            T.updateUser AS JConfigJPlanLOBAudit_updateUser, 
            True AS _from0
        FROM CodeFirstDatabase.JConfigJPlanLOBAudit AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for CodeFirstDatabase.JConfigPlanAudit.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView87()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing JConfigPlanAudit
        [CodeFirstDatabaseSchema.JConfigPlanAudit](T1.JConfigPlanAudit_AuditID, T1.JConfigPlanAudit_ConfigID, T1.JConfigPlanAudit_PlanID, T1.JConfigPlanAudit_AuditDT, T1.JConfigPlanAudit_AuditType, T1.JConfigPlanAudit_AuditSUserSName, T1.JConfigPlanAudit_ID, T1.JConfigPlanAudit_updateDT, T1.JConfigPlanAudit_updateUser)
    FROM (
        SELECT 
            T.AuditID AS JConfigPlanAudit_AuditID, 
            T.ConfigID AS JConfigPlanAudit_ConfigID, 
            T.PlanID AS JConfigPlanAudit_PlanID, 
            T.AuditDT AS JConfigPlanAudit_AuditDT, 
            T.AuditType AS JConfigPlanAudit_AuditType, 
            T.AuditSUserSName AS JConfigPlanAudit_AuditSUserSName, 
            T.ID AS JConfigPlanAudit_ID, 
            T.updateDT AS JConfigPlanAudit_updateDT, 
            T.updateUser AS JConfigPlanAudit_updateUser, 
            True AS _from0
        FROM ConfigMgrReadContext.jConfigPlanAudit AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for ConfigMgrReadContext.jConfigPlanAudit.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView88()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing jConfigPlanAudit
        [Company.DIV.ConfigMgr.Data.Read.JConfigPlanAudit](T1.JConfigPlanAudit_AuditID, T1.JConfigPlanAudit_ConfigID, T1.JConfigPlanAudit_PlanID, T1.JConfigPlanAudit_AuditDT, T1.JConfigPlanAudit_AuditType, T1.JConfigPlanAudit_AuditSUserSName, T1.JConfigPlanAudit_ID, T1.JConfigPlanAudit_updateDT, T1.JConfigPlanAudit_updateUser)
    FROM (
        SELECT 
            T.AuditID AS JConfigPlanAudit_AuditID, 
            T.ConfigID AS JConfigPlanAudit_ConfigID, 
            T.PlanID AS JConfigPlanAudit_PlanID, 
            T.AuditDT AS JConfigPlanAudit_AuditDT, 
            T.AuditType AS JConfigPlanAudit_AuditType, 
            T.AuditSUserSName AS JConfigPlanAudit_AuditSUserSName, 
            T.ID AS JConfigPlanAudit_ID, 
            T.updateDT AS JConfigPlanAudit_updateDT, 
            T.updateUser AS JConfigPlanAudit_updateUser, 
            True AS _from0
        FROM CodeFirstDatabase.JConfigPlanAudit AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for CodeFirstDatabase.JExecutablePathServerAudit.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView89()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing JExecutablePathServerAudit
        [CodeFirstDatabaseSchema.JExecutablePathServerAudit](T1.JExecutablePathServerAudit_AuditID, T1.JExecutablePathServerAudit_ExecutableID, T1.JExecutablePathServerAudit_PathServerID, T1.JExecutablePathServerAudit_AuditDT, T1.JExecutablePathServerAudit_AuditType, T1.JExecutablePathServerAudit_AuditSUserSName, T1.JExecutablePathServerAudit_ID, T1.JExecutablePathServerAudit_updateDT, T1.JExecutablePathServerAudit_updateUser)
    FROM (
        SELECT 
            T.AuditID AS JExecutablePathServerAudit_AuditID, 
            T.ExecutableID AS JExecutablePathServerAudit_ExecutableID, 
            T.PathServerID AS JExecutablePathServerAudit_PathServerID, 
            T.AuditDT AS JExecutablePathServerAudit_AuditDT, 
            T.AuditType AS JExecutablePathServerAudit_AuditType, 
            T.AuditSUserSName AS JExecutablePathServerAudit_AuditSUserSName, 
            T.ID AS JExecutablePathServerAudit_ID, 
            T.updateDT AS JExecutablePathServerAudit_updateDT, 
            T.updateUser AS JExecutablePathServerAudit_updateUser, 
            True AS _from0
        FROM ConfigMgrReadContext.jExecutablePathServerAudit AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for ConfigMgrReadContext.jExecutablePathServerAudit.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView90()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing jExecutablePathServerAudit
        [Company.DIV.ConfigMgr.Data.Read.JExecutablePathServerAudit](T1.JExecutablePathServerAudit_AuditID, T1.JExecutablePathServerAudit_ExecutableID, T1.JExecutablePathServerAudit_PathServerID, T1.JExecutablePathServerAudit_AuditDT, T1.JExecutablePathServerAudit_AuditType, T1.JExecutablePathServerAudit_AuditSUserSName, T1.JExecutablePathServerAudit_ID, T1.JExecutablePathServerAudit_updateDT, T1.JExecutablePathServerAudit_updateUser)
    FROM (
        SELECT 
            T.AuditID AS JExecutablePathServerAudit_AuditID, 
            T.ExecutableID AS JExecutablePathServerAudit_ExecutableID, 
            T.PathServerID AS JExecutablePathServerAudit_PathServerID, 
            T.AuditDT AS JExecutablePathServerAudit_AuditDT, 
            T.AuditType AS JExecutablePathServerAudit_AuditType, 
            T.AuditSUserSName AS JExecutablePathServerAudit_AuditSUserSName, 
            T.ID AS JExecutablePathServerAudit_ID, 
            T.updateDT AS JExecutablePathServerAudit_updateDT, 
            T.updateUser AS JExecutablePathServerAudit_updateUser, 
            True AS _from0
        FROM CodeFirstDatabase.JExecutablePathServerAudit AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for CodeFirstDatabase.JExecutablePrimaryFunctionAudit.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView91()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing JExecutablePrimaryFunctionAudit
        [CodeFirstDatabaseSchema.JExecutablePrimaryFunctionAudit](T1.JExecutablePrimaryFunctionAudit_AuditID, T1.JExecutablePrimaryFunctionAudit_ExecutableID, T1.JExecutablePrimaryFunctionAudit_PrimaryFunctionID, T1.JExecutablePrimaryFunctionAudit_AuditDT, T1.JExecutablePrimaryFunctionAudit_AuditType, T1.JExecutablePrimaryFunctionAudit_AuditSUserSName, T1.JExecutablePrimaryFunctionAudit_ID, T1.JExecutablePrimaryFunctionAudit_updateDT, T1.JExecutablePrimaryFunctionAudit_updateUser)
    FROM (
        SELECT 
            T.AuditID AS JExecutablePrimaryFunctionAudit_AuditID, 
            T.ExecutableID AS JExecutablePrimaryFunctionAudit_ExecutableID, 
            T.PrimaryFunctionID AS JExecutablePrimaryFunctionAudit_PrimaryFunctionID, 
            T.AuditDT AS JExecutablePrimaryFunctionAudit_AuditDT, 
            T.AuditType AS JExecutablePrimaryFunctionAudit_AuditType, 
            T.AuditSUserSName AS JExecutablePrimaryFunctionAudit_AuditSUserSName, 
            T.ID AS JExecutablePrimaryFunctionAudit_ID, 
            T.updateDT AS JExecutablePrimaryFunctionAudit_updateDT, 
            T.updateUser AS JExecutablePrimaryFunctionAudit_updateUser, 
            True AS _from0
        FROM ConfigMgrReadContext.jExecutablePrimaryFunctionAudit AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for ConfigMgrReadContext.jExecutablePrimaryFunctionAudit.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView92()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing jExecutablePrimaryFunctionAudit
        [Company.DIV.ConfigMgr.Data.Read.JExecutablePrimaryFunctionAudit](T1.JExecutablePrimaryFunctionAudit_AuditID, T1.JExecutablePrimaryFunctionAudit_ExecutableID, T1.JExecutablePrimaryFunctionAudit_PrimaryFunctionID, T1.JExecutablePrimaryFunctionAudit_AuditDT, T1.JExecutablePrimaryFunctionAudit_AuditType, T1.JExecutablePrimaryFunctionAudit_AuditSUserSName, T1.JExecutablePrimaryFunctionAudit_ID, T1.JExecutablePrimaryFunctionAudit_updateDT, T1.JExecutablePrimaryFunctionAudit_updateUser)
    FROM (
        SELECT 
            T.AuditID AS JExecutablePrimaryFunctionAudit_AuditID, 
            T.ExecutableID AS JExecutablePrimaryFunctionAudit_ExecutableID, 
            T.PrimaryFunctionID AS JExecutablePrimaryFunctionAudit_PrimaryFunctionID, 
            T.AuditDT AS JExecutablePrimaryFunctionAudit_AuditDT, 
            T.AuditType AS JExecutablePrimaryFunctionAudit_AuditType, 
            T.AuditSUserSName AS JExecutablePrimaryFunctionAudit_AuditSUserSName, 
            T.ID AS JExecutablePrimaryFunctionAudit_ID, 
            T.updateDT AS JExecutablePrimaryFunctionAudit_updateDT, 
            T.updateUser AS JExecutablePrimaryFunctionAudit_updateUser, 
            True AS _from0
        FROM CodeFirstDatabase.JExecutablePrimaryFunctionAudit AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for CodeFirstDatabase.JPathServerPathShareAudit.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView93()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing JPathServerPathShareAudit
        [CodeFirstDatabaseSchema.JPathServerPathShareAudit](T1.JPathServerPathShareAudit_AuditID, T1.JPathServerPathShareAudit_PathServerID, T1.JPathServerPathShareAudit_PathShareID, T1.JPathServerPathShareAudit_AuditDT, T1.JPathServerPathShareAudit_AuditType, T1.JPathServerPathShareAudit_AuditSUserSName, T1.JPathServerPathShareAudit_ID, T1.JPathServerPathShareAudit_updateDT, T1.JPathServerPathShareAudit_updateUser)
    FROM (
        SELECT 
            T.AuditID AS JPathServerPathShareAudit_AuditID, 
            T.PathServerID AS JPathServerPathShareAudit_PathServerID, 
            T.PathShareID AS JPathServerPathShareAudit_PathShareID, 
            T.AuditDT AS JPathServerPathShareAudit_AuditDT, 
            T.AuditType AS JPathServerPathShareAudit_AuditType, 
            T.AuditSUserSName AS JPathServerPathShareAudit_AuditSUserSName, 
            T.ID AS JPathServerPathShareAudit_ID, 
            T.updateDT AS JPathServerPathShareAudit_updateDT, 
            T.updateUser AS JPathServerPathShareAudit_updateUser, 
            True AS _from0
        FROM ConfigMgrReadContext.jPathServerPathShareAudit AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for ConfigMgrReadContext.jPathServerPathShareAudit.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView94()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing jPathServerPathShareAudit
        [Company.DIV.ConfigMgr.Data.Read.JPathServerPathShareAudit](T1.JPathServerPathShareAudit_AuditID, T1.JPathServerPathShareAudit_PathServerID, T1.JPathServerPathShareAudit_PathShareID, T1.JPathServerPathShareAudit_AuditDT, T1.JPathServerPathShareAudit_AuditType, T1.JPathServerPathShareAudit_AuditSUserSName, T1.JPathServerPathShareAudit_ID, T1.JPathServerPathShareAudit_updateDT, T1.JPathServerPathShareAudit_updateUser)
    FROM (
        SELECT 
            T.AuditID AS JPathServerPathShareAudit_AuditID, 
            T.PathServerID AS JPathServerPathShareAudit_PathServerID, 
            T.PathShareID AS JPathServerPathShareAudit_PathShareID, 
            T.AuditDT AS JPathServerPathShareAudit_AuditDT, 
            T.AuditType AS JPathServerPathShareAudit_AuditType, 
            T.AuditSUserSName AS JPathServerPathShareAudit_AuditSUserSName, 
            T.ID AS JPathServerPathShareAudit_ID, 
            T.updateDT AS JPathServerPathShareAudit_updateDT, 
            T.updateUser AS JPathServerPathShareAudit_updateUser, 
            True AS _from0
        FROM CodeFirstDatabase.JPathServerPathShareAudit AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for CodeFirstDatabase.JPlanLOBAudit.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView95()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing JPlanLOBAudit
        [CodeFirstDatabaseSchema.JPlanLOBAudit](T1.JPlanLOBAudit_AuditID, T1.JPlanLOBAudit_planID, T1.JPlanLOBAudit_LineOfBusinessID, T1.JPlanLOBAudit_AuditDT, T1.JPlanLOBAudit_AuditType, T1.JPlanLOBAudit_AuditSUserSName, T1.JPlanLOBAudit_ID, T1.JPlanLOBAudit_updateDT, T1.JPlanLOBAudit_updateUser)
    FROM (
        SELECT 
            T.AuditID AS JPlanLOBAudit_AuditID, 
            T.planID AS JPlanLOBAudit_planID, 
            T.LineOfBusinessID AS JPlanLOBAudit_LineOfBusinessID, 
            T.AuditDT AS JPlanLOBAudit_AuditDT, 
            T.AuditType AS JPlanLOBAudit_AuditType, 
            T.AuditSUserSName AS JPlanLOBAudit_AuditSUserSName, 
            T.ID AS JPlanLOBAudit_ID, 
            T.updateDT AS JPlanLOBAudit_updateDT, 
            T.updateUser AS JPlanLOBAudit_updateUser, 
            True AS _from0
        FROM ConfigMgrReadContext.jPlanLOBAudit AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for ConfigMgrReadContext.jPlanLOBAudit.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView96()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing jPlanLOBAudit
        [Company.DIV.ConfigMgr.Data.Read.JPlanLOBAudit](T1.JPlanLOBAudit_AuditID, T1.JPlanLOBAudit_planID, T1.JPlanLOBAudit_LineOfBusinessID, T1.JPlanLOBAudit_AuditDT, T1.JPlanLOBAudit_AuditType, T1.JPlanLOBAudit_AuditSUserSName, T1.JPlanLOBAudit_ID, T1.JPlanLOBAudit_updateDT, T1.JPlanLOBAudit_updateUser)
    FROM (
        SELECT 
            T.AuditID AS JPlanLOBAudit_AuditID, 
            T.planID AS JPlanLOBAudit_planID, 
            T.LineOfBusinessID AS JPlanLOBAudit_LineOfBusinessID, 
            T.AuditDT AS JPlanLOBAudit_AuditDT, 
            T.AuditType AS JPlanLOBAudit_AuditType, 
            T.AuditSUserSName AS JPlanLOBAudit_AuditSUserSName, 
            T.ID AS JPlanLOBAudit_ID, 
            T.updateDT AS JPlanLOBAudit_updateDT, 
            T.updateUser AS JPlanLOBAudit_updateUser, 
            True AS _from0
        FROM CodeFirstDatabase.JPlanLOBAudit AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for CodeFirstDatabase.LineOfBusinessAudit.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView97()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing LineOfBusinessAudit
        [CodeFirstDatabaseSchema.LineOfBusinessAudit](T1.LineOfBusinessAudit_AuditID, T1.LineOfBusinessAudit_abbr, T1.LineOfBusinessAudit_descr, T1.LineOfBusinessAudit_AuditDT, T1.LineOfBusinessAudit_AuditType, T1.LineOfBusinessAudit_AuditSUserSName, T1.LineOfBusinessAudit_ID, T1.LineOfBusinessAudit_updateDT, T1.LineOfBusinessAudit_updateUser)
    FROM (
        SELECT 
            T.AuditID AS LineOfBusinessAudit_AuditID, 
            T.abbr AS LineOfBusinessAudit_abbr, 
            T.descr AS LineOfBusinessAudit_descr, 
            T.AuditDT AS LineOfBusinessAudit_AuditDT, 
            T.AuditType AS LineOfBusinessAudit_AuditType, 
            T.AuditSUserSName AS LineOfBusinessAudit_AuditSUserSName, 
            T.ID AS LineOfBusinessAudit_ID, 
            T.updateDT AS LineOfBusinessAudit_updateDT, 
            T.updateUser AS LineOfBusinessAudit_updateUser, 
            True AS _from0
        FROM ConfigMgrReadContext.lineOfBusinessAudit AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for ConfigMgrReadContext.lineOfBusinessAudit.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView98()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing lineOfBusinessAudit
        [Company.DIV.ConfigMgr.Data.Read.LineOfBusinessAudit](T1.LineOfBusinessAudit_AuditID, T1.LineOfBusinessAudit_abbr, T1.LineOfBusinessAudit_descr, T1.LineOfBusinessAudit_AuditDT, T1.LineOfBusinessAudit_AuditType, T1.LineOfBusinessAudit_AuditSUserSName, T1.LineOfBusinessAudit_ID, T1.LineOfBusinessAudit_updateDT, T1.LineOfBusinessAudit_updateUser)
    FROM (
        SELECT 
            T.AuditID AS LineOfBusinessAudit_AuditID, 
            T.abbr AS LineOfBusinessAudit_abbr, 
            T.descr AS LineOfBusinessAudit_descr, 
            T.AuditDT AS LineOfBusinessAudit_AuditDT, 
            T.AuditType AS LineOfBusinessAudit_AuditType, 
            T.AuditSUserSName AS LineOfBusinessAudit_AuditSUserSName, 
            T.ID AS LineOfBusinessAudit_ID, 
            T.updateDT AS LineOfBusinessAudit_updateDT, 
            T.updateUser AS LineOfBusinessAudit_updateUser, 
            True AS _from0
        FROM CodeFirstDatabase.LineOfBusinessAudit AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for CodeFirstDatabase.ParamDefinitionAudit.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView99()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing ParamDefinitionAudit
        [CodeFirstDatabaseSchema.ParamDefinitionAudit](T1.ParamDefinitionAudit_AuditID, T1.ParamDefinitionAudit_ParamVersionID, T1.ParamDefinitionAudit_ParamSequence, T1.ParamDefinitionAudit_ParamTypeID, T1.ParamDefinitionAudit_variableName, T1.ParamDefinitionAudit_intendedUse, T1.ParamDefinitionAudit_AuditDT, T1.ParamDefinitionAudit_AuditType, T1.ParamDefinitionAudit_AuditSUserSName, T1.ParamDefinitionAudit_ID, T1.ParamDefinitionAudit_updateDT, T1.ParamDefinitionAudit_updateUser)
    FROM (
        SELECT 
            T.AuditID AS ParamDefinitionAudit_AuditID, 
            T.ParamVersionID AS ParamDefinitionAudit_ParamVersionID, 
            T.ParamSequence AS ParamDefinitionAudit_ParamSequence, 
            T.ParamTypeID AS ParamDefinitionAudit_ParamTypeID, 
            T.variableName AS ParamDefinitionAudit_variableName, 
            T.intendedUse AS ParamDefinitionAudit_intendedUse, 
            T.AuditDT AS ParamDefinitionAudit_AuditDT, 
            T.AuditType AS ParamDefinitionAudit_AuditType, 
            T.AuditSUserSName AS ParamDefinitionAudit_AuditSUserSName, 
            T.ID AS ParamDefinitionAudit_ID, 
            T.updateDT AS ParamDefinitionAudit_updateDT, 
            T.updateUser AS ParamDefinitionAudit_updateUser, 
            True AS _from0
        FROM ConfigMgrReadContext.paramDefinitionAudit AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for ConfigMgrReadContext.paramDefinitionAudit.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView100()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing paramDefinitionAudit
        [Company.DIV.ConfigMgr.Data.Read.ParamDefinitionAudit](T1.ParamDefinitionAudit_AuditID, T1.ParamDefinitionAudit_ParamVersionID, T1.ParamDefinitionAudit_ParamSequence, T1.ParamDefinitionAudit_ParamTypeID, T1.ParamDefinitionAudit_variableName, T1.ParamDefinitionAudit_intendedUse, T1.ParamDefinitionAudit_AuditDT, T1.ParamDefinitionAudit_AuditType, T1.ParamDefinitionAudit_AuditSUserSName, T1.ParamDefinitionAudit_ID, T1.ParamDefinitionAudit_updateDT, T1.ParamDefinitionAudit_updateUser)
    FROM (
        SELECT 
            T.AuditID AS ParamDefinitionAudit_AuditID, 
            T.ParamVersionID AS ParamDefinitionAudit_ParamVersionID, 
            T.ParamSequence AS ParamDefinitionAudit_ParamSequence, 
            T.ParamTypeID AS ParamDefinitionAudit_ParamTypeID, 
            T.variableName AS ParamDefinitionAudit_variableName, 
            T.intendedUse AS ParamDefinitionAudit_intendedUse, 
            T.AuditDT AS ParamDefinitionAudit_AuditDT, 
            T.AuditType AS ParamDefinitionAudit_AuditType, 
            T.AuditSUserSName AS ParamDefinitionAudit_AuditSUserSName, 
            T.ID AS ParamDefinitionAudit_ID, 
            T.updateDT AS ParamDefinitionAudit_updateDT, 
            T.updateUser AS ParamDefinitionAudit_updateUser, 
            True AS _from0
        FROM CodeFirstDatabase.ParamDefinitionAudit AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for CodeFirstDatabase.ParamTypeAudit.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView101()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing ParamTypeAudit
        [CodeFirstDatabaseSchema.ParamTypeAudit](T1.ParamTypeAudit_AuditID, T1.ParamTypeAudit_type, T1.ParamTypeAudit_AuditDT, T1.ParamTypeAudit_AuditType, T1.ParamTypeAudit_AuditSUserSName, T1.ParamTypeAudit_ID, T1.ParamTypeAudit_updateDT, T1.ParamTypeAudit_updateUser)
    FROM (
        SELECT 
            T.AuditID AS ParamTypeAudit_AuditID, 
            T.type AS ParamTypeAudit_type, 
            T.AuditDT AS ParamTypeAudit_AuditDT, 
            T.AuditType AS ParamTypeAudit_AuditType, 
            T.AuditSUserSName AS ParamTypeAudit_AuditSUserSName, 
            T.ID AS ParamTypeAudit_ID, 
            T.updateDT AS ParamTypeAudit_updateDT, 
            T.updateUser AS ParamTypeAudit_updateUser, 
            True AS _from0
        FROM ConfigMgrReadContext.paramTypeAudit AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for ConfigMgrReadContext.paramTypeAudit.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView102()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing paramTypeAudit
        [Company.DIV.ConfigMgr.Data.Read.ParamTypeAudit](T1.ParamTypeAudit_AuditID, T1.ParamTypeAudit_type, T1.ParamTypeAudit_AuditDT, T1.ParamTypeAudit_AuditType, T1.ParamTypeAudit_AuditSUserSName, T1.ParamTypeAudit_ID, T1.ParamTypeAudit_updateDT, T1.ParamTypeAudit_updateUser)
    FROM (
        SELECT 
            T.AuditID AS ParamTypeAudit_AuditID, 
            T.type AS ParamTypeAudit_type, 
            T.AuditDT AS ParamTypeAudit_AuditDT, 
            T.AuditType AS ParamTypeAudit_AuditType, 
            T.AuditSUserSName AS ParamTypeAudit_AuditSUserSName, 
            T.ID AS ParamTypeAudit_ID, 
            T.updateDT AS ParamTypeAudit_updateDT, 
            T.updateUser AS ParamTypeAudit_updateUser, 
            True AS _from0
        FROM CodeFirstDatabase.ParamTypeAudit AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for CodeFirstDatabase.ParamVersionAudit.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView103()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing ParamVersionAudit
        [CodeFirstDatabaseSchema.ParamVersionAudit](T1.ParamVersionAudit_AuditID, T1.ParamVersionAudit_version, T1.ParamVersionAudit_description, T1.ParamVersionAudit_AuditDT, T1.ParamVersionAudit_AuditType, T1.ParamVersionAudit_AuditSUserSName, T1.ParamVersionAudit_ID, T1.ParamVersionAudit_updateDT, T1.ParamVersionAudit_updateUser)
    FROM (
        SELECT 
            T.AuditID AS ParamVersionAudit_AuditID, 
            T.version AS ParamVersionAudit_version, 
            T.description AS ParamVersionAudit_description, 
            T.AuditDT AS ParamVersionAudit_AuditDT, 
            T.AuditType AS ParamVersionAudit_AuditType, 
            T.AuditSUserSName AS ParamVersionAudit_AuditSUserSName, 
            T.ID AS ParamVersionAudit_ID, 
            T.updateDT AS ParamVersionAudit_updateDT, 
            T.updateUser AS ParamVersionAudit_updateUser, 
            True AS _from0
        FROM ConfigMgrReadContext.paramVersionAudit AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for ConfigMgrReadContext.paramVersionAudit.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView104()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing paramVersionAudit
        [Company.DIV.ConfigMgr.Data.Read.ParamVersionAudit](T1.ParamVersionAudit_AuditID, T1.ParamVersionAudit_version, T1.ParamVersionAudit_description, T1.ParamVersionAudit_AuditDT, T1.ParamVersionAudit_AuditType, T1.ParamVersionAudit_AuditSUserSName, T1.ParamVersionAudit_ID, T1.ParamVersionAudit_updateDT, T1.ParamVersionAudit_updateUser)
    FROM (
        SELECT 
            T.AuditID AS ParamVersionAudit_AuditID, 
            T.version AS ParamVersionAudit_version, 
            T.description AS ParamVersionAudit_description, 
            T.AuditDT AS ParamVersionAudit_AuditDT, 
            T.AuditType AS ParamVersionAudit_AuditType, 
            T.AuditSUserSName AS ParamVersionAudit_AuditSUserSName, 
            T.ID AS ParamVersionAudit_ID, 
            T.updateDT AS ParamVersionAudit_updateDT, 
            T.updateUser AS ParamVersionAudit_updateUser, 
            True AS _from0
        FROM CodeFirstDatabase.ParamVersionAudit AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for CodeFirstDatabase.PathServerAudit.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView105()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing PathServerAudit
        [CodeFirstDatabaseSchema.PathServerAudit](T1.PathServerAudit_AuditID, T1.PathServerAudit_server, T1.PathServerAudit_path, T1.PathServerAudit_AuditDT, T1.PathServerAudit_AuditType, T1.PathServerAudit_AuditSUserSName, T1.PathServerAudit_ID, T1.PathServerAudit_updateDT, T1.PathServerAudit_updateUser)
    FROM (
        SELECT 
            T.AuditID AS PathServerAudit_AuditID, 
            T.server AS PathServerAudit_server, 
            T.path AS PathServerAudit_path, 
            T.AuditDT AS PathServerAudit_AuditDT, 
            T.AuditType AS PathServerAudit_AuditType, 
            T.AuditSUserSName AS PathServerAudit_AuditSUserSName, 
            T.ID AS PathServerAudit_ID, 
            T.updateDT AS PathServerAudit_updateDT, 
            T.updateUser AS PathServerAudit_updateUser, 
            True AS _from0
        FROM ConfigMgrReadContext.pathServerAudit AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for ConfigMgrReadContext.pathServerAudit.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView106()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing pathServerAudit
        [Company.DIV.ConfigMgr.Data.Read.PathServerAudit](T1.PathServerAudit_AuditID, T1.PathServerAudit_server, T1.PathServerAudit_path, T1.PathServerAudit_AuditDT, T1.PathServerAudit_AuditType, T1.PathServerAudit_AuditSUserSName, T1.PathServerAudit_ID, T1.PathServerAudit_updateDT, T1.PathServerAudit_updateUser)
    FROM (
        SELECT 
            T.AuditID AS PathServerAudit_AuditID, 
            T.server AS PathServerAudit_server, 
            T.path AS PathServerAudit_path, 
            T.AuditDT AS PathServerAudit_AuditDT, 
            T.AuditType AS PathServerAudit_AuditType, 
            T.AuditSUserSName AS PathServerAudit_AuditSUserSName, 
            T.ID AS PathServerAudit_ID, 
            T.updateDT AS PathServerAudit_updateDT, 
            T.updateUser AS PathServerAudit_updateUser, 
            True AS _from0
        FROM CodeFirstDatabase.PathServerAudit AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for CodeFirstDatabase.PathShareAudit.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView107()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing PathShareAudit
        [CodeFirstDatabaseSchema.PathShareAudit](T1.PathShareAudit_AuditID, T1.PathShareAudit_share, T1.PathShareAudit_path, T1.PathShareAudit_AuditDT, T1.PathShareAudit_AuditType, T1.PathShareAudit_AuditSUserSName, T1.PathShareAudit_ID, T1.PathShareAudit_updateDT, T1.PathShareAudit_updateUser)
    FROM (
        SELECT 
            T.AuditID AS PathShareAudit_AuditID, 
            T.share AS PathShareAudit_share, 
            T.path AS PathShareAudit_path, 
            T.AuditDT AS PathShareAudit_AuditDT, 
            T.AuditType AS PathShareAudit_AuditType, 
            T.AuditSUserSName AS PathShareAudit_AuditSUserSName, 
            T.ID AS PathShareAudit_ID, 
            T.updateDT AS PathShareAudit_updateDT, 
            T.updateUser AS PathShareAudit_updateUser, 
            True AS _from0
        FROM ConfigMgrReadContext.pathShareAudit AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for ConfigMgrReadContext.pathShareAudit.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView108()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing pathShareAudit
        [Company.DIV.ConfigMgr.Data.Read.PathShareAudit](T1.PathShareAudit_AuditID, T1.PathShareAudit_share, T1.PathShareAudit_path, T1.PathShareAudit_AuditDT, T1.PathShareAudit_AuditType, T1.PathShareAudit_AuditSUserSName, T1.PathShareAudit_ID, T1.PathShareAudit_updateDT, T1.PathShareAudit_updateUser)
    FROM (
        SELECT 
            T.AuditID AS PathShareAudit_AuditID, 
            T.share AS PathShareAudit_share, 
            T.path AS PathShareAudit_path, 
            T.AuditDT AS PathShareAudit_AuditDT, 
            T.AuditType AS PathShareAudit_AuditType, 
            T.AuditSUserSName AS PathShareAudit_AuditSUserSName, 
            T.ID AS PathShareAudit_ID, 
            T.updateDT AS PathShareAudit_updateDT, 
            T.updateUser AS PathShareAudit_updateUser, 
            True AS _from0
        FROM CodeFirstDatabase.PathShareAudit AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for CodeFirstDatabase.PlanAudit.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView109()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing PlanAudit
        [CodeFirstDatabaseSchema.PlanAudit](T1.PlanAudit_AuditID, T1.PlanAudit_abbr, T1.PlanAudit_descr, T1.PlanAudit_AuditDT, T1.PlanAudit_AuditType, T1.PlanAudit_AuditSUserSName, T1.PlanAudit_ID, T1.PlanAudit_updateDT, T1.PlanAudit_updateUser)
    FROM (
        SELECT 
            T.AuditID AS PlanAudit_AuditID, 
            T.abbr AS PlanAudit_abbr, 
            T.descr AS PlanAudit_descr, 
            T.AuditDT AS PlanAudit_AuditDT, 
            T.AuditType AS PlanAudit_AuditType, 
            T.AuditSUserSName AS PlanAudit_AuditSUserSName, 
            T.ID AS PlanAudit_ID, 
            T.updateDT AS PlanAudit_updateDT, 
            T.updateUser AS PlanAudit_updateUser, 
            True AS _from0
        FROM ConfigMgrReadContext.planAudit AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for ConfigMgrReadContext.planAudit.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView110()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing planAudit
        [Company.DIV.ConfigMgr.Data.Read.PlanAudit](T1.PlanAudit_AuditID, T1.PlanAudit_abbr, T1.PlanAudit_descr, T1.PlanAudit_AuditDT, T1.PlanAudit_AuditType, T1.PlanAudit_AuditSUserSName, T1.PlanAudit_ID, T1.PlanAudit_updateDT, T1.PlanAudit_updateUser)
    FROM (
        SELECT 
            T.AuditID AS PlanAudit_AuditID, 
            T.abbr AS PlanAudit_abbr, 
            T.descr AS PlanAudit_descr, 
            T.AuditDT AS PlanAudit_AuditDT, 
            T.AuditType AS PlanAudit_AuditType, 
            T.AuditSUserSName AS PlanAudit_AuditSUserSName, 
            T.ID AS PlanAudit_ID, 
            T.updateDT AS PlanAudit_updateDT, 
            T.updateUser AS PlanAudit_updateUser, 
            True AS _from0
        FROM CodeFirstDatabase.PlanAudit AS T
    ) AS T1");
        }
    }
}
