//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System.Data.Entity.Infrastructure.MappingViews;

[assembly: DbMappingViewCacheTypeAttribute(
    typeof(Company.DIV.ConfigMgr.Data.ConfigMgrContext),
    typeof(Edm_EntityMappingGeneratedViews.ViewsForBaseEntitySetsfd9e2fb4b904c4b1265f7290d40761c419d85545671f29524725e742f1c5e1e0))]

namespace Edm_EntityMappingGeneratedViews
{
    using System;
    using System.CodeDom.Compiler;
    using System.Data.Entity.Core.Metadata.Edm;

    /// <summary>
    /// Implements a mapping view cache.
    /// </summary>
    [GeneratedCode("Entity Framework Power Tools", "0.9.0.0")]
    internal sealed class ViewsForBaseEntitySetsfd9e2fb4b904c4b1265f7290d40761c419d85545671f29524725e742f1c5e1e0 : DbMappingViewCache
    {
        /// <summary>
        /// Gets a hash value computed over the mapping closure.
        /// </summary>
        public override string MappingHashValue
        {
            get { return "fd9e2fb4b904c4b1265f7290d40761c419d85545671f29524725e742f1c5e1e0"; }
        }

        /// <summary>
        /// Gets a view corresponding to the specified extent.
        /// </summary>
        /// <param name="extent">The extent.</param>
        /// <returns>The mapping view, or null if the extent is not associated with a mapping view.</returns>
        public override DbMappingView GetView(EntitySetBase extent)
        {
            if (extent == null)
            {
                throw new ArgumentNullException("extent");
            }

            var extentName = extent.EntityContainer.Name + "." + extent.Name;

            if (extentName == "CodeFirstDatabase.App")
            {
                return GetView0();
            }

            if (extentName == "CodeFirstDatabase.Config")
            {
                return GetView1();
            }

            if (extentName == "CodeFirstDatabase.ConfigParamDEV1")
            {
                return GetView2();
            }

            if (extentName == "CodeFirstDatabase.ParamDefinition")
            {
                return GetView3();
            }

            if (extentName == "CodeFirstDatabase.ConfigParamDEV2")
            {
                return GetView4();
            }

            if (extentName == "CodeFirstDatabase.ConfigParamPROD")
            {
                return GetView5();
            }

            if (extentName == "CodeFirstDatabase.ConfigParamQA1")
            {
                return GetView6();
            }

            if (extentName == "CodeFirstDatabase.ConfigParamQA2")
            {
                return GetView7();
            }

            if (extentName == "CodeFirstDatabase.ConfigParamSTG1")
            {
                return GetView8();
            }

            if (extentName == "CodeFirstDatabase.ConfigParamSTG2")
            {
                return GetView9();
            }

            if (extentName == "CodeFirstDatabase.ParamType")
            {
                return GetView10();
            }

            if (extentName == "CodeFirstDatabase.ParamVersion")
            {
                return GetView11();
            }

            if (extentName == "CodeFirstDatabase.Executable")
            {
                return GetView12();
            }

            if (extentName == "CodeFirstDatabase.PathServer")
            {
                return GetView13();
            }

            if (extentName == "CodeFirstDatabase.PathShare")
            {
                return GetView14();
            }

            if (extentName == "CodeFirstDatabase.PrimaryFunction")
            {
                return GetView15();
            }

            if (extentName == "CodeFirstDatabase.JPlanLOB")
            {
                return GetView16();
            }

            if (extentName == "CodeFirstDatabase.LineOfBusiness")
            {
                return GetView17();
            }

            if (extentName == "CodeFirstDatabase.Plan")
            {
                return GetView18();
            }

            if (extentName == "CodeFirstDatabase.PathServerPathShare")
            {
                return GetView19();
            }

            if (extentName == "CodeFirstDatabase.ExecutablePathServer")
            {
                return GetView20();
            }

            if (extentName == "CodeFirstDatabase.ExecutablePrimaryFunction")
            {
                return GetView21();
            }

            if (extentName == "CodeFirstDatabase.ConfigExecutable")
            {
                return GetView22();
            }

            if (extentName == "CodeFirstDatabase.ConfigJPlanLOB")
            {
                return GetView23();
            }

            if (extentName == "CodeFirstDatabase.ConfigPlan")
            {
                return GetView24();
            }

            if (extentName == "CodeFirstDatabase.AppPlan")
            {
                return GetView25();
            }

            if (extentName == "ConfigMgrContext.app")
            {
                return GetView26();
            }

            if (extentName == "ConfigMgrContext.config")
            {
                return GetView27();
            }

            if (extentName == "ConfigMgrContext.configParamDev1")
            {
                return GetView28();
            }

            if (extentName == "ConfigMgrContext.ConfigParamDEV1_ParamDefinition")
            {
                return GetView29();
            }

            if (extentName == "ConfigMgrContext.paramDefinitions")
            {
                return GetView30();
            }

            if (extentName == "ConfigMgrContext.configParamDev2")
            {
                return GetView31();
            }

            if (extentName == "ConfigMgrContext.ConfigParamDEV2_ParamDefinition")
            {
                return GetView32();
            }

            if (extentName == "ConfigMgrContext.configParamPROD")
            {
                return GetView33();
            }

            if (extentName == "ConfigMgrContext.ConfigParamPROD_ParamDefinition")
            {
                return GetView34();
            }

            if (extentName == "ConfigMgrContext.configParamQA1")
            {
                return GetView35();
            }

            if (extentName == "ConfigMgrContext.ConfigParamQA1_ParamDefinition")
            {
                return GetView36();
            }

            if (extentName == "ConfigMgrContext.configParamQA2")
            {
                return GetView37();
            }

            if (extentName == "ConfigMgrContext.ConfigParamQA2_ParamDefinition")
            {
                return GetView38();
            }

            if (extentName == "ConfigMgrContext.configParamSTG1")
            {
                return GetView39();
            }

            if (extentName == "ConfigMgrContext.ConfigParamSTG1_ParamDefinition")
            {
                return GetView40();
            }

            if (extentName == "ConfigMgrContext.configParamSTG2")
            {
                return GetView41();
            }

            if (extentName == "ConfigMgrContext.ConfigParamSTG2_ParamDefinition")
            {
                return GetView42();
            }

            if (extentName == "ConfigMgrContext.paramType")
            {
                return GetView43();
            }

            if (extentName == "ConfigMgrContext.paramVersion")
            {
                return GetView44();
            }

            if (extentName == "ConfigMgrContext.executable")
            {
                return GetView45();
            }

            if (extentName == "ConfigMgrContext.pathServer")
            {
                return GetView46();
            }

            if (extentName == "ConfigMgrContext.pathShare")
            {
                return GetView47();
            }

            if (extentName == "ConfigMgrContext.executableFunctions")
            {
                return GetView48();
            }

            if (extentName == "ConfigMgrContext.jPlanLOB")
            {
                return GetView49();
            }

            if (extentName == "ConfigMgrContext.lineOfBusiness")
            {
                return GetView50();
            }

            if (extentName == "ConfigMgrContext.plan")
            {
                return GetView51();
            }

            if (extentName == "ConfigMgrContext.PathServer_PathShare")
            {
                return GetView52();
            }

            if (extentName == "ConfigMgrContext.Executable_PathServers")
            {
                return GetView53();
            }

            if (extentName == "ConfigMgrContext.Executable_PrimaryFunctions")
            {
                return GetView54();
            }

            if (extentName == "ConfigMgrContext.Config_Executables")
            {
                return GetView55();
            }

            if (extentName == "ConfigMgrContext.Config_JPlanLOBs")
            {
                return GetView56();
            }

            if (extentName == "ConfigMgrContext.Config_Plans")
            {
                return GetView57();
            }

            if (extentName == "ConfigMgrContext.App_Plans")
            {
                return GetView58();
            }

            return null;
        }

        /// <summary>
        /// Gets the view for CodeFirstDatabase.App.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView0()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing App
        [CodeFirstDatabaseSchema.App](T1.App_ID, T1.App_ITIL, T1.App_abbr, T1.App_description, T1.App_createDT, T1.App_createUser, T1.App_updateDT, T1.App_updateUser)
    FROM (
        SELECT 
            T.ID AS App_ID, 
            T.ITIL AS App_ITIL, 
            T.abbr AS App_abbr, 
            T.description AS App_description, 
            T.createDT AS App_createDT, 
            T.createUser AS App_createUser, 
            T.updateDT AS App_updateDT, 
            T.updateUser AS App_updateUser, 
            True AS _from0
        FROM ConfigMgrContext.app AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for CodeFirstDatabase.Config.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView1()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing Config
        [CodeFirstDatabaseSchema.Config](T1.Config_ID, T1.Config_jobID, T1.Config_AppID, T1.Config_ParamVersionID, T1.Config_Active, T1.Config_DescriptonShort, T1.Config_DescriptonFull, T1.Config_effDT, T1.Config_trmDT, T1.Config_createDT, T1.Config_createUser, T1.Config_updateDT, T1.Config_updateUser)
    FROM (
        SELECT 
            T.ID AS Config_ID, 
            T.jobID AS Config_jobID, 
            T.AppID AS Config_AppID, 
            T.ParamVersionID AS Config_ParamVersionID, 
            T.Active AS Config_Active, 
            T.DescriptonShort AS Config_DescriptonShort, 
            T.DescriptonFull AS Config_DescriptonFull, 
            T.effDT AS Config_effDT, 
            T.trmDT AS Config_trmDT, 
            T.createDT AS Config_createDT, 
            T.createUser AS Config_createUser, 
            T.updateDT AS Config_updateDT, 
            T.updateUser AS Config_updateUser, 
            True AS _from0
        FROM ConfigMgrContext.config AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for CodeFirstDatabase.ConfigParamDEV1.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView2()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing ConfigParamDEV1
        [CodeFirstDatabaseSchema.ConfigParamDEV1](T3.ConfigParamDEV1_ID, T3.ConfigParamDEV1_ConfigID, T3.ConfigParamDEV1_effDT, T3.ConfigParamDEV1_trmDT, T3.ConfigParamDEV1_ParamDefinitionsID, T3.ConfigParamDEV1_isRefOnly, T3.ConfigParamDEV1_value, T3.ConfigParamDEV1_valueUseageComments, T3.ConfigParamDEV1_createDT, T3.ConfigParamDEV1_createUser, T3.ConfigParamDEV1_updateDT, T3.ConfigParamDEV1_updateUser, T3.[ConfigParamDEV1.ParamDefinition_ID])
    FROM (
        SELECT T1.ConfigParamDEV1_ID, T2.ConfigParamDEV1_ConfigID, T2.ConfigParamDEV1_effDT, T2.ConfigParamDEV1_trmDT, T2.ConfigParamDEV1_ParamDefinitionsID, T2.ConfigParamDEV1_isRefOnly, T2.ConfigParamDEV1_value, T2.ConfigParamDEV1_valueUseageComments, T2.ConfigParamDEV1_createDT, T2.ConfigParamDEV1_createUser, T2.ConfigParamDEV1_updateDT, T2.ConfigParamDEV1_updateUser, T1.[ConfigParamDEV1.ParamDefinition_ID], T2._from0, T1._from1
        FROM  (
            SELECT 
                Key(T.ConfigParamDEV1_ParamDefinition_Source).ID AS ConfigParamDEV1_ID, 
                Key(T.ConfigParamDEV1_ParamDefinition_Target).ID AS [ConfigParamDEV1.ParamDefinition_ID], 
                True AS _from1
            FROM ConfigMgrContext.ConfigParamDEV1_ParamDefinition AS T) AS T1
            INNER JOIN (
            SELECT 
                T.ID AS ConfigParamDEV1_ID, 
                T.ConfigID AS ConfigParamDEV1_ConfigID, 
                T.effDT AS ConfigParamDEV1_effDT, 
                T.trmDT AS ConfigParamDEV1_trmDT, 
                T.ParamDefinitionsID AS ConfigParamDEV1_ParamDefinitionsID, 
                T.isRefOnly AS ConfigParamDEV1_isRefOnly, 
                T.[value] AS ConfigParamDEV1_value, 
                T.valueUseageComments AS ConfigParamDEV1_valueUseageComments, 
                T.createDT AS ConfigParamDEV1_createDT, 
                T.createUser AS ConfigParamDEV1_createUser, 
                T.updateDT AS ConfigParamDEV1_updateDT, 
                T.updateUser AS ConfigParamDEV1_updateUser, 
                True AS _from0
            FROM ConfigMgrContext.configParamDev1 AS T) AS T2
            ON T1.ConfigParamDEV1_ID = T2.ConfigParamDEV1_ID
    ) AS T3");
        }

        /// <summary>
        /// Gets the view for CodeFirstDatabase.ParamDefinition.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView3()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing ParamDefinition
        [CodeFirstDatabaseSchema.ParamDefinition](T1.ParamDefinition_ID, T1.ParamDefinition_ParamVersionID, T1.ParamDefinition_ParamSequence, T1.ParamDefinition_ParamTypeID, T1.ParamDefinition_variableName, T1.ParamDefinition_intendedUse, T1.ParamDefinition_createDT, T1.ParamDefinition_createUser, T1.ParamDefinition_updateDT, T1.ParamDefinition_updateUser)
    FROM (
        SELECT 
            T.ID AS ParamDefinition_ID, 
            T.ParamVersionID AS ParamDefinition_ParamVersionID, 
            T.ParamSequence AS ParamDefinition_ParamSequence, 
            T.ParamTypeID AS ParamDefinition_ParamTypeID, 
            T.variableName AS ParamDefinition_variableName, 
            T.intendedUse AS ParamDefinition_intendedUse, 
            T.createDT AS ParamDefinition_createDT, 
            T.createUser AS ParamDefinition_createUser, 
            T.updateDT AS ParamDefinition_updateDT, 
            T.updateUser AS ParamDefinition_updateUser, 
            True AS _from0
        FROM ConfigMgrContext.paramDefinitions AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for CodeFirstDatabase.ConfigParamDEV2.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView4()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing ConfigParamDEV2
        [CodeFirstDatabaseSchema.ConfigParamDEV2](T3.ConfigParamDEV2_ID, T3.ConfigParamDEV2_ConfigID, T3.ConfigParamDEV2_effDT, T3.ConfigParamDEV2_trmDT, T3.ConfigParamDEV2_ParamDefinitionsID, T3.ConfigParamDEV2_isRefOnly, T3.ConfigParamDEV2_value, T3.ConfigParamDEV2_valueUseageComments, T3.ConfigParamDEV2_createDT, T3.ConfigParamDEV2_createUser, T3.ConfigParamDEV2_updateDT, T3.ConfigParamDEV2_updateUser, T3.[ConfigParamDEV2.ParamDefinition_ID])
    FROM (
        SELECT T1.ConfigParamDEV2_ID, T2.ConfigParamDEV2_ConfigID, T2.ConfigParamDEV2_effDT, T2.ConfigParamDEV2_trmDT, T2.ConfigParamDEV2_ParamDefinitionsID, T2.ConfigParamDEV2_isRefOnly, T2.ConfigParamDEV2_value, T2.ConfigParamDEV2_valueUseageComments, T2.ConfigParamDEV2_createDT, T2.ConfigParamDEV2_createUser, T2.ConfigParamDEV2_updateDT, T2.ConfigParamDEV2_updateUser, T1.[ConfigParamDEV2.ParamDefinition_ID], T2._from0, T1._from1
        FROM  (
            SELECT 
                Key(T.ConfigParamDEV2_ParamDefinition_Source).ID AS ConfigParamDEV2_ID, 
                Key(T.ConfigParamDEV2_ParamDefinition_Target).ID AS [ConfigParamDEV2.ParamDefinition_ID], 
                True AS _from1
            FROM ConfigMgrContext.ConfigParamDEV2_ParamDefinition AS T) AS T1
            INNER JOIN (
            SELECT 
                T.ID AS ConfigParamDEV2_ID, 
                T.ConfigID AS ConfigParamDEV2_ConfigID, 
                T.effDT AS ConfigParamDEV2_effDT, 
                T.trmDT AS ConfigParamDEV2_trmDT, 
                T.ParamDefinitionsID AS ConfigParamDEV2_ParamDefinitionsID, 
                T.isRefOnly AS ConfigParamDEV2_isRefOnly, 
                T.[value] AS ConfigParamDEV2_value, 
                T.valueUseageComments AS ConfigParamDEV2_valueUseageComments, 
                T.createDT AS ConfigParamDEV2_createDT, 
                T.createUser AS ConfigParamDEV2_createUser, 
                T.updateDT AS ConfigParamDEV2_updateDT, 
                T.updateUser AS ConfigParamDEV2_updateUser, 
                True AS _from0
            FROM ConfigMgrContext.configParamDev2 AS T) AS T2
            ON T1.ConfigParamDEV2_ID = T2.ConfigParamDEV2_ID
    ) AS T3");
        }

        /// <summary>
        /// Gets the view for CodeFirstDatabase.ConfigParamPROD.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView5()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing ConfigParamPROD
        [CodeFirstDatabaseSchema.ConfigParamPROD](T3.ConfigParamPROD_ID, T3.ConfigParamPROD_ConfigID, T3.ConfigParamPROD_effDT, T3.ConfigParamPROD_trmDT, T3.ConfigParamPROD_ParamDefinitionsID, T3.ConfigParamPROD_isRefOnly, T3.ConfigParamPROD_value, T3.ConfigParamPROD_valueUseageComments, T3.ConfigParamPROD_createDT, T3.ConfigParamPROD_createUser, T3.ConfigParamPROD_updateDT, T3.ConfigParamPROD_updateUser, T3.[ConfigParamPROD.ParamDefinition_ID])
    FROM (
        SELECT T1.ConfigParamPROD_ID, T2.ConfigParamPROD_ConfigID, T2.ConfigParamPROD_effDT, T2.ConfigParamPROD_trmDT, T2.ConfigParamPROD_ParamDefinitionsID, T2.ConfigParamPROD_isRefOnly, T2.ConfigParamPROD_value, T2.ConfigParamPROD_valueUseageComments, T2.ConfigParamPROD_createDT, T2.ConfigParamPROD_createUser, T2.ConfigParamPROD_updateDT, T2.ConfigParamPROD_updateUser, T1.[ConfigParamPROD.ParamDefinition_ID], T2._from0, T1._from1
        FROM  (
            SELECT 
                Key(T.ConfigParamPROD_ParamDefinition_Source).ID AS ConfigParamPROD_ID, 
                Key(T.ConfigParamPROD_ParamDefinition_Target).ID AS [ConfigParamPROD.ParamDefinition_ID], 
                True AS _from1
            FROM ConfigMgrContext.ConfigParamPROD_ParamDefinition AS T) AS T1
            INNER JOIN (
            SELECT 
                T.ID AS ConfigParamPROD_ID, 
                T.ConfigID AS ConfigParamPROD_ConfigID, 
                T.effDT AS ConfigParamPROD_effDT, 
                T.trmDT AS ConfigParamPROD_trmDT, 
                T.ParamDefinitionsID AS ConfigParamPROD_ParamDefinitionsID, 
                T.isRefOnly AS ConfigParamPROD_isRefOnly, 
                T.[value] AS ConfigParamPROD_value, 
                T.valueUseageComments AS ConfigParamPROD_valueUseageComments, 
                T.createDT AS ConfigParamPROD_createDT, 
                T.createUser AS ConfigParamPROD_createUser, 
                T.updateDT AS ConfigParamPROD_updateDT, 
                T.updateUser AS ConfigParamPROD_updateUser, 
                True AS _from0
            FROM ConfigMgrContext.configParamPROD AS T) AS T2
            ON T1.ConfigParamPROD_ID = T2.ConfigParamPROD_ID
    ) AS T3");
        }

        /// <summary>
        /// Gets the view for CodeFirstDatabase.ConfigParamQA1.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView6()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing ConfigParamQA1
        [CodeFirstDatabaseSchema.ConfigParamQA1](T3.ConfigParamQA1_ID, T3.ConfigParamQA1_ConfigID, T3.ConfigParamQA1_effDT, T3.ConfigParamQA1_trmDT, T3.ConfigParamQA1_ParamDefinitionsID, T3.ConfigParamQA1_isRefOnly, T3.ConfigParamQA1_value, T3.ConfigParamQA1_valueUseageComments, T3.ConfigParamQA1_createDT, T3.ConfigParamQA1_createUser, T3.ConfigParamQA1_updateDT, T3.ConfigParamQA1_updateUser, T3.[ConfigParamQA1.ParamDefinition_ID])
    FROM (
        SELECT T1.ConfigParamQA1_ID, T2.ConfigParamQA1_ConfigID, T2.ConfigParamQA1_effDT, T2.ConfigParamQA1_trmDT, T2.ConfigParamQA1_ParamDefinitionsID, T2.ConfigParamQA1_isRefOnly, T2.ConfigParamQA1_value, T2.ConfigParamQA1_valueUseageComments, T2.ConfigParamQA1_createDT, T2.ConfigParamQA1_createUser, T2.ConfigParamQA1_updateDT, T2.ConfigParamQA1_updateUser, T1.[ConfigParamQA1.ParamDefinition_ID], T2._from0, T1._from1
        FROM  (
            SELECT 
                Key(T.ConfigParamQA1_ParamDefinition_Source).ID AS ConfigParamQA1_ID, 
                Key(T.ConfigParamQA1_ParamDefinition_Target).ID AS [ConfigParamQA1.ParamDefinition_ID], 
                True AS _from1
            FROM ConfigMgrContext.ConfigParamQA1_ParamDefinition AS T) AS T1
            INNER JOIN (
            SELECT 
                T.ID AS ConfigParamQA1_ID, 
                T.ConfigID AS ConfigParamQA1_ConfigID, 
                T.effDT AS ConfigParamQA1_effDT, 
                T.trmDT AS ConfigParamQA1_trmDT, 
                T.ParamDefinitionsID AS ConfigParamQA1_ParamDefinitionsID, 
                T.isRefOnly AS ConfigParamQA1_isRefOnly, 
                T.[value] AS ConfigParamQA1_value, 
                T.valueUseageComments AS ConfigParamQA1_valueUseageComments, 
                T.createDT AS ConfigParamQA1_createDT, 
                T.createUser AS ConfigParamQA1_createUser, 
                T.updateDT AS ConfigParamQA1_updateDT, 
                T.updateUser AS ConfigParamQA1_updateUser, 
                True AS _from0
            FROM ConfigMgrContext.configParamQA1 AS T) AS T2
            ON T1.ConfigParamQA1_ID = T2.ConfigParamQA1_ID
    ) AS T3");
        }

        /// <summary>
        /// Gets the view for CodeFirstDatabase.ConfigParamQA2.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView7()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing ConfigParamQA2
        [CodeFirstDatabaseSchema.ConfigParamQA2](T3.ConfigParamQA2_ID, T3.ConfigParamQA2_ConfigID, T3.ConfigParamQA2_effDT, T3.ConfigParamQA2_trmDT, T3.ConfigParamQA2_ParamDefinitionsID, T3.ConfigParamQA2_isRefOnly, T3.ConfigParamQA2_value, T3.ConfigParamQA2_valueUseageComments, T3.ConfigParamQA2_createDT, T3.ConfigParamQA2_createUser, T3.ConfigParamQA2_updateDT, T3.ConfigParamQA2_updateUser, T3.[ConfigParamQA2.ParamDefinition_ID])
    FROM (
        SELECT T1.ConfigParamQA2_ID, T2.ConfigParamQA2_ConfigID, T2.ConfigParamQA2_effDT, T2.ConfigParamQA2_trmDT, T2.ConfigParamQA2_ParamDefinitionsID, T2.ConfigParamQA2_isRefOnly, T2.ConfigParamQA2_value, T2.ConfigParamQA2_valueUseageComments, T2.ConfigParamQA2_createDT, T2.ConfigParamQA2_createUser, T2.ConfigParamQA2_updateDT, T2.ConfigParamQA2_updateUser, T1.[ConfigParamQA2.ParamDefinition_ID], T2._from0, T1._from1
        FROM  (
            SELECT 
                Key(T.ConfigParamQA2_ParamDefinition_Source).ID AS ConfigParamQA2_ID, 
                Key(T.ConfigParamQA2_ParamDefinition_Target).ID AS [ConfigParamQA2.ParamDefinition_ID], 
                True AS _from1
            FROM ConfigMgrContext.ConfigParamQA2_ParamDefinition AS T) AS T1
            INNER JOIN (
            SELECT 
                T.ID AS ConfigParamQA2_ID, 
                T.ConfigID AS ConfigParamQA2_ConfigID, 
                T.effDT AS ConfigParamQA2_effDT, 
                T.trmDT AS ConfigParamQA2_trmDT, 
                T.ParamDefinitionsID AS ConfigParamQA2_ParamDefinitionsID, 
                T.isRefOnly AS ConfigParamQA2_isRefOnly, 
                T.[value] AS ConfigParamQA2_value, 
                T.valueUseageComments AS ConfigParamQA2_valueUseageComments, 
                T.createDT AS ConfigParamQA2_createDT, 
                T.createUser AS ConfigParamQA2_createUser, 
                T.updateDT AS ConfigParamQA2_updateDT, 
                T.updateUser AS ConfigParamQA2_updateUser, 
                True AS _from0
            FROM ConfigMgrContext.configParamQA2 AS T) AS T2
            ON T1.ConfigParamQA2_ID = T2.ConfigParamQA2_ID
    ) AS T3");
        }

        /// <summary>
        /// Gets the view for CodeFirstDatabase.ConfigParamSTG1.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView8()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing ConfigParamSTG1
        [CodeFirstDatabaseSchema.ConfigParamSTG1](T3.ConfigParamSTG1_ID, T3.ConfigParamSTG1_ConfigID, T3.ConfigParamSTG1_effDT, T3.ConfigParamSTG1_trmDT, T3.ConfigParamSTG1_ParamDefinitionsID, T3.ConfigParamSTG1_isRefOnly, T3.ConfigParamSTG1_value, T3.ConfigParamSTG1_valueUseageComments, T3.ConfigParamSTG1_createDT, T3.ConfigParamSTG1_createUser, T3.ConfigParamSTG1_updateDT, T3.ConfigParamSTG1_updateUser, T3.[ConfigParamSTG1.ParamDefinition_ID])
    FROM (
        SELECT T1.ConfigParamSTG1_ID, T2.ConfigParamSTG1_ConfigID, T2.ConfigParamSTG1_effDT, T2.ConfigParamSTG1_trmDT, T2.ConfigParamSTG1_ParamDefinitionsID, T2.ConfigParamSTG1_isRefOnly, T2.ConfigParamSTG1_value, T2.ConfigParamSTG1_valueUseageComments, T2.ConfigParamSTG1_createDT, T2.ConfigParamSTG1_createUser, T2.ConfigParamSTG1_updateDT, T2.ConfigParamSTG1_updateUser, T1.[ConfigParamSTG1.ParamDefinition_ID], T2._from0, T1._from1
        FROM  (
            SELECT 
                Key(T.ConfigParamSTG1_ParamDefinition_Source).ID AS ConfigParamSTG1_ID, 
                Key(T.ConfigParamSTG1_ParamDefinition_Target).ID AS [ConfigParamSTG1.ParamDefinition_ID], 
                True AS _from1
            FROM ConfigMgrContext.ConfigParamSTG1_ParamDefinition AS T) AS T1
            INNER JOIN (
            SELECT 
                T.ID AS ConfigParamSTG1_ID, 
                T.ConfigID AS ConfigParamSTG1_ConfigID, 
                T.effDT AS ConfigParamSTG1_effDT, 
                T.trmDT AS ConfigParamSTG1_trmDT, 
                T.ParamDefinitionsID AS ConfigParamSTG1_ParamDefinitionsID, 
                T.isRefOnly AS ConfigParamSTG1_isRefOnly, 
                T.[value] AS ConfigParamSTG1_value, 
                T.valueUseageComments AS ConfigParamSTG1_valueUseageComments, 
                T.createDT AS ConfigParamSTG1_createDT, 
                T.createUser AS ConfigParamSTG1_createUser, 
                T.updateDT AS ConfigParamSTG1_updateDT, 
                T.updateUser AS ConfigParamSTG1_updateUser, 
                True AS _from0
            FROM ConfigMgrContext.configParamSTG1 AS T) AS T2
            ON T1.ConfigParamSTG1_ID = T2.ConfigParamSTG1_ID
    ) AS T3");
        }

        /// <summary>
        /// Gets the view for CodeFirstDatabase.ConfigParamSTG2.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView9()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing ConfigParamSTG2
        [CodeFirstDatabaseSchema.ConfigParamSTG2](T3.ConfigParamSTG2_ID, T3.ConfigParamSTG2_ConfigID, T3.ConfigParamSTG2_effDT, T3.ConfigParamSTG2_trmDT, T3.ConfigParamSTG2_ParamDefinitionsID, T3.ConfigParamSTG2_isRefOnly, T3.ConfigParamSTG2_value, T3.ConfigParamSTG2_valueUseageComments, T3.ConfigParamSTG2_createDT, T3.ConfigParamSTG2_createUser, T3.ConfigParamSTG2_updateDT, T3.ConfigParamSTG2_updateUser, T3.[ConfigParamSTG2.ParamDefinition_ID])
    FROM (
        SELECT T1.ConfigParamSTG2_ID, T2.ConfigParamSTG2_ConfigID, T2.ConfigParamSTG2_effDT, T2.ConfigParamSTG2_trmDT, T2.ConfigParamSTG2_ParamDefinitionsID, T2.ConfigParamSTG2_isRefOnly, T2.ConfigParamSTG2_value, T2.ConfigParamSTG2_valueUseageComments, T2.ConfigParamSTG2_createDT, T2.ConfigParamSTG2_createUser, T2.ConfigParamSTG2_updateDT, T2.ConfigParamSTG2_updateUser, T1.[ConfigParamSTG2.ParamDefinition_ID], T2._from0, T1._from1
        FROM  (
            SELECT 
                Key(T.ConfigParamSTG2_ParamDefinition_Source).ID AS ConfigParamSTG2_ID, 
                Key(T.ConfigParamSTG2_ParamDefinition_Target).ID AS [ConfigParamSTG2.ParamDefinition_ID], 
                True AS _from1
            FROM ConfigMgrContext.ConfigParamSTG2_ParamDefinition AS T) AS T1
            INNER JOIN (
            SELECT 
                T.ID AS ConfigParamSTG2_ID, 
                T.ConfigID AS ConfigParamSTG2_ConfigID, 
                T.effDT AS ConfigParamSTG2_effDT, 
                T.trmDT AS ConfigParamSTG2_trmDT, 
                T.ParamDefinitionsID AS ConfigParamSTG2_ParamDefinitionsID, 
                T.isRefOnly AS ConfigParamSTG2_isRefOnly, 
                T.[value] AS ConfigParamSTG2_value, 
                T.valueUseageComments AS ConfigParamSTG2_valueUseageComments, 
                T.createDT AS ConfigParamSTG2_createDT, 
                T.createUser AS ConfigParamSTG2_createUser, 
                T.updateDT AS ConfigParamSTG2_updateDT, 
                T.updateUser AS ConfigParamSTG2_updateUser, 
                True AS _from0
            FROM ConfigMgrContext.configParamSTG2 AS T) AS T2
            ON T1.ConfigParamSTG2_ID = T2.ConfigParamSTG2_ID
    ) AS T3");
        }

        /// <summary>
        /// Gets the view for CodeFirstDatabase.ParamType.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView10()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing ParamType
        [CodeFirstDatabaseSchema.ParamType](T1.ParamType_ID, T1.ParamType_type, T1.ParamType_createDT, T1.ParamType_createUser, T1.ParamType_updateDT, T1.ParamType_updateUser)
    FROM (
        SELECT 
            T.ID AS ParamType_ID, 
            T.type AS ParamType_type, 
            T.createDT AS ParamType_createDT, 
            T.createUser AS ParamType_createUser, 
            T.updateDT AS ParamType_updateDT, 
            T.updateUser AS ParamType_updateUser, 
            True AS _from0
        FROM ConfigMgrContext.paramType AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for CodeFirstDatabase.ParamVersion.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView11()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing ParamVersion
        [CodeFirstDatabaseSchema.ParamVersion](T1.ParamVersion_ID, T1.ParamVersion_version, T1.ParamVersion_description, T1.ParamVersion_createDT, T1.ParamVersion_createUser, T1.ParamVersion_updateDT, T1.ParamVersion_updateUser)
    FROM (
        SELECT 
            T.ID AS ParamVersion_ID, 
            T.version AS ParamVersion_version, 
            T.description AS ParamVersion_description, 
            T.createDT AS ParamVersion_createDT, 
            T.createUser AS ParamVersion_createUser, 
            T.updateDT AS ParamVersion_updateDT, 
            T.updateUser AS ParamVersion_updateUser, 
            True AS _from0
        FROM ConfigMgrContext.paramVersion AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for CodeFirstDatabase.Executable.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView12()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing Executable
        [CodeFirstDatabaseSchema.Executable](T1.Executable_ID, T1.Executable_ParamVersionID, T1.Executable_AppID, T1.Executable_nameWExtension, T1.Executable_description, T1.Executable_createDT, T1.Executable_createUser, T1.Executable_updateDT, T1.Executable_updateUser)
    FROM (
        SELECT 
            T.ID AS Executable_ID, 
            T.ParamVersionID AS Executable_ParamVersionID, 
            T.AppID AS Executable_AppID, 
            T.nameWExtension AS Executable_nameWExtension, 
            T.description AS Executable_description, 
            T.createDT AS Executable_createDT, 
            T.createUser AS Executable_createUser, 
            T.updateDT AS Executable_updateDT, 
            T.updateUser AS Executable_updateUser, 
            True AS _from0
        FROM ConfigMgrContext.executable AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for CodeFirstDatabase.PathServer.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView13()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing PathServer
        [CodeFirstDatabaseSchema.PathServer](T1.PathServer_ID, T1.PathServer_server, T1.PathServer_path, T1.PathServer_createDT, T1.PathServer_createUser, T1.PathServer_updateDT, T1.PathServer_updateUser)
    FROM (
        SELECT 
            T.ID AS PathServer_ID, 
            T.server AS PathServer_server, 
            T.path AS PathServer_path, 
            T.createDT AS PathServer_createDT, 
            T.createUser AS PathServer_createUser, 
            T.updateDT AS PathServer_updateDT, 
            T.updateUser AS PathServer_updateUser, 
            True AS _from0
        FROM ConfigMgrContext.pathServer AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for CodeFirstDatabase.PathShare.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView14()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing PathShare
        [CodeFirstDatabaseSchema.PathShare](T1.PathShare_ID, T1.PathShare_share, T1.PathShare_path, T1.PathShare_createDT, T1.PathShare_createUser, T1.PathShare_updateDT, T1.PathShare_updateUser)
    FROM (
        SELECT 
            T.ID AS PathShare_ID, 
            T.share AS PathShare_share, 
            T.path AS PathShare_path, 
            T.createDT AS PathShare_createDT, 
            T.createUser AS PathShare_createUser, 
            T.updateDT AS PathShare_updateDT, 
            T.updateUser AS PathShare_updateUser, 
            True AS _from0
        FROM ConfigMgrContext.pathShare AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for CodeFirstDatabase.PrimaryFunction.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView15()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing PrimaryFunction
        [CodeFirstDatabaseSchema.PrimaryFunction](T1.PrimaryFunction_ID, T1.PrimaryFunction_abbr, T1.PrimaryFunction_description, T1.PrimaryFunction_createDT, T1.PrimaryFunction_createUser, T1.PrimaryFunction_updateDT, T1.PrimaryFunction_updateUser)
    FROM (
        SELECT 
            T.ID AS PrimaryFunction_ID, 
            T.abbr AS PrimaryFunction_abbr, 
            T.description AS PrimaryFunction_description, 
            T.createDT AS PrimaryFunction_createDT, 
            T.createUser AS PrimaryFunction_createUser, 
            T.updateDT AS PrimaryFunction_updateDT, 
            T.updateUser AS PrimaryFunction_updateUser, 
            True AS _from0
        FROM ConfigMgrContext.executableFunctions AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for CodeFirstDatabase.JPlanLOB.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView16()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing JPlanLOB
        [CodeFirstDatabaseSchema.JPlanLOB](T1.JPlanLOB_ID, T1.JPlanLOB_planID, T1.JPlanLOB_LineOfBusinessID, T1.JPlanLOB_createDT, T1.JPlanLOB_createUser, T1.JPlanLOB_updateDT, T1.JPlanLOB_updateUser)
    FROM (
        SELECT 
            T.ID AS JPlanLOB_ID, 
            T.planID AS JPlanLOB_planID, 
            T.LineOfBusinessID AS JPlanLOB_LineOfBusinessID, 
            T.createDT AS JPlanLOB_createDT, 
            T.createUser AS JPlanLOB_createUser, 
            T.updateDT AS JPlanLOB_updateDT, 
            T.updateUser AS JPlanLOB_updateUser, 
            True AS _from0
        FROM ConfigMgrContext.jPlanLOB AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for CodeFirstDatabase.LineOfBusiness.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView17()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing LineOfBusiness
        [CodeFirstDatabaseSchema.LineOfBusiness](T1.LineOfBusiness_ID, T1.LineOfBusiness_abbr, T1.LineOfBusiness_descr, T1.LineOfBusiness_createDT, T1.LineOfBusiness_createUser, T1.LineOfBusiness_updateDT, T1.LineOfBusiness_updateUser)
    FROM (
        SELECT 
            T.ID AS LineOfBusiness_ID, 
            T.abbr AS LineOfBusiness_abbr, 
            T.descr AS LineOfBusiness_descr, 
            T.createDT AS LineOfBusiness_createDT, 
            T.createUser AS LineOfBusiness_createUser, 
            T.updateDT AS LineOfBusiness_updateDT, 
            T.updateUser AS LineOfBusiness_updateUser, 
            True AS _from0
        FROM ConfigMgrContext.lineOfBusiness AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for CodeFirstDatabase.Plan.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView18()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing Plan
        [CodeFirstDatabaseSchema.Plan](T1.Plan_ID, T1.Plan_abbr, T1.Plan_descr, T1.Plan_createDT, T1.Plan_createUser, T1.Plan_updateDT, T1.Plan_updateUser)
    FROM (
        SELECT 
            T.ID AS Plan_ID, 
            T.abbr AS Plan_abbr, 
            T.descr AS Plan_descr, 
            T.createDT AS Plan_createDT, 
            T.createUser AS Plan_createUser, 
            T.updateDT AS Plan_updateDT, 
            T.updateUser AS Plan_updateUser, 
            True AS _from0
        FROM ConfigMgrContext.plan AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for CodeFirstDatabase.PathServerPathShare.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView19()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing PathServerPathShare
        [CodeFirstDatabaseSchema.PathServerPathShare](T1.PathServerPathShare_pathServer, T1.PathServerPathShare_pathShare)
    FROM (
        SELECT 
            Key(T.PathServer_PathShare_Source).ID AS PathServerPathShare_pathServer, 
            Key(T.PathServer_PathShare_Target).ID AS PathServerPathShare_pathShare, 
            True AS _from0
        FROM ConfigMgrContext.PathServer_PathShare AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for CodeFirstDatabase.ExecutablePathServer.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView20()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing ExecutablePathServer
        [CodeFirstDatabaseSchema.ExecutablePathServer](T1.ExecutablePathServer_pathServer, T1.ExecutablePathServer_executable)
    FROM (
        SELECT 
            Key(T.Executable_PathServers_Source).ID AS ExecutablePathServer_pathServer, 
            Key(T.Executable_PathServers_Target).ID AS ExecutablePathServer_executable, 
            True AS _from0
        FROM ConfigMgrContext.Executable_PathServers AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for CodeFirstDatabase.ExecutablePrimaryFunction.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView21()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing ExecutablePrimaryFunction
        [CodeFirstDatabaseSchema.ExecutablePrimaryFunction](T1.ExecutablePrimaryFunction_primaryFunction, T1.ExecutablePrimaryFunction_executable)
    FROM (
        SELECT 
            Key(T.Executable_PrimaryFunctions_Source).ID AS ExecutablePrimaryFunction_primaryFunction, 
            Key(T.Executable_PrimaryFunctions_Target).ID AS ExecutablePrimaryFunction_executable, 
            True AS _from0
        FROM ConfigMgrContext.Executable_PrimaryFunctions AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for CodeFirstDatabase.ConfigExecutable.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView22()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing ConfigExecutable
        [CodeFirstDatabaseSchema.ConfigExecutable](T1.ConfigExecutable_executable, T1.ConfigExecutable_config)
    FROM (
        SELECT 
            Key(T.Config_Executables_Source).ID AS ConfigExecutable_executable, 
            Key(T.Config_Executables_Target).ID AS ConfigExecutable_config, 
            True AS _from0
        FROM ConfigMgrContext.Config_Executables AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for CodeFirstDatabase.ConfigJPlanLOB.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView23()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing ConfigJPlanLOB
        [CodeFirstDatabaseSchema.ConfigJPlanLOB](T1.ConfigJPlanLOB_jPlanLOB, T1.ConfigJPlanLOB_config)
    FROM (
        SELECT 
            Key(T.Config_JPlanLOBs_Source).ID AS ConfigJPlanLOB_jPlanLOB, 
            Key(T.Config_JPlanLOBs_Target).ID AS ConfigJPlanLOB_config, 
            True AS _from0
        FROM ConfigMgrContext.Config_JPlanLOBs AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for CodeFirstDatabase.ConfigPlan.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView24()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing ConfigPlan
        [CodeFirstDatabaseSchema.ConfigPlan](T1.ConfigPlan_plan, T1.ConfigPlan_config)
    FROM (
        SELECT 
            Key(T.Config_Plans_Source).ID AS ConfigPlan_plan, 
            Key(T.Config_Plans_Target).ID AS ConfigPlan_config, 
            True AS _from0
        FROM ConfigMgrContext.Config_Plans AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for CodeFirstDatabase.AppPlan.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView25()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing AppPlan
        [CodeFirstDatabaseSchema.AppPlan](T1.AppPlan_app, T1.AppPlan_plan)
    FROM (
        SELECT 
            Key(T.App_Plans_Source).ID AS AppPlan_app, 
            Key(T.App_Plans_Target).ID AS AppPlan_plan, 
            True AS _from0
        FROM ConfigMgrContext.App_Plans AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for ConfigMgrContext.app.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView26()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing app
        [Company.DIV.ConfigMgr.Data.App](T1.App_ID, T1.App_ITIL, T1.App_abbr, T1.App_description, T1.App_createDT, T1.App_createUser, T1.App_updateDT, T1.App_updateUser)
    FROM (
        SELECT 
            T.ID AS App_ID, 
            T.ITIL AS App_ITIL, 
            T.abbr AS App_abbr, 
            T.description AS App_description, 
            T.createDT AS App_createDT, 
            T.createUser AS App_createUser, 
            T.updateDT AS App_updateDT, 
            T.updateUser AS App_updateUser, 
            True AS _from0
        FROM CodeFirstDatabase.App AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for ConfigMgrContext.config.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView27()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing config
        [Company.DIV.ConfigMgr.Data.Config](T1.Config_ID, T1.Config_jobID, T1.Config_AppID, T1.Config_ParamVersionID, T1.Config_Active, T1.Config_DescriptonShort, T1.Config_DescriptonFull, T1.Config_effDT, T1.Config_trmDT, T1.Config_createDT, T1.Config_createUser, T1.Config_updateDT, T1.Config_updateUser)
    FROM (
        SELECT 
            T.ID AS Config_ID, 
            T.jobID AS Config_jobID, 
            T.AppID AS Config_AppID, 
            T.ParamVersionID AS Config_ParamVersionID, 
            T.Active AS Config_Active, 
            T.DescriptonShort AS Config_DescriptonShort, 
            T.DescriptonFull AS Config_DescriptonFull, 
            T.effDT AS Config_effDT, 
            T.trmDT AS Config_trmDT, 
            T.createDT AS Config_createDT, 
            T.createUser AS Config_createUser, 
            T.updateDT AS Config_updateDT, 
            T.updateUser AS Config_updateUser, 
            True AS _from0
        FROM CodeFirstDatabase.Config AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for ConfigMgrContext.configParamDev1.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView28()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing configParamDev1
        [Company.DIV.ConfigMgr.Data.ConfigParamDEV1](T1.ConfigParamDEV1_ID, T1.ConfigParamDEV1_ConfigID, T1.ConfigParamDEV1_effDT, T1.ConfigParamDEV1_trmDT, T1.ConfigParamDEV1_ParamDefinitionsID, T1.ConfigParamDEV1_isRefOnly, T1.ConfigParamDEV1_value, T1.ConfigParamDEV1_valueUseageComments, T1.ConfigParamDEV1_createDT, T1.ConfigParamDEV1_createUser, T1.ConfigParamDEV1_updateDT, T1.ConfigParamDEV1_updateUser) WITH 
        RELATIONSHIP(CREATEREF(ConfigMgrContext.paramDefinitions, ROW(T1.[ConfigParamDEV1_ParamDefinition.ConfigParamDEV1_ParamDefinition_Target.ID]),[Company.DIV.ConfigMgr.Data.ParamDefinition]),[Company.DIV.ConfigMgr.Data.ConfigParamDEV1_ParamDefinition],ConfigParamDEV1_ParamDefinition_Source,ConfigParamDEV1_ParamDefinition_Target) 
    FROM (
        SELECT 
            T.ID AS ConfigParamDEV1_ID, 
            T.ConfigID AS ConfigParamDEV1_ConfigID, 
            T.effDT AS ConfigParamDEV1_effDT, 
            T.trmDT AS ConfigParamDEV1_trmDT, 
            T.ParamDefinitionsID AS ConfigParamDEV1_ParamDefinitionsID, 
            T.isRefOnly AS ConfigParamDEV1_isRefOnly, 
            T.[value] AS ConfigParamDEV1_value, 
            T.valueUseageComments AS ConfigParamDEV1_valueUseageComments, 
            T.createDT AS ConfigParamDEV1_createDT, 
            T.createUser AS ConfigParamDEV1_createUser, 
            T.updateDT AS ConfigParamDEV1_updateDT, 
            T.updateUser AS ConfigParamDEV1_updateUser, 
            True AS _from0, 
            T.ParamDefinition_ID AS [ConfigParamDEV1_ParamDefinition.ConfigParamDEV1_ParamDefinition_Target.ID]
        FROM CodeFirstDatabase.ConfigParamDEV1 AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for ConfigMgrContext.ConfigParamDEV1_ParamDefinition.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView29()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing ConfigParamDEV1_ParamDefinition
        [Company.DIV.ConfigMgr.Data.ConfigParamDEV1_ParamDefinition](T3.[ConfigParamDEV1_ParamDefinition.ConfigParamDEV1_ParamDefinition_Source], T3.[ConfigParamDEV1_ParamDefinition.ConfigParamDEV1_ParamDefinition_Target])
    FROM (
        SELECT -- Constructing ConfigParamDEV1_ParamDefinition_Source
            CreateRef(ConfigMgrContext.configParamDev1, row(T2.[ConfigParamDEV1_ParamDefinition.ConfigParamDEV1_ParamDefinition_Source.ID]), [Company.DIV.ConfigMgr.Data.ConfigParamDEV1]) AS [ConfigParamDEV1_ParamDefinition.ConfigParamDEV1_ParamDefinition_Source], 
            T2.[ConfigParamDEV1_ParamDefinition.ConfigParamDEV1_ParamDefinition_Target]
        FROM (
            SELECT -- Constructing ConfigParamDEV1_ParamDefinition_Target
                T1.[ConfigParamDEV1_ParamDefinition.ConfigParamDEV1_ParamDefinition_Source.ID], 
                CreateRef(ConfigMgrContext.paramDefinitions, row(T1.[ConfigParamDEV1_ParamDefinition.ConfigParamDEV1_ParamDefinition_Target.ID]), [Company.DIV.ConfigMgr.Data.ParamDefinition]) AS [ConfigParamDEV1_ParamDefinition.ConfigParamDEV1_ParamDefinition_Target]
            FROM (
                SELECT 
                    T.ID AS [ConfigParamDEV1_ParamDefinition.ConfigParamDEV1_ParamDefinition_Source.ID], 
                    T.ParamDefinition_ID AS [ConfigParamDEV1_ParamDefinition.ConfigParamDEV1_ParamDefinition_Target.ID], 
                    True AS _from0
                FROM CodeFirstDatabase.ConfigParamDEV1 AS T
            ) AS T1
        ) AS T2
    ) AS T3");
        }

        /// <summary>
        /// Gets the view for ConfigMgrContext.paramDefinitions.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView30()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing paramDefinitions
        [Company.DIV.ConfigMgr.Data.ParamDefinition](T1.ParamDefinition_ID, T1.ParamDefinition_ParamVersionID, T1.ParamDefinition_ParamSequence, T1.ParamDefinition_ParamTypeID, T1.ParamDefinition_variableName, T1.ParamDefinition_intendedUse, T1.ParamDefinition_createDT, T1.ParamDefinition_createUser, T1.ParamDefinition_updateDT, T1.ParamDefinition_updateUser)
    FROM (
        SELECT 
            T.ID AS ParamDefinition_ID, 
            T.ParamVersionID AS ParamDefinition_ParamVersionID, 
            T.ParamSequence AS ParamDefinition_ParamSequence, 
            T.ParamTypeID AS ParamDefinition_ParamTypeID, 
            T.variableName AS ParamDefinition_variableName, 
            T.intendedUse AS ParamDefinition_intendedUse, 
            T.createDT AS ParamDefinition_createDT, 
            T.createUser AS ParamDefinition_createUser, 
            T.updateDT AS ParamDefinition_updateDT, 
            T.updateUser AS ParamDefinition_updateUser, 
            True AS _from0
        FROM CodeFirstDatabase.ParamDefinition AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for ConfigMgrContext.configParamDev2.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView31()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing configParamDev2
        [Company.DIV.ConfigMgr.Data.ConfigParamDEV2](T1.ConfigParamDEV2_ID, T1.ConfigParamDEV2_ConfigID, T1.ConfigParamDEV2_effDT, T1.ConfigParamDEV2_trmDT, T1.ConfigParamDEV2_ParamDefinitionsID, T1.ConfigParamDEV2_isRefOnly, T1.ConfigParamDEV2_value, T1.ConfigParamDEV2_valueUseageComments, T1.ConfigParamDEV2_createDT, T1.ConfigParamDEV2_createUser, T1.ConfigParamDEV2_updateDT, T1.ConfigParamDEV2_updateUser) WITH 
        RELATIONSHIP(CREATEREF(ConfigMgrContext.paramDefinitions, ROW(T1.[ConfigParamDEV2_ParamDefinition.ConfigParamDEV2_ParamDefinition_Target.ID]),[Company.DIV.ConfigMgr.Data.ParamDefinition]),[Company.DIV.ConfigMgr.Data.ConfigParamDEV2_ParamDefinition],ConfigParamDEV2_ParamDefinition_Source,ConfigParamDEV2_ParamDefinition_Target) 
    FROM (
        SELECT 
            T.ID AS ConfigParamDEV2_ID, 
            T.ConfigID AS ConfigParamDEV2_ConfigID, 
            T.effDT AS ConfigParamDEV2_effDT, 
            T.trmDT AS ConfigParamDEV2_trmDT, 
            T.ParamDefinitionsID AS ConfigParamDEV2_ParamDefinitionsID, 
            T.isRefOnly AS ConfigParamDEV2_isRefOnly, 
            T.[value] AS ConfigParamDEV2_value, 
            T.valueUseageComments AS ConfigParamDEV2_valueUseageComments, 
            T.createDT AS ConfigParamDEV2_createDT, 
            T.createUser AS ConfigParamDEV2_createUser, 
            T.updateDT AS ConfigParamDEV2_updateDT, 
            T.updateUser AS ConfigParamDEV2_updateUser, 
            True AS _from0, 
            T.ParamDefinition_ID AS [ConfigParamDEV2_ParamDefinition.ConfigParamDEV2_ParamDefinition_Target.ID]
        FROM CodeFirstDatabase.ConfigParamDEV2 AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for ConfigMgrContext.ConfigParamDEV2_ParamDefinition.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView32()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing ConfigParamDEV2_ParamDefinition
        [Company.DIV.ConfigMgr.Data.ConfigParamDEV2_ParamDefinition](T3.[ConfigParamDEV2_ParamDefinition.ConfigParamDEV2_ParamDefinition_Source], T3.[ConfigParamDEV2_ParamDefinition.ConfigParamDEV2_ParamDefinition_Target])
    FROM (
        SELECT -- Constructing ConfigParamDEV2_ParamDefinition_Source
            CreateRef(ConfigMgrContext.configParamDev2, row(T2.[ConfigParamDEV2_ParamDefinition.ConfigParamDEV2_ParamDefinition_Source.ID]), [Company.DIV.ConfigMgr.Data.ConfigParamDEV2]) AS [ConfigParamDEV2_ParamDefinition.ConfigParamDEV2_ParamDefinition_Source], 
            T2.[ConfigParamDEV2_ParamDefinition.ConfigParamDEV2_ParamDefinition_Target]
        FROM (
            SELECT -- Constructing ConfigParamDEV2_ParamDefinition_Target
                T1.[ConfigParamDEV2_ParamDefinition.ConfigParamDEV2_ParamDefinition_Source.ID], 
                CreateRef(ConfigMgrContext.paramDefinitions, row(T1.[ConfigParamDEV2_ParamDefinition.ConfigParamDEV2_ParamDefinition_Target.ID]), [Company.DIV.ConfigMgr.Data.ParamDefinition]) AS [ConfigParamDEV2_ParamDefinition.ConfigParamDEV2_ParamDefinition_Target]
            FROM (
                SELECT 
                    T.ID AS [ConfigParamDEV2_ParamDefinition.ConfigParamDEV2_ParamDefinition_Source.ID], 
                    T.ParamDefinition_ID AS [ConfigParamDEV2_ParamDefinition.ConfigParamDEV2_ParamDefinition_Target.ID], 
                    True AS _from0
                FROM CodeFirstDatabase.ConfigParamDEV2 AS T
            ) AS T1
        ) AS T2
    ) AS T3");
        }

        /// <summary>
        /// Gets the view for ConfigMgrContext.configParamPROD.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView33()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing configParamPROD
        [Company.DIV.ConfigMgr.Data.ConfigParamPROD](T1.ConfigParamPROD_ID, T1.ConfigParamPROD_ConfigID, T1.ConfigParamPROD_effDT, T1.ConfigParamPROD_trmDT, T1.ConfigParamPROD_ParamDefinitionsID, T1.ConfigParamPROD_isRefOnly, T1.ConfigParamPROD_value, T1.ConfigParamPROD_valueUseageComments, T1.ConfigParamPROD_createDT, T1.ConfigParamPROD_createUser, T1.ConfigParamPROD_updateDT, T1.ConfigParamPROD_updateUser) WITH 
        RELATIONSHIP(CREATEREF(ConfigMgrContext.paramDefinitions, ROW(T1.[ConfigParamPROD_ParamDefinition.ConfigParamPROD_ParamDefinition_Target.ID]),[Company.DIV.ConfigMgr.Data.ParamDefinition]),[Company.DIV.ConfigMgr.Data.ConfigParamPROD_ParamDefinition],ConfigParamPROD_ParamDefinition_Source,ConfigParamPROD_ParamDefinition_Target) 
    FROM (
        SELECT 
            T.ID AS ConfigParamPROD_ID, 
            T.ConfigID AS ConfigParamPROD_ConfigID, 
            T.effDT AS ConfigParamPROD_effDT, 
            T.trmDT AS ConfigParamPROD_trmDT, 
            T.ParamDefinitionsID AS ConfigParamPROD_ParamDefinitionsID, 
            T.isRefOnly AS ConfigParamPROD_isRefOnly, 
            T.[value] AS ConfigParamPROD_value, 
            T.valueUseageComments AS ConfigParamPROD_valueUseageComments, 
            T.createDT AS ConfigParamPROD_createDT, 
            T.createUser AS ConfigParamPROD_createUser, 
            T.updateDT AS ConfigParamPROD_updateDT, 
            T.updateUser AS ConfigParamPROD_updateUser, 
            True AS _from0, 
            T.ParamDefinition_ID AS [ConfigParamPROD_ParamDefinition.ConfigParamPROD_ParamDefinition_Target.ID]
        FROM CodeFirstDatabase.ConfigParamPROD AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for ConfigMgrContext.ConfigParamPROD_ParamDefinition.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView34()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing ConfigParamPROD_ParamDefinition
        [Company.DIV.ConfigMgr.Data.ConfigParamPROD_ParamDefinition](T3.[ConfigParamPROD_ParamDefinition.ConfigParamPROD_ParamDefinition_Source], T3.[ConfigParamPROD_ParamDefinition.ConfigParamPROD_ParamDefinition_Target])
    FROM (
        SELECT -- Constructing ConfigParamPROD_ParamDefinition_Source
            CreateRef(ConfigMgrContext.configParamPROD, row(T2.[ConfigParamPROD_ParamDefinition.ConfigParamPROD_ParamDefinition_Source.ID]), [Company.DIV.ConfigMgr.Data.ConfigParamPROD]) AS [ConfigParamPROD_ParamDefinition.ConfigParamPROD_ParamDefinition_Source], 
            T2.[ConfigParamPROD_ParamDefinition.ConfigParamPROD_ParamDefinition_Target]
        FROM (
            SELECT -- Constructing ConfigParamPROD_ParamDefinition_Target
                T1.[ConfigParamPROD_ParamDefinition.ConfigParamPROD_ParamDefinition_Source.ID], 
                CreateRef(ConfigMgrContext.paramDefinitions, row(T1.[ConfigParamPROD_ParamDefinition.ConfigParamPROD_ParamDefinition_Target.ID]), [Company.DIV.ConfigMgr.Data.ParamDefinition]) AS [ConfigParamPROD_ParamDefinition.ConfigParamPROD_ParamDefinition_Target]
            FROM (
                SELECT 
                    T.ID AS [ConfigParamPROD_ParamDefinition.ConfigParamPROD_ParamDefinition_Source.ID], 
                    T.ParamDefinition_ID AS [ConfigParamPROD_ParamDefinition.ConfigParamPROD_ParamDefinition_Target.ID], 
                    True AS _from0
                FROM CodeFirstDatabase.ConfigParamPROD AS T
            ) AS T1
        ) AS T2
    ) AS T3");
        }

        /// <summary>
        /// Gets the view for ConfigMgrContext.configParamQA1.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView35()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing configParamQA1
        [Company.DIV.ConfigMgr.Data.ConfigParamQA1](T1.ConfigParamQA1_ID, T1.ConfigParamQA1_ConfigID, T1.ConfigParamQA1_effDT, T1.ConfigParamQA1_trmDT, T1.ConfigParamQA1_ParamDefinitionsID, T1.ConfigParamQA1_isRefOnly, T1.ConfigParamQA1_value, T1.ConfigParamQA1_valueUseageComments, T1.ConfigParamQA1_createDT, T1.ConfigParamQA1_createUser, T1.ConfigParamQA1_updateDT, T1.ConfigParamQA1_updateUser) WITH 
        RELATIONSHIP(CREATEREF(ConfigMgrContext.paramDefinitions, ROW(T1.[ConfigParamQA1_ParamDefinition.ConfigParamQA1_ParamDefinition_Target.ID]),[Company.DIV.ConfigMgr.Data.ParamDefinition]),[Company.DIV.ConfigMgr.Data.ConfigParamQA1_ParamDefinition],ConfigParamQA1_ParamDefinition_Source,ConfigParamQA1_ParamDefinition_Target) 
    FROM (
        SELECT 
            T.ID AS ConfigParamQA1_ID, 
            T.ConfigID AS ConfigParamQA1_ConfigID, 
            T.effDT AS ConfigParamQA1_effDT, 
            T.trmDT AS ConfigParamQA1_trmDT, 
            T.ParamDefinitionsID AS ConfigParamQA1_ParamDefinitionsID, 
            T.isRefOnly AS ConfigParamQA1_isRefOnly, 
            T.[value] AS ConfigParamQA1_value, 
            T.valueUseageComments AS ConfigParamQA1_valueUseageComments, 
            T.createDT AS ConfigParamQA1_createDT, 
            T.createUser AS ConfigParamQA1_createUser, 
            T.updateDT AS ConfigParamQA1_updateDT, 
            T.updateUser AS ConfigParamQA1_updateUser, 
            True AS _from0, 
            T.ParamDefinition_ID AS [ConfigParamQA1_ParamDefinition.ConfigParamQA1_ParamDefinition_Target.ID]
        FROM CodeFirstDatabase.ConfigParamQA1 AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for ConfigMgrContext.ConfigParamQA1_ParamDefinition.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView36()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing ConfigParamQA1_ParamDefinition
        [Company.DIV.ConfigMgr.Data.ConfigParamQA1_ParamDefinition](T3.[ConfigParamQA1_ParamDefinition.ConfigParamQA1_ParamDefinition_Source], T3.[ConfigParamQA1_ParamDefinition.ConfigParamQA1_ParamDefinition_Target])
    FROM (
        SELECT -- Constructing ConfigParamQA1_ParamDefinition_Source
            CreateRef(ConfigMgrContext.configParamQA1, row(T2.[ConfigParamQA1_ParamDefinition.ConfigParamQA1_ParamDefinition_Source.ID]), [Company.DIV.ConfigMgr.Data.ConfigParamQA1]) AS [ConfigParamQA1_ParamDefinition.ConfigParamQA1_ParamDefinition_Source], 
            T2.[ConfigParamQA1_ParamDefinition.ConfigParamQA1_ParamDefinition_Target]
        FROM (
            SELECT -- Constructing ConfigParamQA1_ParamDefinition_Target
                T1.[ConfigParamQA1_ParamDefinition.ConfigParamQA1_ParamDefinition_Source.ID], 
                CreateRef(ConfigMgrContext.paramDefinitions, row(T1.[ConfigParamQA1_ParamDefinition.ConfigParamQA1_ParamDefinition_Target.ID]), [Company.DIV.ConfigMgr.Data.ParamDefinition]) AS [ConfigParamQA1_ParamDefinition.ConfigParamQA1_ParamDefinition_Target]
            FROM (
                SELECT 
                    T.ID AS [ConfigParamQA1_ParamDefinition.ConfigParamQA1_ParamDefinition_Source.ID], 
                    T.ParamDefinition_ID AS [ConfigParamQA1_ParamDefinition.ConfigParamQA1_ParamDefinition_Target.ID], 
                    True AS _from0
                FROM CodeFirstDatabase.ConfigParamQA1 AS T
            ) AS T1
        ) AS T2
    ) AS T3");
        }

        /// <summary>
        /// Gets the view for ConfigMgrContext.configParamQA2.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView37()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing configParamQA2
        [Company.DIV.ConfigMgr.Data.ConfigParamQA2](T1.ConfigParamQA2_ID, T1.ConfigParamQA2_ConfigID, T1.ConfigParamQA2_effDT, T1.ConfigParamQA2_trmDT, T1.ConfigParamQA2_ParamDefinitionsID, T1.ConfigParamQA2_isRefOnly, T1.ConfigParamQA2_value, T1.ConfigParamQA2_valueUseageComments, T1.ConfigParamQA2_createDT, T1.ConfigParamQA2_createUser, T1.ConfigParamQA2_updateDT, T1.ConfigParamQA2_updateUser) WITH 
        RELATIONSHIP(CREATEREF(ConfigMgrContext.paramDefinitions, ROW(T1.[ConfigParamQA2_ParamDefinition.ConfigParamQA2_ParamDefinition_Target.ID]),[Company.DIV.ConfigMgr.Data.ParamDefinition]),[Company.DIV.ConfigMgr.Data.ConfigParamQA2_ParamDefinition],ConfigParamQA2_ParamDefinition_Source,ConfigParamQA2_ParamDefinition_Target) 
    FROM (
        SELECT 
            T.ID AS ConfigParamQA2_ID, 
            T.ConfigID AS ConfigParamQA2_ConfigID, 
            T.effDT AS ConfigParamQA2_effDT, 
            T.trmDT AS ConfigParamQA2_trmDT, 
            T.ParamDefinitionsID AS ConfigParamQA2_ParamDefinitionsID, 
            T.isRefOnly AS ConfigParamQA2_isRefOnly, 
            T.[value] AS ConfigParamQA2_value, 
            T.valueUseageComments AS ConfigParamQA2_valueUseageComments, 
            T.createDT AS ConfigParamQA2_createDT, 
            T.createUser AS ConfigParamQA2_createUser, 
            T.updateDT AS ConfigParamQA2_updateDT, 
            T.updateUser AS ConfigParamQA2_updateUser, 
            True AS _from0, 
            T.ParamDefinition_ID AS [ConfigParamQA2_ParamDefinition.ConfigParamQA2_ParamDefinition_Target.ID]
        FROM CodeFirstDatabase.ConfigParamQA2 AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for ConfigMgrContext.ConfigParamQA2_ParamDefinition.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView38()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing ConfigParamQA2_ParamDefinition
        [Company.DIV.ConfigMgr.Data.ConfigParamQA2_ParamDefinition](T3.[ConfigParamQA2_ParamDefinition.ConfigParamQA2_ParamDefinition_Source], T3.[ConfigParamQA2_ParamDefinition.ConfigParamQA2_ParamDefinition_Target])
    FROM (
        SELECT -- Constructing ConfigParamQA2_ParamDefinition_Source
            CreateRef(ConfigMgrContext.configParamQA2, row(T2.[ConfigParamQA2_ParamDefinition.ConfigParamQA2_ParamDefinition_Source.ID]), [Company.DIV.ConfigMgr.Data.ConfigParamQA2]) AS [ConfigParamQA2_ParamDefinition.ConfigParamQA2_ParamDefinition_Source], 
            T2.[ConfigParamQA2_ParamDefinition.ConfigParamQA2_ParamDefinition_Target]
        FROM (
            SELECT -- Constructing ConfigParamQA2_ParamDefinition_Target
                T1.[ConfigParamQA2_ParamDefinition.ConfigParamQA2_ParamDefinition_Source.ID], 
                CreateRef(ConfigMgrContext.paramDefinitions, row(T1.[ConfigParamQA2_ParamDefinition.ConfigParamQA2_ParamDefinition_Target.ID]), [Company.DIV.ConfigMgr.Data.ParamDefinition]) AS [ConfigParamQA2_ParamDefinition.ConfigParamQA2_ParamDefinition_Target]
            FROM (
                SELECT 
                    T.ID AS [ConfigParamQA2_ParamDefinition.ConfigParamQA2_ParamDefinition_Source.ID], 
                    T.ParamDefinition_ID AS [ConfigParamQA2_ParamDefinition.ConfigParamQA2_ParamDefinition_Target.ID], 
                    True AS _from0
                FROM CodeFirstDatabase.ConfigParamQA2 AS T
            ) AS T1
        ) AS T2
    ) AS T3");
        }

        /// <summary>
        /// Gets the view for ConfigMgrContext.configParamSTG1.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView39()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing configParamSTG1
        [Company.DIV.ConfigMgr.Data.ConfigParamSTG1](T1.ConfigParamSTG1_ID, T1.ConfigParamSTG1_ConfigID, T1.ConfigParamSTG1_effDT, T1.ConfigParamSTG1_trmDT, T1.ConfigParamSTG1_ParamDefinitionsID, T1.ConfigParamSTG1_isRefOnly, T1.ConfigParamSTG1_value, T1.ConfigParamSTG1_valueUseageComments, T1.ConfigParamSTG1_createDT, T1.ConfigParamSTG1_createUser, T1.ConfigParamSTG1_updateDT, T1.ConfigParamSTG1_updateUser) WITH 
        RELATIONSHIP(CREATEREF(ConfigMgrContext.paramDefinitions, ROW(T1.[ConfigParamSTG1_ParamDefinition.ConfigParamSTG1_ParamDefinition_Target.ID]),[Company.DIV.ConfigMgr.Data.ParamDefinition]),[Company.DIV.ConfigMgr.Data.ConfigParamSTG1_ParamDefinition],ConfigParamSTG1_ParamDefinition_Source,ConfigParamSTG1_ParamDefinition_Target) 
    FROM (
        SELECT 
            T.ID AS ConfigParamSTG1_ID, 
            T.ConfigID AS ConfigParamSTG1_ConfigID, 
            T.effDT AS ConfigParamSTG1_effDT, 
            T.trmDT AS ConfigParamSTG1_trmDT, 
            T.ParamDefinitionsID AS ConfigParamSTG1_ParamDefinitionsID, 
            T.isRefOnly AS ConfigParamSTG1_isRefOnly, 
            T.[value] AS ConfigParamSTG1_value, 
            T.valueUseageComments AS ConfigParamSTG1_valueUseageComments, 
            T.createDT AS ConfigParamSTG1_createDT, 
            T.createUser AS ConfigParamSTG1_createUser, 
            T.updateDT AS ConfigParamSTG1_updateDT, 
            T.updateUser AS ConfigParamSTG1_updateUser, 
            True AS _from0, 
            T.ParamDefinition_ID AS [ConfigParamSTG1_ParamDefinition.ConfigParamSTG1_ParamDefinition_Target.ID]
        FROM CodeFirstDatabase.ConfigParamSTG1 AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for ConfigMgrContext.ConfigParamSTG1_ParamDefinition.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView40()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing ConfigParamSTG1_ParamDefinition
        [Company.DIV.ConfigMgr.Data.ConfigParamSTG1_ParamDefinition](T3.[ConfigParamSTG1_ParamDefinition.ConfigParamSTG1_ParamDefinition_Source], T3.[ConfigParamSTG1_ParamDefinition.ConfigParamSTG1_ParamDefinition_Target])
    FROM (
        SELECT -- Constructing ConfigParamSTG1_ParamDefinition_Source
            CreateRef(ConfigMgrContext.configParamSTG1, row(T2.[ConfigParamSTG1_ParamDefinition.ConfigParamSTG1_ParamDefinition_Source.ID]), [Company.DIV.ConfigMgr.Data.ConfigParamSTG1]) AS [ConfigParamSTG1_ParamDefinition.ConfigParamSTG1_ParamDefinition_Source], 
            T2.[ConfigParamSTG1_ParamDefinition.ConfigParamSTG1_ParamDefinition_Target]
        FROM (
            SELECT -- Constructing ConfigParamSTG1_ParamDefinition_Target
                T1.[ConfigParamSTG1_ParamDefinition.ConfigParamSTG1_ParamDefinition_Source.ID], 
                CreateRef(ConfigMgrContext.paramDefinitions, row(T1.[ConfigParamSTG1_ParamDefinition.ConfigParamSTG1_ParamDefinition_Target.ID]), [Company.DIV.ConfigMgr.Data.ParamDefinition]) AS [ConfigParamSTG1_ParamDefinition.ConfigParamSTG1_ParamDefinition_Target]
            FROM (
                SELECT 
                    T.ID AS [ConfigParamSTG1_ParamDefinition.ConfigParamSTG1_ParamDefinition_Source.ID], 
                    T.ParamDefinition_ID AS [ConfigParamSTG1_ParamDefinition.ConfigParamSTG1_ParamDefinition_Target.ID], 
                    True AS _from0
                FROM CodeFirstDatabase.ConfigParamSTG1 AS T
            ) AS T1
        ) AS T2
    ) AS T3");
        }

        /// <summary>
        /// Gets the view for ConfigMgrContext.configParamSTG2.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView41()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing configParamSTG2
        [Company.DIV.ConfigMgr.Data.ConfigParamSTG2](T1.ConfigParamSTG2_ID, T1.ConfigParamSTG2_ConfigID, T1.ConfigParamSTG2_effDT, T1.ConfigParamSTG2_trmDT, T1.ConfigParamSTG2_ParamDefinitionsID, T1.ConfigParamSTG2_isRefOnly, T1.ConfigParamSTG2_value, T1.ConfigParamSTG2_valueUseageComments, T1.ConfigParamSTG2_createDT, T1.ConfigParamSTG2_createUser, T1.ConfigParamSTG2_updateDT, T1.ConfigParamSTG2_updateUser) WITH 
        RELATIONSHIP(CREATEREF(ConfigMgrContext.paramDefinitions, ROW(T1.[ConfigParamSTG2_ParamDefinition.ConfigParamSTG2_ParamDefinition_Target.ID]),[Company.DIV.ConfigMgr.Data.ParamDefinition]),[Company.DIV.ConfigMgr.Data.ConfigParamSTG2_ParamDefinition],ConfigParamSTG2_ParamDefinition_Source,ConfigParamSTG2_ParamDefinition_Target) 
    FROM (
        SELECT 
            T.ID AS ConfigParamSTG2_ID, 
            T.ConfigID AS ConfigParamSTG2_ConfigID, 
            T.effDT AS ConfigParamSTG2_effDT, 
            T.trmDT AS ConfigParamSTG2_trmDT, 
            T.ParamDefinitionsID AS ConfigParamSTG2_ParamDefinitionsID, 
            T.isRefOnly AS ConfigParamSTG2_isRefOnly, 
            T.[value] AS ConfigParamSTG2_value, 
            T.valueUseageComments AS ConfigParamSTG2_valueUseageComments, 
            T.createDT AS ConfigParamSTG2_createDT, 
            T.createUser AS ConfigParamSTG2_createUser, 
            T.updateDT AS ConfigParamSTG2_updateDT, 
            T.updateUser AS ConfigParamSTG2_updateUser, 
            True AS _from0, 
            T.ParamDefinition_ID AS [ConfigParamSTG2_ParamDefinition.ConfigParamSTG2_ParamDefinition_Target.ID]
        FROM CodeFirstDatabase.ConfigParamSTG2 AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for ConfigMgrContext.ConfigParamSTG2_ParamDefinition.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView42()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing ConfigParamSTG2_ParamDefinition
        [Company.DIV.ConfigMgr.Data.ConfigParamSTG2_ParamDefinition](T3.[ConfigParamSTG2_ParamDefinition.ConfigParamSTG2_ParamDefinition_Source], T3.[ConfigParamSTG2_ParamDefinition.ConfigParamSTG2_ParamDefinition_Target])
    FROM (
        SELECT -- Constructing ConfigParamSTG2_ParamDefinition_Source
            CreateRef(ConfigMgrContext.configParamSTG2, row(T2.[ConfigParamSTG2_ParamDefinition.ConfigParamSTG2_ParamDefinition_Source.ID]), [Company.DIV.ConfigMgr.Data.ConfigParamSTG2]) AS [ConfigParamSTG2_ParamDefinition.ConfigParamSTG2_ParamDefinition_Source], 
            T2.[ConfigParamSTG2_ParamDefinition.ConfigParamSTG2_ParamDefinition_Target]
        FROM (
            SELECT -- Constructing ConfigParamSTG2_ParamDefinition_Target
                T1.[ConfigParamSTG2_ParamDefinition.ConfigParamSTG2_ParamDefinition_Source.ID], 
                CreateRef(ConfigMgrContext.paramDefinitions, row(T1.[ConfigParamSTG2_ParamDefinition.ConfigParamSTG2_ParamDefinition_Target.ID]), [Company.DIV.ConfigMgr.Data.ParamDefinition]) AS [ConfigParamSTG2_ParamDefinition.ConfigParamSTG2_ParamDefinition_Target]
            FROM (
                SELECT 
                    T.ID AS [ConfigParamSTG2_ParamDefinition.ConfigParamSTG2_ParamDefinition_Source.ID], 
                    T.ParamDefinition_ID AS [ConfigParamSTG2_ParamDefinition.ConfigParamSTG2_ParamDefinition_Target.ID], 
                    True AS _from0
                FROM CodeFirstDatabase.ConfigParamSTG2 AS T
            ) AS T1
        ) AS T2
    ) AS T3");
        }

        /// <summary>
        /// Gets the view for ConfigMgrContext.paramType.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView43()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing paramType
        [Company.DIV.ConfigMgr.Data.ParamType](T1.ParamType_ID, T1.ParamType_type, T1.ParamType_createDT, T1.ParamType_createUser, T1.ParamType_updateDT, T1.ParamType_updateUser)
    FROM (
        SELECT 
            T.ID AS ParamType_ID, 
            T.type AS ParamType_type, 
            T.createDT AS ParamType_createDT, 
            T.createUser AS ParamType_createUser, 
            T.updateDT AS ParamType_updateDT, 
            T.updateUser AS ParamType_updateUser, 
            True AS _from0
        FROM CodeFirstDatabase.ParamType AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for ConfigMgrContext.paramVersion.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView44()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing paramVersion
        [Company.DIV.ConfigMgr.Data.ParamVersion](T1.ParamVersion_ID, T1.ParamVersion_version, T1.ParamVersion_description, T1.ParamVersion_createDT, T1.ParamVersion_createUser, T1.ParamVersion_updateDT, T1.ParamVersion_updateUser)
    FROM (
        SELECT 
            T.ID AS ParamVersion_ID, 
            T.version AS ParamVersion_version, 
            T.description AS ParamVersion_description, 
            T.createDT AS ParamVersion_createDT, 
            T.createUser AS ParamVersion_createUser, 
            T.updateDT AS ParamVersion_updateDT, 
            T.updateUser AS ParamVersion_updateUser, 
            True AS _from0
        FROM CodeFirstDatabase.ParamVersion AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for ConfigMgrContext.executable.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView45()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing executable
        [Company.DIV.ConfigMgr.Data.Executable](T1.Executable_ID, T1.Executable_ParamVersionID, T1.Executable_AppID, T1.Executable_nameWExtension, T1.Executable_description, T1.Executable_createDT, T1.Executable_createUser, T1.Executable_updateDT, T1.Executable_updateUser)
    FROM (
        SELECT 
            T.ID AS Executable_ID, 
            T.ParamVersionID AS Executable_ParamVersionID, 
            T.AppID AS Executable_AppID, 
            T.nameWExtension AS Executable_nameWExtension, 
            T.description AS Executable_description, 
            T.createDT AS Executable_createDT, 
            T.createUser AS Executable_createUser, 
            T.updateDT AS Executable_updateDT, 
            T.updateUser AS Executable_updateUser, 
            True AS _from0
        FROM CodeFirstDatabase.Executable AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for ConfigMgrContext.pathServer.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView46()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing pathServer
        [Company.DIV.ConfigMgr.Data.PathServer](T1.PathServer_ID, T1.PathServer_server, T1.PathServer_path, T1.PathServer_createDT, T1.PathServer_createUser, T1.PathServer_updateDT, T1.PathServer_updateUser)
    FROM (
        SELECT 
            T.ID AS PathServer_ID, 
            T.server AS PathServer_server, 
            T.path AS PathServer_path, 
            T.createDT AS PathServer_createDT, 
            T.createUser AS PathServer_createUser, 
            T.updateDT AS PathServer_updateDT, 
            T.updateUser AS PathServer_updateUser, 
            True AS _from0
        FROM CodeFirstDatabase.PathServer AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for ConfigMgrContext.pathShare.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView47()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing pathShare
        [Company.DIV.ConfigMgr.Data.PathShare](T1.PathShare_ID, T1.PathShare_share, T1.PathShare_path, T1.PathShare_createDT, T1.PathShare_createUser, T1.PathShare_updateDT, T1.PathShare_updateUser)
    FROM (
        SELECT 
            T.ID AS PathShare_ID, 
            T.share AS PathShare_share, 
            T.path AS PathShare_path, 
            T.createDT AS PathShare_createDT, 
            T.createUser AS PathShare_createUser, 
            T.updateDT AS PathShare_updateDT, 
            T.updateUser AS PathShare_updateUser, 
            True AS _from0
        FROM CodeFirstDatabase.PathShare AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for ConfigMgrContext.executableFunctions.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView48()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing executableFunctions
        [Company.DIV.ConfigMgr.Data.PrimaryFunction](T1.PrimaryFunction_ID, T1.PrimaryFunction_abbr, T1.PrimaryFunction_description, T1.PrimaryFunction_createDT, T1.PrimaryFunction_createUser, T1.PrimaryFunction_updateDT, T1.PrimaryFunction_updateUser)
    FROM (
        SELECT 
            T.ID AS PrimaryFunction_ID, 
            T.abbr AS PrimaryFunction_abbr, 
            T.description AS PrimaryFunction_description, 
            T.createDT AS PrimaryFunction_createDT, 
            T.createUser AS PrimaryFunction_createUser, 
            T.updateDT AS PrimaryFunction_updateDT, 
            T.updateUser AS PrimaryFunction_updateUser, 
            True AS _from0
        FROM CodeFirstDatabase.PrimaryFunction AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for ConfigMgrContext.jPlanLOB.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView49()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing jPlanLOB
        [Company.DIV.ConfigMgr.Data.JPlanLOB](T1.JPlanLOB_ID, T1.JPlanLOB_planID, T1.JPlanLOB_LineOfBusinessID, T1.JPlanLOB_createDT, T1.JPlanLOB_createUser, T1.JPlanLOB_updateDT, T1.JPlanLOB_updateUser)
    FROM (
        SELECT 
            T.ID AS JPlanLOB_ID, 
            T.planID AS JPlanLOB_planID, 
            T.LineOfBusinessID AS JPlanLOB_LineOfBusinessID, 
            T.createDT AS JPlanLOB_createDT, 
            T.createUser AS JPlanLOB_createUser, 
            T.updateDT AS JPlanLOB_updateDT, 
            T.updateUser AS JPlanLOB_updateUser, 
            True AS _from0
        FROM CodeFirstDatabase.JPlanLOB AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for ConfigMgrContext.lineOfBusiness.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView50()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing lineOfBusiness
        [Company.DIV.ConfigMgr.Data.LineOfBusiness](T1.LineOfBusiness_ID, T1.LineOfBusiness_abbr, T1.LineOfBusiness_descr, T1.LineOfBusiness_createDT, T1.LineOfBusiness_createUser, T1.LineOfBusiness_updateDT, T1.LineOfBusiness_updateUser)
    FROM (
        SELECT 
            T.ID AS LineOfBusiness_ID, 
            T.abbr AS LineOfBusiness_abbr, 
            T.descr AS LineOfBusiness_descr, 
            T.createDT AS LineOfBusiness_createDT, 
            T.createUser AS LineOfBusiness_createUser, 
            T.updateDT AS LineOfBusiness_updateDT, 
            T.updateUser AS LineOfBusiness_updateUser, 
            True AS _from0
        FROM CodeFirstDatabase.LineOfBusiness AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for ConfigMgrContext.plan.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView51()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing plan
        [Company.DIV.ConfigMgr.Data.Plan](T1.Plan_ID, T1.Plan_abbr, T1.Plan_descr, T1.Plan_createDT, T1.Plan_createUser, T1.Plan_updateDT, T1.Plan_updateUser)
    FROM (
        SELECT 
            T.ID AS Plan_ID, 
            T.abbr AS Plan_abbr, 
            T.descr AS Plan_descr, 
            T.createDT AS Plan_createDT, 
            T.createUser AS Plan_createUser, 
            T.updateDT AS Plan_updateDT, 
            T.updateUser AS Plan_updateUser, 
            True AS _from0
        FROM CodeFirstDatabase.Plan AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for ConfigMgrContext.PathServer_PathShare.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView52()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing PathServer_PathShare
        [Company.DIV.ConfigMgr.Data.PathServer_PathShare](T3.[PathServer_PathShare.PathServer_PathShare_Source], T3.[PathServer_PathShare.PathServer_PathShare_Target])
    FROM (
        SELECT -- Constructing PathServer_PathShare_Source
            CreateRef(ConfigMgrContext.pathServer, row(T2.[PathServer_PathShare.PathServer_PathShare_Source.ID]), [Company.DIV.ConfigMgr.Data.PathServer]) AS [PathServer_PathShare.PathServer_PathShare_Source], 
            T2.[PathServer_PathShare.PathServer_PathShare_Target]
        FROM (
            SELECT -- Constructing PathServer_PathShare_Target
                T1.[PathServer_PathShare.PathServer_PathShare_Source.ID], 
                CreateRef(ConfigMgrContext.pathShare, row(T1.[PathServer_PathShare.PathServer_PathShare_Target.ID]), [Company.DIV.ConfigMgr.Data.PathShare]) AS [PathServer_PathShare.PathServer_PathShare_Target]
            FROM (
                SELECT 
                    T.pathServer AS [PathServer_PathShare.PathServer_PathShare_Source.ID], 
                    T.pathShare AS [PathServer_PathShare.PathServer_PathShare_Target.ID], 
                    True AS _from0
                FROM CodeFirstDatabase.PathServerPathShare AS T
            ) AS T1
        ) AS T2
    ) AS T3");
        }

        /// <summary>
        /// Gets the view for ConfigMgrContext.Executable_PathServers.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView53()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing Executable_PathServers
        [Company.DIV.ConfigMgr.Data.Executable_PathServers](T3.[Executable_PathServers.Executable_PathServers_Source], T3.[Executable_PathServers.Executable_PathServers_Target])
    FROM (
        SELECT -- Constructing Executable_PathServers_Source
            CreateRef(ConfigMgrContext.executable, row(T2.[Executable_PathServers.Executable_PathServers_Source.ID]), [Company.DIV.ConfigMgr.Data.Executable]) AS [Executable_PathServers.Executable_PathServers_Source], 
            T2.[Executable_PathServers.Executable_PathServers_Target]
        FROM (
            SELECT -- Constructing Executable_PathServers_Target
                T1.[Executable_PathServers.Executable_PathServers_Source.ID], 
                CreateRef(ConfigMgrContext.pathServer, row(T1.[Executable_PathServers.Executable_PathServers_Target.ID]), [Company.DIV.ConfigMgr.Data.PathServer]) AS [Executable_PathServers.Executable_PathServers_Target]
            FROM (
                SELECT 
                    T.pathServer AS [Executable_PathServers.Executable_PathServers_Source.ID], 
                    T.executable AS [Executable_PathServers.Executable_PathServers_Target.ID], 
                    True AS _from0
                FROM CodeFirstDatabase.ExecutablePathServer AS T
            ) AS T1
        ) AS T2
    ) AS T3");
        }

        /// <summary>
        /// Gets the view for ConfigMgrContext.Executable_PrimaryFunctions.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView54()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing Executable_PrimaryFunctions
        [Company.DIV.ConfigMgr.Data.Executable_PrimaryFunctions](T3.[Executable_PrimaryFunctions.Executable_PrimaryFunctions_Source], T3.[Executable_PrimaryFunctions.Executable_PrimaryFunctions_Target])
    FROM (
        SELECT -- Constructing Executable_PrimaryFunctions_Source
            CreateRef(ConfigMgrContext.executable, row(T2.[Executable_PrimaryFunctions.Executable_PrimaryFunctions_Source.ID]), [Company.DIV.ConfigMgr.Data.Executable]) AS [Executable_PrimaryFunctions.Executable_PrimaryFunctions_Source], 
            T2.[Executable_PrimaryFunctions.Executable_PrimaryFunctions_Target]
        FROM (
            SELECT -- Constructing Executable_PrimaryFunctions_Target
                T1.[Executable_PrimaryFunctions.Executable_PrimaryFunctions_Source.ID], 
                CreateRef(ConfigMgrContext.executableFunctions, row(T1.[Executable_PrimaryFunctions.Executable_PrimaryFunctions_Target.ID]), [Company.DIV.ConfigMgr.Data.PrimaryFunction]) AS [Executable_PrimaryFunctions.Executable_PrimaryFunctions_Target]
            FROM (
                SELECT 
                    T.primaryFunction AS [Executable_PrimaryFunctions.Executable_PrimaryFunctions_Source.ID], 
                    T.executable AS [Executable_PrimaryFunctions.Executable_PrimaryFunctions_Target.ID], 
                    True AS _from0
                FROM CodeFirstDatabase.ExecutablePrimaryFunction AS T
            ) AS T1
        ) AS T2
    ) AS T3");
        }

        /// <summary>
        /// Gets the view for ConfigMgrContext.Config_Executables.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView55()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing Config_Executables
        [Company.DIV.ConfigMgr.Data.Config_Executables](T3.[Config_Executables.Config_Executables_Source], T3.[Config_Executables.Config_Executables_Target])
    FROM (
        SELECT -- Constructing Config_Executables_Source
            CreateRef(ConfigMgrContext.config, row(T2.[Config_Executables.Config_Executables_Source.ID]), [Company.DIV.ConfigMgr.Data.Config]) AS [Config_Executables.Config_Executables_Source], 
            T2.[Config_Executables.Config_Executables_Target]
        FROM (
            SELECT -- Constructing Config_Executables_Target
                T1.[Config_Executables.Config_Executables_Source.ID], 
                CreateRef(ConfigMgrContext.executable, row(T1.[Config_Executables.Config_Executables_Target.ID]), [Company.DIV.ConfigMgr.Data.Executable]) AS [Config_Executables.Config_Executables_Target]
            FROM (
                SELECT 
                    T.executable AS [Config_Executables.Config_Executables_Source.ID], 
                    T.config AS [Config_Executables.Config_Executables_Target.ID], 
                    True AS _from0
                FROM CodeFirstDatabase.ConfigExecutable AS T
            ) AS T1
        ) AS T2
    ) AS T3");
        }

        /// <summary>
        /// Gets the view for ConfigMgrContext.Config_JPlanLOBs.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView56()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing Config_JPlanLOBs
        [Company.DIV.ConfigMgr.Data.Config_JPlanLOBs](T3.[Config_JPlanLOBs.Config_JPlanLOBs_Source], T3.[Config_JPlanLOBs.Config_JPlanLOBs_Target])
    FROM (
        SELECT -- Constructing Config_JPlanLOBs_Source
            CreateRef(ConfigMgrContext.config, row(T2.[Config_JPlanLOBs.Config_JPlanLOBs_Source.ID]), [Company.DIV.ConfigMgr.Data.Config]) AS [Config_JPlanLOBs.Config_JPlanLOBs_Source], 
            T2.[Config_JPlanLOBs.Config_JPlanLOBs_Target]
        FROM (
            SELECT -- Constructing Config_JPlanLOBs_Target
                T1.[Config_JPlanLOBs.Config_JPlanLOBs_Source.ID], 
                CreateRef(ConfigMgrContext.jPlanLOB, row(T1.[Config_JPlanLOBs.Config_JPlanLOBs_Target.ID]), [Company.DIV.ConfigMgr.Data.JPlanLOB]) AS [Config_JPlanLOBs.Config_JPlanLOBs_Target]
            FROM (
                SELECT 
                    T.jPlanLOB AS [Config_JPlanLOBs.Config_JPlanLOBs_Source.ID], 
                    T.config AS [Config_JPlanLOBs.Config_JPlanLOBs_Target.ID], 
                    True AS _from0
                FROM CodeFirstDatabase.ConfigJPlanLOB AS T
            ) AS T1
        ) AS T2
    ) AS T3");
        }

        /// <summary>
        /// Gets the view for ConfigMgrContext.Config_Plans.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView57()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing Config_Plans
        [Company.DIV.ConfigMgr.Data.Config_Plans](T3.[Config_Plans.Config_Plans_Source], T3.[Config_Plans.Config_Plans_Target])
    FROM (
        SELECT -- Constructing Config_Plans_Source
            CreateRef(ConfigMgrContext.config, row(T2.[Config_Plans.Config_Plans_Source.ID]), [Company.DIV.ConfigMgr.Data.Config]) AS [Config_Plans.Config_Plans_Source], 
            T2.[Config_Plans.Config_Plans_Target]
        FROM (
            SELECT -- Constructing Config_Plans_Target
                T1.[Config_Plans.Config_Plans_Source.ID], 
                CreateRef(ConfigMgrContext.plan, row(T1.[Config_Plans.Config_Plans_Target.ID]), [Company.DIV.ConfigMgr.Data.Plan]) AS [Config_Plans.Config_Plans_Target]
            FROM (
                SELECT 
                    T.plan AS [Config_Plans.Config_Plans_Source.ID], 
                    T.config AS [Config_Plans.Config_Plans_Target.ID], 
                    True AS _from0
                FROM CodeFirstDatabase.ConfigPlan AS T
            ) AS T1
        ) AS T2
    ) AS T3");
        }

        /// <summary>
        /// Gets the view for ConfigMgrContext.App_Plans.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView58()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing App_Plans
        [Company.DIV.ConfigMgr.Data.App_Plans](T3.[App_Plans.App_Plans_Source], T3.[App_Plans.App_Plans_Target])
    FROM (
        SELECT -- Constructing App_Plans_Source
            CreateRef(ConfigMgrContext.app, row(T2.[App_Plans.App_Plans_Source.ID]), [Company.DIV.ConfigMgr.Data.App]) AS [App_Plans.App_Plans_Source], 
            T2.[App_Plans.App_Plans_Target]
        FROM (
            SELECT -- Constructing App_Plans_Target
                T1.[App_Plans.App_Plans_Source.ID], 
                CreateRef(ConfigMgrContext.plan, row(T1.[App_Plans.App_Plans_Target.ID]), [Company.DIV.ConfigMgr.Data.Plan]) AS [App_Plans.App_Plans_Target]
            FROM (
                SELECT 
                    T.app AS [App_Plans.App_Plans_Source.ID], 
                    T.plan AS [App_Plans.App_Plans_Target.ID], 
                    True AS _from0
                FROM CodeFirstDatabase.AppPlan AS T
            ) AS T1
        ) AS T2
    ) AS T3");
        }
    }
}
